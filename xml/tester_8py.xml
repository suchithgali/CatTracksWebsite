<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="tester_8py" kind="file" language="Python">
    <compoundname>tester.py</compoundname>
    <innernamespace refid="namespacetester">tester</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetester_1aaccb9dff0d9481dceaffc98f77918b9a" refkind="member"><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetester_1aaccb9dff0d9481dceaffc98f77918b9a" kindref="member">simple_calculator</ref>(expression):</highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/>list_expression<sp/>=<sp/>list(expression)</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/>print(list_expression)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/>int_list_expression<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>len(list_expression):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>combined_digit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>list_expression[i].isdigit()<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>len(list_expression):</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined_digit<sp/>+=<sp/>list_expression[i]</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i+=<sp/>1</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int_list_expression.append(int(combined_digit))</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>list_expression[i]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>list_expression[i]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_list_expression.append(list_expression[i])</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i+=<sp/>1</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>final<sp/>=<sp/>int_list_expression[0]</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(int_list_expression)<sp/>-<sp/>1):</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int_list_expression[i]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;+&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final<sp/>+=<sp/>int_list_expression[i<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>int_list_expression[i]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final<sp/>-=<sp/>int_list_expression[i<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>final</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal">print(<ref refid="namespacetester_1aaccb9dff0d9481dceaffc98f77918b9a" kindref="member">simple_calculator</ref>(</highlight><highlight class="stringliteral">&quot;655+5+7&quot;</highlight><highlight class="normal">))</highlight></codeline>
    </programlisting>
    <location file="tester.py"/>
  </compounddef>
</doxygen>
