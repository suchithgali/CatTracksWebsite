<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_search_8py_source" xml:lang="en-US">
<title>search.py</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_search_8py_source_1l00001"/><link linkend="_namespacesearch">00001</link> <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_search_8py_source_1l00002"/>00002 <emphasis role="comment">#start_time&#32;=&#32;time.time()</emphasis>
<anchor xml:id="_search_8py_source_1l00003"/>00003 <emphasis role="keyword">from</emphasis>&#32;datetime&#32;<emphasis role="keyword">import</emphasis>&#32;datetime
<anchor xml:id="_search_8py_source_1l00004"/>00004 <emphasis role="keyword">import</emphasis>&#32;pytz
<anchor xml:id="_search_8py_source_1l00005"/><link linkend="_namespacesearch_1a1ba9eddeb86e4db183ff598fceb4e100">00005</link> tz_LA&#32;=&#32;pytz.timezone(<emphasis role="stringliteral">&apos;America/Los_Angeles&apos;</emphasis>)
<anchor xml:id="_search_8py_source_1l00006"/><link linkend="_namespacesearch_1a30336eeb7592365e0e15024a1ec4c5d9">00006</link> datetime_LA&#32;=&#32;datetime.now(tz_LA)
<anchor xml:id="_search_8py_source_1l00007"/>00007 
<anchor xml:id="_search_8py_source_1l00008"/>00008 <emphasis role="keyword">from</emphasis>&#32;route_datatypes&#32;<emphasis role="keyword">import</emphasis>*
<anchor xml:id="_search_8py_source_1l00009"/>00009 
<anchor xml:id="_search_8py_source_1l00010"/><link linkend="_namespacesearch_1a36f59a5e5bc6ca64fa450d3969cf89ac">00010</link> placeFoundq1&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_search_8py_source_1l00011"/><link linkend="_namespacesearch_1a46b2d30619fc3b9b36b2321a90100532">00011</link> placeFoundq2&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_search_8py_source_1l00012"/><link linkend="_namespacesearch_1aa0a2895db358e9e68e0f40f93d11dd85">00012</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1aa0a2895db358e9e68e0f40f93d11dd85">validatePlaceq1</link>(target,&#32;start,&#32;end):
<anchor xml:id="_search_8py_source_1l00013"/>00013 &#32;&#32;&#32;&#32;places.sort()
<anchor xml:id="_search_8py_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;placeFoundq1
<anchor xml:id="_search_8py_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(start&#32;&gt;&#32;end):
<anchor xml:id="_search_8py_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeFoundq1&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_search_8py_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;placeFoundq1
<anchor xml:id="_search_8py_source_1l00018"/>00018 &#32;&#32;&#32;&#32;middle&#32;=&#32;(start&#32;+&#32;end)&#32;//&#32;2
<anchor xml:id="_search_8py_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(places[middle]&#32;==&#32;target):
<anchor xml:id="_search_8py_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeFoundq1&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_search_8py_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;placeFoundq1
<anchor xml:id="_search_8py_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;(places[middle]&#32;&gt;&#32;target):
<anchor xml:id="_search_8py_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacesearch_1aa0a2895db358e9e68e0f40f93d11dd85">validatePlaceq1</link>(target,&#32;start,&#32;middle&#32;-&#32;1)
<anchor xml:id="_search_8py_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_search_8py_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacesearch_1aa0a2895db358e9e68e0f40f93d11dd85">validatePlaceq1</link>(target,&#32;middle&#32;+&#32;1,&#32;end)
<anchor xml:id="_search_8py_source_1l00026"/>00026 &#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00027"/><link linkend="_namespacesearch_1ae8f1d38ba40d7cb40299d427d773b353">00027</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1ae8f1d38ba40d7cb40299d427d773b353">validatePlaceq2</link>(target,&#32;start,&#32;end):
<anchor xml:id="_search_8py_source_1l00028"/>00028 &#32;&#32;&#32;&#32;places.sort()
<anchor xml:id="_search_8py_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;placeFoundq2
<anchor xml:id="_search_8py_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(start&#32;&gt;&#32;end):
<anchor xml:id="_search_8py_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeFoundq2&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_search_8py_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;placeFoundq2
<anchor xml:id="_search_8py_source_1l00033"/>00033 &#32;&#32;&#32;&#32;middle&#32;=&#32;(start&#32;+&#32;end)&#32;//&#32;2
<anchor xml:id="_search_8py_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(places[middle]&#32;==&#32;target):
<anchor xml:id="_search_8py_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeFoundq2&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_search_8py_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;placeFoundq2
<anchor xml:id="_search_8py_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;(places[middle]&#32;&gt;&#32;target):
<anchor xml:id="_search_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacesearch_1ae8f1d38ba40d7cb40299d427d773b353">validatePlaceq2</link>(target,&#32;start,&#32;middle&#32;-&#32;1)
<anchor xml:id="_search_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_search_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacesearch_1ae8f1d38ba40d7cb40299d427d773b353">validatePlaceq2</link>(target,&#32;middle&#32;+&#32;1,&#32;end)
<anchor xml:id="_search_8py_source_1l00041"/>00041 
<anchor xml:id="_search_8py_source_1l00042"/><link linkend="_namespacesearch_1a57b514484c4a9a99e08f49d70348ebd3">00042</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1a57b514484c4a9a99e08f49d70348ebd3">validateTime</link>(input_time):
<anchor xml:id="_search_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;valid_time
<anchor xml:id="_search_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_search_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsed_time&#32;=&#32;datetime.strptime(input_time,&#32;<emphasis role="stringliteral">&apos;%H:%M:%S&apos;</emphasis>)
<anchor xml:id="_search_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;0&#32;&lt;=&#32;parsed_time.hour&#32;&lt;&#32;24&#32;<emphasis role="keywordflow">and</emphasis>&#32;0&#32;&lt;=&#32;parsed_time.minute&#32;&lt;&#32;60&#32;<emphasis role="keywordflow">and</emphasis>&#32;0&#32;&lt;=&#32;parsed_time.second&#32;&lt;&#32;60:
<anchor xml:id="_search_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;valid_time&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_search_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_search_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;valid_time&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_search_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;ValueError:
<anchor xml:id="_search_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;valid_time&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_search_8py_source_1l00052"/>00052 
<anchor xml:id="_search_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00054"/>00054 
<anchor xml:id="_search_8py_source_1l00055"/><link linkend="_namespacesearch_1a2c811d67b8d23b88c06920cdbcc8b59a">00055</link> q1&#32;=&#32;input(<emphasis role="stringliteral">&quot;Where&#32;would&#32;you&#32;like&#32;to&#32;go?:&#32;&quot;</emphasis>)
<anchor xml:id="_search_8py_source_1l00056"/>00056 <link linkend="_namespacesearch_1aa0a2895db358e9e68e0f40f93d11dd85">validatePlaceq1</link>(q1,&#32;0,&#32;len(places)&#32;-&#32;1)
<anchor xml:id="_search_8py_source_1l00057"/>00057 
<anchor xml:id="_search_8py_source_1l00058"/>00058 <emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_search_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(placeFoundq1&#32;==&#32;<emphasis role="keyword">False</emphasis>):
<anchor xml:id="_search_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Invalid&#32;location&quot;</emphasis>)
<anchor xml:id="_search_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q1&#32;=&#32;input(<emphasis role="stringliteral">&apos;&apos;&apos;Where&#32;would&#32;you&#32;like&#32;to&#32;go?:&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00062"/>00062 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;R&#32;Street&#32;Village&#32;Apts,&#32;El&#32;Redondo&#32;Dr,&#32;Compass&#32;Pointe&#32;Apts,&#32;Merced&#32;College&#32;The&#32;Bus&#32;Terminal,&#32;M&#32;St.&#32;At&#32;Bellevue&#32;RD,&#32;University&#32;Transit&#32;Center,&#32;Promenade&#32;Center,&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Merced&#32;Mall&#32;Target,&#32;Walmart&#32;on&#32;Loughborough&#32;Dr,&#32;Amtrak&#32;Station,&#32;K&#32;St.&#32;Between&#32;18th&#32;&amp;&#32;19th,&#32;Merced&#32;Transpo&#32;(REQ),&#32;Rite&#32;Aid/Walgreens&#32;on&#32;G&#32;St,&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00064"/>00064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;El&#32;Portal&#32;Plaza&#32;&amp;&#32;G&#32;Street,&#32;Granville&#32;Apartments,&#32;G&#32;St.&#32;&amp;&#32;W.&#32;Alexander&#32;Ave,&#32;El&#32;Portal&#32;&amp;&#32;G&#32;Street,&#32;Mercy&#32;Hospital/TriCollege,&#32;TriCollege/Mercy&#32;(Bus&#32;stop&#32;on&#32;G&#32;next&#32;to&#32;Tri&#32;College),&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00065"/>00065 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G&#32;St.&#32;&amp;&#32;W.&#32;Alexander&#32;Ave.&#32;(Bus&#32;Stop&#32;Paul&apos;s&#32;Place),&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street&#32;(North),&#32;Foothill&#32;Drive,&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street&#32;(South),&#32;G&#32;Street&#32;South&#32;Across&#32;from&#32;Raley&apos;s&#32;(The&#32;Bus&#32;Stop),</emphasis>
<anchor xml:id="_search_8py_source_1l00066"/>00066 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;K&#32;St.&#32;Between&#32;18Th&#32;&amp;&#32;19th,&#32;Meadows&#32;Ave&#32;&amp;&#32;Olivewood&#32;Dr&#32;(Foodmaxx),&#32;Yosemite&#32;Crossings&#32;Shopping&#32;Center,&#32;M&#32;Street&#32;Village&#32;Apartments,&#32;Ironstone&#32;Dr.&#32;&amp;&#32;M&#32;St,&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00067"/>00067 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Yosemite&#32;&amp;&#32;Cordova&#32;(Merced&#32;Physician&#32;Center),&#32;Moraga&#32;Subdivision,&#32;University&#32;Surgery&#32;Center,&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street,&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street,</emphasis>
<anchor xml:id="_search_8py_source_1l00068"/>00068 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;K&#32;St.&#32;Between&#32;18th&#32;&amp;&#32;19th,&#32;UC&#32;Merced&#32;Downtown&#32;Campus&#32;Center,&#32;Merced&#32;Transpo,&#32;G&#32;Street&#32;South\n&apos;&apos;&apos;</emphasis>)
<anchor xml:id="_search_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacesearch_1aa0a2895db358e9e68e0f40f93d11dd85">validatePlaceq1</link>(q1,&#32;0,&#32;len(places)&#32;-&#32;1)
<anchor xml:id="_search_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_search_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_search_8py_source_1l00072"/>00072 
<anchor xml:id="_search_8py_source_1l00073"/><link linkend="_namespacesearch_1a9ee2a066db40edfb7a6b5f195d3199e9">00073</link> q2&#32;=&#32;input(<emphasis role="stringliteral">&quot;Where&#32;are&#32;you&#32;currently&#32;located?:&#32;&quot;</emphasis>)
<anchor xml:id="_search_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00075"/>00075 <link linkend="_namespacesearch_1ae8f1d38ba40d7cb40299d427d773b353">validatePlaceq2</link>(q2,&#32;0,&#32;len(places)&#32;-&#32;1)
<anchor xml:id="_search_8py_source_1l00076"/>00076 <emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_search_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;if(placeFoundq2&#32;==&#32;<emphasis role="keyword">False</emphasis>):
<anchor xml:id="_search_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Invalid&#32;location&quot;</emphasis>)
<anchor xml:id="_search_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q2&#32;=&#32;input(<emphasis role="stringliteral">&apos;&apos;&apos;Where&#32;are&#32;you&#32;currently&#32;located?:&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00080"/>00080 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;R&#32;Street&#32;Village&#32;Apts,&#32;El&#32;Redondo&#32;Dr,&#32;Compass&#32;Pointe&#32;Apts,&#32;Merced&#32;College&#32;The&#32;Bus&#32;Terminal,&#32;M&#32;St.&#32;At&#32;Bellevue&#32;RD,&#32;University&#32;Transit&#32;Center,&#32;Promenade&#32;Center,&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Merced&#32;Mall&#32;Target,&#32;Walmart&#32;on&#32;Loughborough&#32;Dr,&#32;Amtrak&#32;Station,&#32;K&#32;St.&#32;Between&#32;18th&#32;&amp;&#32;19th,&#32;Merced&#32;Transpo&#32;(REQ),&#32;Rite&#32;Aid/Walgreens&#32;on&#32;G&#32;St,&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00082"/>00082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;El&#32;Portal&#32;Plaza&#32;&amp;&#32;G&#32;Street,&#32;Granville&#32;Apartments,&#32;G&#32;St.&#32;&amp;&#32;W.&#32;Alexander&#32;Ave,&#32;El&#32;Portal&#32;&amp;&#32;G&#32;Street,&#32;Mercy&#32;Hospital/TriCollege,&#32;TriCollege/Mercy&#32;(Bus&#32;stop&#32;on&#32;G&#32;next&#32;to&#32;Tri&#32;College),&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00083"/>00083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G&#32;St.&#32;&amp;&#32;W.&#32;Alexander&#32;Ave.&#32;(Bus&#32;Stop&#32;Paul&apos;s&#32;Place),&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street&#32;(North),&#32;Foothill&#32;Drive,&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street&#32;(South),&#32;G&#32;Street&#32;South&#32;Across&#32;from&#32;Raley&apos;s&#32;(The&#32;Bus&#32;Stop),</emphasis>
<anchor xml:id="_search_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;K&#32;St.&#32;Between&#32;18Th&#32;&amp;&#32;19th,&#32;Meadows&#32;Ave&#32;&amp;&#32;Olivewood&#32;Dr&#32;(Foodmaxx),&#32;Yosemite&#32;Crossings&#32;Shopping&#32;Center,&#32;M&#32;Street&#32;Village&#32;Apartments,&#32;Ironstone&#32;Dr.&#32;&amp;&#32;M&#32;St,&#32;</emphasis>
<anchor xml:id="_search_8py_source_1l00085"/>00085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Yosemite&#32;&amp;&#32;Cordova&#32;(Merced&#32;Physician&#32;Center),&#32;Moraga&#32;Subdivision,&#32;University&#32;Surgery&#32;Center,&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street,&#32;Cardella&#32;Rd.&#32;&amp;&#32;&apos;M&apos;&#32;Street,</emphasis>
<anchor xml:id="_search_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;K&#32;St.&#32;Between&#32;18th&#32;&amp;&#32;19th,&#32;UC&#32;Merced&#32;Downtown&#32;Campus&#32;Center,&#32;Merced&#32;Transpo,&#32;G&#32;Street&#32;South\n&apos;&apos;&apos;</emphasis>)
<anchor xml:id="_search_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacesearch_1ae8f1d38ba40d7cb40299d427d773b353">validatePlaceq2</link>(q2,&#32;0,&#32;len(places)&#32;-&#32;1)
<anchor xml:id="_search_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_search_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_search_8py_source_1l00090"/>00090 
<anchor xml:id="_search_8py_source_1l00091"/>00091 
<anchor xml:id="_search_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00093"/>00093 <emphasis role="comment">#q3&#32;=&#32;input(&quot;What&#32;time&#32;do&#32;you&#32;want&#32;to&#32;arrive&#32;by?&quot;)</emphasis>
<anchor xml:id="_search_8py_source_1l00094"/>00094 <emphasis role="comment">#print(&quot;Pacific&#32;time:&quot;,&#32;datetime_LA.strftime(&quot;%I:%M:%p&quot;))</emphasis>
<anchor xml:id="_search_8py_source_1l00095"/><link linkend="_namespacesearch_1ad60b4e999ba801da3a823268e9e47318">00095</link> named_stops&#32;=&#32;{<emphasis role="stringliteral">&quot;Bobcat&#32;Express&quot;</emphasis>:&#32;bobcat_express_stops,&#32;<emphasis role="stringliteral">&quot;C1&quot;</emphasis>:&#32;C1_stops,&#32;<emphasis role="stringliteral">&quot;C2&quot;</emphasis>:&#32;C2_stops,&#32;<emphasis role="stringliteral">&quot;E1&quot;</emphasis>:&#32;E1_stops,&#32;<emphasis role="stringliteral">&quot;E2&quot;</emphasis>:&#32;E2_stops,&#32;<emphasis role="stringliteral">&quot;Fastcat&quot;</emphasis>:&#32;Fastcat_stops,&#32;<emphasis role="stringliteral">&quot;Fastcat&#32;2&quot;</emphasis>:&#32;Fastcat2_stops,&#32;<emphasis role="stringliteral">&quot;G&#32;Line&quot;</emphasis>:&#32;G_line_stops,&#32;<emphasis role="stringliteral">&quot;Yosemite&#32;Express&quot;</emphasis>&#32;:&#32;yosemite_express_stops}
<anchor xml:id="_search_8py_source_1l00096"/><link linkend="_namespacesearch_1abe0111b8295350cb47724c324c8e70da">00096</link> bus_names&#32;=&#32;{}
<anchor xml:id="_search_8py_source_1l00097"/><link linkend="_namespacesearch_1a25463332a2270f434fb7425487d019d0">00097</link> possible_buses&#32;=&#32;{}
<anchor xml:id="_search_8py_source_1l00098"/><link linkend="_namespacesearch_1a675a8e96d84e2326bfb56b3c837a92db">00098</link> possible_busnames&#32;=&#32;[]
<anchor xml:id="_search_8py_source_1l00099"/><link linkend="_namespacesearch_1aef564b377cb3d6fd0335b14ef027ebbf">00099</link> possible_distances&#32;=&#32;{}
<anchor xml:id="_search_8py_source_1l00100"/><link linkend="_namespacesearch_1afa07a6e7b438c7bc7bc5fb9d5625b341">00100</link> shortest_stops&#32;=&#32;[]
<anchor xml:id="_search_8py_source_1l00101"/><link linkend="_namespacesearch_1a8f6c713314ffbd604dcf45f2abd5acc8">00101</link> busGo_stops&#32;=&#32;{}
<anchor xml:id="_search_8py_source_1l00102"/><link linkend="_namespacesearch_1a697a8681535b1ab5557c94cc0895556b">00102</link> distances_dict&#32;=&#32;{}
<anchor xml:id="_search_8py_source_1l00103"/><link linkend="_namespacesearch_1a098de2d6852feae2c598603bbe3f198d">00103</link> shortestnames_stops&#32;=&#32;{}
<anchor xml:id="_search_8py_source_1l00104"/><link linkend="_namespacesearch_1a6fb7e41f35f61ca4fd68794bb2749f71">00104</link> distances_list&#32;=&#32;[]
<anchor xml:id="_search_8py_source_1l00105"/>00105 
<anchor xml:id="_search_8py_source_1l00106"/><link linkend="_namespacesearch_1a6922113272595e8b54ebef18c47356d5">00106</link> q3&#32;=&#32;input(<emphasis role="stringliteral">&quot;What&#32;time&#32;would&#32;you&#32;like&#32;to&#32;arrive&#32;by?&#32;Enter&#32;a&#32;time&#32;(Hour:Minute:Second&#32;format):&#32;&quot;</emphasis>)
<anchor xml:id="_search_8py_source_1l00107"/>00107 <link linkend="_namespacesearch_1a57b514484c4a9a99e08f49d70348ebd3">validateTime</link>(q3)
<anchor xml:id="_search_8py_source_1l00108"/>00108 <emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_search_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(valid_time&#32;==&#32;<emphasis role="keyword">False</emphasis>):
<anchor xml:id="_search_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;q3&#32;=&#32;input(<emphasis role="stringliteral">&quot;What&#32;time&#32;would&#32;you&#32;like&#32;to&#32;arrive&#32;by?&#32;Enter&#32;a&#32;time&#32;(Hour:Minute:Second&#32;format)&quot;</emphasis>)
<anchor xml:id="_search_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacesearch_1a57b514484c4a9a99e08f49d70348ebd3">validateTime</link>(q3)
<anchor xml:id="_search_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_search_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_search_8py_source_1l00114"/><link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">00114</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">dict_binary_search</link>(name,&#32;target):
<anchor xml:id="_search_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;sorted_names&#32;=&#32;sorted(list(name.keys()))
<anchor xml:id="_search_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;low&#32;=&#32;0&#32;
<anchor xml:id="_search_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;high&#32;=&#32;len(sorted_names)&#32;-&#32;1&#32;
<anchor xml:id="_search_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(low&#32;&lt;=&#32;high):&#32;
<anchor xml:id="_search_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;middle&#32;=&#32;(low&#32;+&#32;high)&#32;//&#32;2&#32;
<anchor xml:id="_search_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;sorted_names[middle]&#32;
<anchor xml:id="_search_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&lt;&#32;target):&#32;
<anchor xml:id="_search_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;low&#32;=&#32;middle&#32;+&#32;1&#32;
<anchor xml:id="_search_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elif(value&#32;&gt;&#32;target):&#32;
<anchor xml:id="_search_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;high&#32;=&#32;middle&#32;-&#32;1&#32;
<anchor xml:id="_search_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;
<anchor xml:id="_search_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sorted_names[middle]
<anchor xml:id="_search_8py_source_1l00127"/>00127 
<anchor xml:id="_search_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00129"/><link linkend="_namespacesearch_1a67013b4ddfe9c4f2dbb661a642cbed07">00129</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1a67013b4ddfe9c4f2dbb661a642cbed07">findBusTaken</link>():
<anchor xml:id="_search_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;name,&#32;stop&#32;<emphasis role="keywordflow">in</emphasis>&#32;named_stops.items():
<anchor xml:id="_search_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">dict_binary_search</link>(stop,&#32;q2)&#32;==&#32;q2):
<anchor xml:id="_search_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bus_names[name]&#32;=&#32;stop
<anchor xml:id="_search_8py_source_1l00133"/>00133 
<anchor xml:id="_search_8py_source_1l00134"/><link linkend="_namespacesearch_1a8af036654b8c8878447d1e55225cc4c1">00134</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1a8af036654b8c8878447d1e55225cc4c1">busGoStops</link>():
<anchor xml:id="_search_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;name,&#32;stop&#32;<emphasis role="keywordflow">in</emphasis>&#32;named_stops.items():
<anchor xml:id="_search_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">dict_binary_search</link>(stop,&#32;q1)&#32;==&#32;q1):
<anchor xml:id="_search_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;busGo_stops[name]&#32;=&#32;stop
<anchor xml:id="_search_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00139"/>00139 <emphasis role="keyword">from</emphasis>&#32;routingpy&#32;<emphasis role="keyword">import</emphasis>&#32;ORS
<anchor xml:id="_search_8py_source_1l00140"/>00140 <emphasis role="keyword">from</emphasis>&#32;pprint&#32;<emphasis role="keyword">import</emphasis>&#32;pprint
<anchor xml:id="_search_8py_source_1l00141"/><link linkend="_namespacesearch_1ae4ce93a64d79693eeb6cd026fda0debb">00141</link> client&#32;=&#32;ORS(api_key=<emphasis role="stringliteral">&apos;5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3&apos;</emphasis>)
<anchor xml:id="_search_8py_source_1l00142"/><link linkend="_namespacesearch_1a6aed943c283470ac4811b589afebee85">00142</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1a6aed943c283470ac4811b589afebee85">findBusGo</link>():
<anchor xml:id="_search_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;possible_buses
<anchor xml:id="_search_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;distanceBusGo
<anchor xml:id="_search_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;distancepointq2_q3
<anchor xml:id="_search_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;distancepointq3_q1
<anchor xml:id="_search_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;totalDistance
<anchor xml:id="_search_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq1
<anchor xml:id="_search_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointr1
<anchor xml:id="_search_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq1_coordinates
<anchor xml:id="_search_8py_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq2
<anchor xml:id="_search_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointr2
<anchor xml:id="_search_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq2_coordinates
<anchor xml:id="_search_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq3
<anchor xml:id="_search_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq3_coordinates
<anchor xml:id="_search_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="comment">#when&#32;the&#32;stop&#32;you&#32;want&#32;to&#32;go&#32;to&#32;is&#32;not&#32;found&#32;in&#32;the&#32;stops&#32;of&#32;the&#32;bus&#32;you&#32;took,&#32;code&#32;checks&#32;if&#32;the&#32;other&#32;stops&#32;on&#32;the&#32;bus&#32;you&#32;took&#32;are&#32;found&#32;in&#32;other&#32;busses,&#32;if&#32;stop&#32;found&#32;in&#32;other&#32;buses,&#32;adds&#32;name&#32;of&#32;the&#32;buss&#32;to&#32;possible&#32;buses&#32;list</emphasis>
<anchor xml:id="_search_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;takenBusStops
<anchor xml:id="_search_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;name,&#32;stop2&#32;<emphasis role="keywordflow">in</emphasis>&#32;bus_names.items():
<anchor xml:id="_search_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j2&#32;<emphasis role="keywordflow">in</emphasis>&#32;stop2:
<anchor xml:id="_search_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;takenBusStops&#32;=&#32;j2
<anchor xml:id="_search_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;name1,&#32;stop3&#32;<emphasis role="keywordflow">in</emphasis>&#32;busGo_stops.items():
<anchor xml:id="_search_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j3&#32;<emphasis role="keywordflow">in</emphasis>&#32;stop3:
<anchor xml:id="_search_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">dict_binary_search</link>(stop3,&#32;takenBusStops)&#32;==&#32;j3):
<anchor xml:id="_search_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pointq1_coordinates&#32;=&#32;(geo_pyPlacesCoords[places.index(q1)])&#32;&#32;<emphasis role="comment">#where&#32;wanna&#32;go</emphasis>
<anchor xml:id="_search_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pointq2_coordinates&#32;=&#32;(geo_pyPlacesCoords[places.index(q2)])&#32;&#32;<emphasis role="comment">#&#32;where&#32;currently&#32;located</emphasis>
<anchor xml:id="_search_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pointq3_coordinates&#32;=&#32;(geo_pyPlacesCoords[places.index(takenBusStops)])&#32;<emphasis role="comment">#coordinates&#32;of&#32;similar&#32;bus&#32;stop</emphasis>
<anchor xml:id="_search_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#coords&#32;=&#32;[pointq1_coordinates,&#32;pointq2_coordinates,&#32;pointq3_coordinates]</emphasis>
<anchor xml:id="_search_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;route&#32;=&#32;client.directions(locations=&#32;(pointq2_coordinates,&#32;pointq3_coordinates,&#32;pointq1_coordinates),&#32;profile=<emphasis role="stringliteral">&quot;driving-car&quot;</emphasis>)
<anchor xml:id="_search_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;possible_distances[route.distance]&#32;=&#32;j3
<anchor xml:id="_search_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;possible_busnames.append(name)
<anchor xml:id="_search_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shortest_stops.append(j3)
<anchor xml:id="_search_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;possible_buses[j3]&#32;=&#32;name1&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00173"/><link linkend="_namespacesearch_1afdf665e9c4a977f17e7c7604884bf928">00173</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacesearch_1afdf665e9c4a977f17e7c7604884bf928">findshortestBus</link>():
<anchor xml:id="_search_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq4
<anchor xml:id="_search_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;pointq5
<anchor xml:id="_search_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;min_distance&#32;=&#32;min(possible_distances.keys())
<anchor xml:id="_search_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;bus_stop
<anchor xml:id="_search_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;b_name
<anchor xml:id="_search_8py_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;index&#32;
<anchor xml:id="_search_8py_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;min_stop
<anchor xml:id="_search_8py_source_1l00181"/>00181 &#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00182"/>00182 &#32;&#32;&#32;&#32;min_stop&#32;=&#32;possible_distances[min_distance]
<anchor xml:id="_search_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;stop,&#32;route&#32;<emphasis role="keywordflow">in</emphasis>&#32;possible_buses.items():
<anchor xml:id="_search_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;min_bus
<anchor xml:id="_search_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">dict_binary_search</link>(possible_buses,&#32;min_stop)&#32;==&#32;stop):&#32;<emphasis role="comment">#check&#32;if&#32;bianry&#32;vs&#32;linear&#32;faster&#32;here</emphasis>
<anchor xml:id="_search_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_bus&#32;=&#32;route
<anchor xml:id="_search_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;
<anchor xml:id="_search_8py_source_1l00189"/>00189 
<anchor xml:id="_search_8py_source_1l00190"/>00190 
<anchor xml:id="_search_8py_source_1l00191"/>00191 <link linkend="_namespacesearch_1a67013b4ddfe9c4f2dbb661a642cbed07">findBusTaken</link>()
<anchor xml:id="_search_8py_source_1l00192"/>00192 <link linkend="_namespacesearch_1a8af036654b8c8878447d1e55225cc4c1">busGoStops</link>()
<anchor xml:id="_search_8py_source_1l00193"/>00193 <link linkend="_namespacesearch_1a6aed943c283470ac4811b589afebee85">findBusGo</link>()
<anchor xml:id="_search_8py_source_1l00194"/>00194 <link linkend="_namespacesearch_1afdf665e9c4a977f17e7c7604884bf928">findshortestBus</link>()
<anchor xml:id="_search_8py_source_1l00195"/>00195 <emphasis role="comment">#print(possible_distances)</emphasis>
<anchor xml:id="_search_8py_source_1l00196"/>00196 <emphasis role="comment">#print(possible_busnames)</emphasis>
<anchor xml:id="_search_8py_source_1l00197"/>00197 print(possible_buses)
<anchor xml:id="_search_8py_source_1l00198"/><link linkend="_namespacesearch_1a0e903c86b07e720b1faa757790f4a433">00198</link> potential_buses&#32;=&#32;set()
<anchor xml:id="_search_8py_source_1l00199"/>00199 <emphasis role="keywordflow">if</emphasis>&#32;(min_stop&#32;==&#32;q2&#32;<emphasis role="keywordflow">or</emphasis>&#32;min_stop&#32;==&#32;q1):
<anchor xml:id="_search_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;print(f<emphasis role="stringliteral">&apos;Take&#32;{min_bus}&#32;to&#32;{q1}&apos;</emphasis>)
<anchor xml:id="_search_8py_source_1l00201"/>00201 <emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_search_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;name,&#32;stop&#32;<emphasis role="keywordflow">in</emphasis>&#32;bus_names.items():
<anchor xml:id="_search_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">dict_binary_search</link>(stop,&#32;q2)&#32;==&#32;q2&#32;<emphasis role="keywordflow">and</emphasis>&#32;<link linkend="_namespacesearch_1a79be19296b7b96829cfc6d54ec5cb084">dict_binary_search</link>(stop,&#32;min_stop)&#32;==&#32;min_stop):
<anchor xml:id="_search_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;potential_buses.add(name)
<anchor xml:id="_search_8py_source_1l00205"/><link linkend="_namespacesearch_1a62181562a49785d6f447602d893c13dc">00205</link> &#32;&#32;&#32;&#32;unique_list&#32;=&#32;list(potential_buses)
<anchor xml:id="_search_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;print(f<emphasis role="stringliteral">&apos;Take&#32;{&quot;,&#32;&quot;.join(potential_buses)}&#32;to&#32;{min_stop}&#32;then&#32;take&#32;{min_bus}&#32;to&#32;{q1}&apos;</emphasis>)
<anchor xml:id="_search_8py_source_1l00207"/>00207 
<anchor xml:id="_search_8py_source_1l00208"/>00208 <emphasis role="comment">#print(&quot;Process&#32;finished&#32;---&#32;%s&#32;seconds&#32;---&quot;&#32;%&#32;(time.time()&#32;-&#32;start_time))</emphasis>
</programlisting></section>
