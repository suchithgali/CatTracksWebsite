<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__linked_list_8h_source" xml:lang="en-US">
<title>LinkedList.h</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__linked_list_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;LINKED_LIST</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;LINKED_LIST</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00003"/>00003 
<anchor xml:id="__linked_list_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;list&gt;</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;ostream&gt;</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00007"/>00007 
<anchor xml:id="__linked_list_8h_source_1l00008"/>00008 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__linked_list_8h_source_1l00009"/><link linkend="__linked_list_8h_1a08ab48c8a731571a66b1849dcc9ee7d6">00009</link> std::ostream&amp;&#32;<link linkend="__linked_list_8h_1a08ab48c8a731571a66b1849dcc9ee7d6">operator&lt;&lt;</link>(std::ostream&amp;&#32;os,&#32;<emphasis role="keyword">const</emphasis>&#32;std::list&lt;T&gt;&amp;&#32;lst){
<anchor xml:id="__linked_list_8h_source_1l00010"/>00010 &#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;[&quot;</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">auto</emphasis>&#32;it&#32;=&#32;lst.begin();&#32;it&#32;!=&#32;lst.end();&#32;++it){
<anchor xml:id="__linked_list_8h_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;*it;
<anchor xml:id="__linked_list_8h_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(std::next(it)&#32;!=&#32;lst.end()){
<anchor xml:id="__linked_list_8h_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00017"/>00017 &#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;os;
<anchor xml:id="__linked_list_8h_source_1l00019"/>00019 }
<anchor xml:id="__linked_list_8h_source_1l00020"/>00020 
<anchor xml:id="__linked_list_8h_source_1l00021"/>00021 
<anchor xml:id="__linked_list_8h_source_1l00022"/>00022 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__linked_list_8h_source_1l00023"/>00023 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_node">Node</link>{
<anchor xml:id="__linked_list_8h_source_1l00024"/>00024 &#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_node_1ac450c71a8677a38d306361f9ced518d3">data</link>;
<anchor xml:id="__linked_list_8h_source_1l00025"/><link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">00025</link> &#32;&#32;&#32;&#32;<link linkend="_struct_node_1a2fa6968303ac7486cd1cbbadb793859b">Node</link>*&#32;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00026"/><link linkend="_struct_node_1a4f50b730e5a2a73ecfb42699e3937d17">00026</link> &#32;&#32;&#32;&#32;<link linkend="_struct_node_1a2fa6968303ac7486cd1cbbadb793859b">Node</link>*&#32;<link linkend="_struct_node_1a4f50b730e5a2a73ecfb42699e3937d17">prev</link>;
<anchor xml:id="__linked_list_8h_source_1l00027"/>00027 
<anchor xml:id="__linked_list_8h_source_1l00028"/><link linkend="_struct_node_1a0692b16d246460bf94c18d49592facdd">00028</link> &#32;&#32;&#32;&#32;<link linkend="_struct_node_1a0692b16d246460bf94c18d49592facdd">Node</link>(T&#32;<link linkend="_struct_node_1ac450c71a8677a38d306361f9ced518d3">data</link>){
<anchor xml:id="__linked_list_8h_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;data&#32;=&#32;<link linkend="_struct_node_1ac450c71a8677a38d306361f9ced518d3">data</link>;
<anchor xml:id="__linked_list_8h_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node_1a4f50b730e5a2a73ecfb42699e3937d17">prev</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00033"/>00033 
<anchor xml:id="__linked_list_8h_source_1l00034"/><link linkend="_struct_node_1abe0b87fcd2f8f1668680ae7f86f94bfc">00034</link> &#32;&#32;&#32;&#32;<link linkend="_struct_node_1abe0b87fcd2f8f1668680ae7f86f94bfc">Node</link>(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_node_1ac450c71a8677a38d306361f9ced518d3">data</link>){
<anchor xml:id="__linked_list_8h_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;data&#32;=&#32;<link linkend="_struct_node_1ac450c71a8677a38d306361f9ced518d3">data</link>;
<anchor xml:id="__linked_list_8h_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node_1a4f50b730e5a2a73ecfb42699e3937d17">prev</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00038"/>00038 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00039"/>00039 };
<anchor xml:id="__linked_list_8h_source_1l00040"/>00040 
<anchor xml:id="__linked_list_8h_source_1l00041"/>00041 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__linked_list_8h_source_1l00042"/>00042 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_linked_list">LinkedList</link>;
<anchor xml:id="__linked_list_8h_source_1l00043"/>00043 
<anchor xml:id="__linked_list_8h_source_1l00044"/>00044 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__linked_list_8h_source_1l00045"/>00045 std::ostream&amp;&#32;<link linkend="__linked_list_8h_1a08ab48c8a731571a66b1849dcc9ee7d6">operator&lt;&lt;</link>(std::ostream&amp;&#32;os,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_linked_list">LinkedList&lt;T&gt;</link>&amp;&#32;container);
<anchor xml:id="__linked_list_8h_source_1l00046"/>00046 
<anchor xml:id="__linked_list_8h_source_1l00047"/>00047 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__linked_list_8h_source_1l00048"/><link linkend="_class_linked_list">00048</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_linked_list_1a3c20fcfec867e867f541061a09fc640c">LinkedList</link>{
<anchor xml:id="__linked_list_8h_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;front;
<anchor xml:id="__linked_list_8h_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;back;
<anchor xml:id="__linked_list_8h_source_1l00051"/>00051 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__linked_list_8h_source_1l00052"/><link linkend="_class_linked_list_1a3c20fcfec867e867f541061a09fc640c">00052</link> &#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1a3c20fcfec867e867f541061a09fc640c">LinkedList</link>(){
<anchor xml:id="__linked_list_8h_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;front&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;&#32;
<anchor xml:id="__linked_list_8h_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;back&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00056"/>00056 
<anchor xml:id="__linked_list_8h_source_1l00057"/><link linkend="_class_linked_list_1a2e6c246781e458f803203e9c75c6aa90">00057</link> &#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1a2e6c246781e458f803203e9c75c6aa90">LinkedList</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_linked_list_1a3c20fcfec867e867f541061a09fc640c">LinkedList&lt;T&gt;</link>&amp;&#32;other)&#32;{
<anchor xml:id="__linked_list_8h_source_1l00058"/>00058 &#32;&#32;&#32;&#32;front&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00059"/>00059 &#32;&#32;&#32;&#32;back&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;current&#32;=&#32;other.front;
<anchor xml:id="__linked_list_8h_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(current&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="__linked_list_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1afecdb04d978c0206287d8cf88d4e5912">appendinLL</link>(current-&gt;<link linkend="_struct_node_1ac450c71a8677a38d306361f9ced518d3">data</link>);&#32;<emphasis role="comment">//&#32;Copy&#32;each&#32;node&apos;s&#32;data</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;=&#32;current-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00065"/>00065 }
<anchor xml:id="__linked_list_8h_source_1l00066"/>00066 
<anchor xml:id="__linked_list_8h_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Iterator&#32;class</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00068"/><link linkend="_class_linked_list_1_1_iterator">00068</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_linked_list_1_1_iterator_1ae772ed8a3fe633ea021c0851ffd0ef1d">Iterator</link>&#32;{
<anchor xml:id="__linked_list_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;current;
<anchor xml:id="__linked_list_8h_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__linked_list_8h_source_1l00071"/><link linkend="_class_linked_list_1_1_iterator_1ae772ed8a3fe633ea021c0851ffd0ef1d">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1_1_iterator_1ae772ed8a3fe633ea021c0851ffd0ef1d">Iterator</link>(<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;node)&#32;:&#32;current(node)&#32;{}
<anchor xml:id="__linked_list_8h_source_1l00072"/><link linkend="_class_linked_list_1_1_iterator_1a3bddc0d07e273fbb04fa22b7feb3faf4">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&amp;&#32;<link linkend="_class_linked_list_1_1_iterator_1a3bddc0d07e273fbb04fa22b7feb3faf4">operator*</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;current-&gt;data;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00073"/><link linkend="_class_linked_list_1_1_iterator_1ab71c0df5efc97a4a8ffa8866723e662b">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1_1_iterator_1ae772ed8a3fe633ea021c0851ffd0ef1d">Iterator</link>&amp;&#32;<link linkend="_class_linked_list_1_1_iterator_1ab71c0df5efc97a4a8ffa8866723e662b">operator++</link>()&#32;{&#32;
<anchor xml:id="__linked_list_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(current)&#32;current&#32;=&#32;current-&gt;next;&#32;
<anchor xml:id="__linked_list_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;
<anchor xml:id="__linked_list_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00077"/><link linkend="_class_linked_list_1_1_iterator_1a8f198f199bcec5ac69f39cd539000c0e">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_linked_list_1_1_iterator_1a8f198f199bcec5ac69f39cd539000c0e">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_linked_list_1_1_iterator_1ae772ed8a3fe633ea021c0851ffd0ef1d">Iterator</link>&amp;&#32;other)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;current&#32;!=&#32;other.current;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00078"/>00078 &#32;&#32;&#32;&#32;};
<anchor xml:id="__linked_list_8h_source_1l00079"/>00079 
<anchor xml:id="__linked_list_8h_source_1l00080"/><link linkend="_class_linked_list_1a417e93e223b5e9f5a511cee4c56ac338">00080</link> &#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1_1_iterator">Iterator</link>&#32;<link linkend="_class_linked_list_1a417e93e223b5e9f5a511cee4c56ac338">begin</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_linked_list_1_1_iterator">Iterator</link>(front);&#32;}
<anchor xml:id="__linked_list_8h_source_1l00081"/><link linkend="_class_linked_list_1abd13f8fef21c6b9a594a36e31d0f79ad">00081</link> &#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1_1_iterator">Iterator</link>&#32;<link linkend="_class_linked_list_1abd13f8fef21c6b9a594a36e31d0f79ad">end</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_linked_list_1_1_iterator">Iterator</link>(<emphasis role="keyword">nullptr</emphasis>);&#32;}
<anchor xml:id="__linked_list_8h_source_1l00082"/>00082 
<anchor xml:id="__linked_list_8h_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="comment">//learn&#32;Iterator&#32;class</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00084"/>00084 
<anchor xml:id="__linked_list_8h_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="comment">//method&#32;that&#32;adds&#32;a&#32;node&#32;to&#32;a&#32;linked&#32;list</emphasis>
<anchor xml:id="__linked_list_8h_source_1l00086"/><link linkend="_class_linked_list_1afecdb04d978c0206287d8cf88d4e5912">00086</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_linked_list_1afecdb04d978c0206287d8cf88d4e5912">appendinLL</link>(T&#32;val){
<anchor xml:id="__linked_list_8h_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(front&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>){
<anchor xml:id="__linked_list_8h_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;front&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>(val);
<anchor xml:id="__linked_list_8h_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;back&#32;=&#32;front;
<anchor xml:id="__linked_list_8h_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="__linked_list_8h_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;temp&#32;=&#32;front;
<anchor xml:id="__linked_list_8h_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>){
<anchor xml:id="__linked_list_8h_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>(val);
<anchor xml:id="__linked_list_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>-&gt;<link linkend="_struct_node_1a4f50b730e5a2a73ecfb42699e3937d17">prev</link>&#32;=&#32;temp;
<anchor xml:id="__linked_list_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;back&#32;=&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00101"/>00101 
<anchor xml:id="__linked_list_8h_source_1l00102"/><link linkend="_class_linked_list_1a455066651ebdb60a153f39a2e92111bc">00102</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_linked_list_1a455066651ebdb60a153f39a2e92111bc">appendinLL</link>(<emphasis role="keywordtype">float</emphasis>&#32;val){
<anchor xml:id="__linked_list_8h_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(front&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>){
<anchor xml:id="__linked_list_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;front&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>(val);
<anchor xml:id="__linked_list_8h_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;back&#32;=&#32;front;
<anchor xml:id="__linked_list_8h_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="__linked_list_8h_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;temp&#32;=&#32;front;
<anchor xml:id="__linked_list_8h_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>){
<anchor xml:id="__linked_list_8h_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>(val);
<anchor xml:id="__linked_list_8h_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>-&gt;<link linkend="_struct_node_1a4f50b730e5a2a73ecfb42699e3937d17">prev</link>&#32;=&#32;temp;
<anchor xml:id="__linked_list_8h_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;back&#32;=&#32;temp-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00117"/>00117 
<anchor xml:id="__linked_list_8h_source_1l00118"/><link linkend="_class_linked_list_1a7c37609df3b83bc4eb0281b852f93fd7">00118</link> &#32;&#32;&#32;&#32;<link linkend="_class_linked_list_1a7c37609df3b83bc4eb0281b852f93fd7">~LinkedList</link>(){
<anchor xml:id="__linked_list_8h_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;current&#32;=&#32;front;
<anchor xml:id="__linked_list_8h_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(current&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="__linked_list_8h_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;next&#32;=&#32;current-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;current;
<anchor xml:id="__linked_list_8h_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;=&#32;next;
<anchor xml:id="__linked_list_8h_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;front&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;back&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00127"/>00127 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00128"/>00128 
<anchor xml:id="__linked_list_8h_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;std::ostream&amp;&#32;operator&lt;&lt;&#32;&lt;&gt;(std::ostream&amp;&#32;os,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_linked_list">LinkedList&lt;T&gt;</link>&amp;&#32;list);
<anchor xml:id="__linked_list_8h_source_1l00130"/>00130 };
<anchor xml:id="__linked_list_8h_source_1l00131"/>00131 
<anchor xml:id="__linked_list_8h_source_1l00132"/>00132 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__linked_list_8h_source_1l00133"/><link linkend="_class_linked_list_1a1fcb68f3522aaf1a95fcd2c716c2727a">00133</link> std::ostream&amp;&#32;<link linkend="__linked_list_8h_1a08ab48c8a731571a66b1849dcc9ee7d6">operator&lt;&lt;</link>(std::ostream&amp;&#32;os,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_linked_list_1a3c20fcfec867e867f541061a09fc640c">LinkedList&lt;T&gt;</link>&amp;&#32;list){
<anchor xml:id="__linked_list_8h_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_node">Node&lt;T&gt;</link>*&#32;current&#32;=&#32;list.front;
<anchor xml:id="__linked_list_8h_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(current&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>){
<anchor xml:id="__linked_list_8h_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;current-&gt;<link linkend="_struct_node_1ac450c71a8677a38d306361f9ced518d3">data</link>;
<anchor xml:id="__linked_list_8h_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(current-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>){
<anchor xml:id="__linked_list_8h_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;-&gt;&#32;&quot;</emphasis>;
<anchor xml:id="__linked_list_8h_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;=&#32;current-&gt;<link linkend="_struct_node_1ac1c0563946c59c36bddde431b4adb00b">next</link>;
<anchor xml:id="__linked_list_8h_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;os;
<anchor xml:id="__linked_list_8h_source_1l00143"/>00143 &#32;&#32;&#32;&#32;}
<anchor xml:id="__linked_list_8h_source_1l00144"/>00144 &#32;&#32;&#32;&#32;
<anchor xml:id="__linked_list_8h_source_1l00145"/>00145 <emphasis role="preprocessor">#endif&#32;</emphasis>
</programlisting></section>
