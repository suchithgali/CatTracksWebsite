{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment CatTracks Route Planner }CatTracks Route Planner}
{\comment Generated by doxygen 1.13.2.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt CatTracks Route Planner}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
CatTracksWebsite\par \pard\plain 
{\tc\tcl1 \v CatTracksWebsite}
{\xe \v CatTracksWebsite}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b main} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b route_datatypes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b search} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tester} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ArrayList< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HashTable< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LinkedList< T >::Iterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LinkedList< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Node< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ArrayList.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BinaryTree.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b brain.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HashTable.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b hastabletest.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LinkedList.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b main.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b route_datatypes.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b routedata.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b search.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b stops_data.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b stops_data.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tester.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tester.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main Namespace Reference\par \pard\plain 
{\tc\tcl2 \v main}
{\xe \v main}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b data} = json.load(f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b text_to_write} = i['Text'] + '\\n'\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v data\:main}
{\xe \v main\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
main.data = json.load(f)}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b main.py}.}\par
}
{\xe \v text_to_write\:main}
{\xe \v main\:text_to_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str main.text_to_write = i['Text'] + '\\n'}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
route_datatypes Namespace Reference\par \pard\plain 
{\tc\tcl2 \v route_datatypes}
{\xe \v route_datatypes}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b places}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b geo_pyPlaces}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ssl_context} = ssl.create_default_context(cafile=certifi.where())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b geolocator} = Nominatim(user_agent = "route app", {\b ssl_context}={\b ssl_context}, timeout=10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b geo_pyPlacesGeocode} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b location} = geolocator.geocode(place)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b geo_pyPlacesCoords} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b bobcat_express_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b bobcat_express_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b bobcat_express_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b C1_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b C1_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b C1_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b C2_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b C2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b C2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b E1_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b E1_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b E1_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b E2_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b E2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b E2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b Fastcat_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b Fastcat_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b Fastcat_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b Fastcat2_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b Fastcat2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b Fastcat2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b G_line_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b G_line_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b G_line_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b yosemite_express_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b yosemite_express_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b yosemite_express_stops_values}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v bobcat_express_stops\:route_datatypes}
{\xe \v route_datatypes\:bobcat_express_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.bobcat_express_stops}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b route_datatypes.py}.}\par
}
{\xe \v bobcat_express_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:bobcat_express_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.bobcat_express_stops_keys}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, \par
00002                              {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Promenade Center"}, {\cf22 "Merced Mall Target"}, \par
00003                              {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "Merced Transpo"}, \par
00004                              {\cf22 "Rite Aid/Walgreens"}, {\cf22 "El Portal & G Street"}]\par
}
{
Definition at line {\b 67} of file {\b route_datatypes.py}.}\par
}
{\xe \v bobcat_express_stops_values\:route_datatypes}
{\xe \v route_datatypes\:bobcat_express_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.bobcat_express_stops_values}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "6:29"}, {\cf22 "7:09"}, {\cf22 "7:49"}, {\cf22 "8:44"}, {\cf22 "9:24"}, {\cf22 "10:04"}, {\cf22 "10:44"}, {\cf22 "12:09"}, {\cf22 "1:49"}, {\cf22 "3:17"}, {\cf22 "4:57"}, {\cf22 "6:22"}, {\cf22 "8:02"}], \par
00002                                [{\cf22 "6:32"}, {\cf22 "7:12"}, {\cf22 "7:52"}, {\cf22 "8:47"}, {\cf22 "9:27"}, {\cf22 "10:07"}, {\cf22 "10:47"}, {\cf22 "12:12"}, {\cf22 "1:52"}, {\cf22 "3:20"}, {\cf22 "5:00"}, {\cf22 "6:25"}, {\cf22 "8:05"}], \par
00003                                [{\cf22 "6:34"}, {\cf22 "7:14"}, {\cf22 "7:54"}, {\cf22 "8:49"}, {\cf22 "9:29"}, {\cf22 "10:09"}, {\cf22 "10:49"}, {\cf22 "12:14"}, {\cf22 "1:54"}, {\cf22 "3:22"}, {\cf22 "5:02"}, {\cf22 "6:27"}, {\cf22 "8:07"}], \par
00004                                [{\cf22 "6:39"}, {\cf22 "7:19"}, {\cf22 "7:59"}, {\cf22 "8:54"}, {\cf22 "9:34"}, {\cf22 "10:14"}, {\cf22 "10:54"}, {\cf22 "12:19"}, {\cf22 "1:59"}, {\cf22 "3:27"}, {\cf22 "5:07"}, {\cf22 "6:32"}, {\cf22 "8:12"}], \par
00005                                [{\cf22 "6:44"}, {\cf22 "7:24"}, {\cf22 "8:04"}, {\cf22 "8:59"}, {\cf22 "9:39"}, {\cf22 "10:19"}, {\cf22 "11:00"}, {\cf22 "12:25"}, {\cf22 "2:05"}, {\cf22 "3:33"}, {\cf22 "5:13"}, {\cf22 "6:38"}, {\cf22 "8:18"}], \par
00006                                [{\cf22 "6:55"}, {\cf22 "7:35"}, {\cf22 "8:30"}, {\cf22 "9:10"}, {\cf22 "9:50"}, {\cf22 "10:30"}, {\cf22 "11:11"}, {\cf22 "12:51"}, {\cf22 "2:16"}, {\cf22 "3:59"}, {\cf22 "5:24"}, {\cf22 "7:04"}, {\cf22 "8:29*"}], \par
00007                                [{\cf22 "11:20"}, {\cf22 "1:00"}, {\cf22 "2:25"}, {\cf22 "4:08"}, {\cf22 "5:33"}, {\cf22 "7:13"}], [{\cf22 "11:29"}, {\cf22 "1:09"}, {\cf22 "2:37"}, {\cf22 "4:17"}, {\cf22 "5:42"}, {\cf22 "7:22"}], \par
00008                                [{\cf22 "11:38"}, {\cf22 "1:18"}, {\cf22 "2:46"}, {\cf22 "4:26"}, {\cf22 "5:51"}, {\cf22 "7:31"}], [{\cf22 "11:50"}, {\cf22 "1:30"}, {\cf22 "2:58"}, {\cf22 "4:38"}, {\cf22 "6:03"}, {\cf22 "7:43"}], \par
00009                                [{\cf22 "11:52"}, {\cf22 "1:32"}, {\cf22 "3:00"}, {\cf22 "4:40"}, {\cf22 "6:05"}, {\cf22 "7:45"}], [{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}], [\par
00010                                    {\cf22 "12:01"}, {\cf22 "1:41"}, {\cf22 "3:09"}, {\cf22 "4:49"}, {\cf22 "6:14"}, {\cf22 "7:54"}], [{\cf22 "12:03"}, {\cf22 "1:43"}, {\cf22 "3:11"}, {\cf22 "4:51"}, {\cf22 "6:16"}, {\cf22 "7:56"}]]\par
}
{
Definition at line {\b 72} of file {\b route_datatypes.py}.}\par
}
{\xe \v C1_stops\:route_datatypes}
{\xe \v route_datatypes\:C1_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.C1_stops}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  \{\par
00002     {\cf22 "Granville Apartments"}: [{\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "11:34"}, {\cf22 "12:45"}, {\cf22 "2:16"}, {\cf22 "3:27"}, {\cf22 "4:53"}, {\cf22 "6:04"}, {\cf22 "7:15"}, {\cf22 "8:41"}, {\cf22 "9:52"}, {\cf22 "REQ:"}],\par
00003     {\cf22 "G St. & W. Alexander Ave"}: [{\cf22 "6:32"}, {\cf22 "7:43"}, {\cf22 "9:09"}, {\cf22 "10:20"}, {\cf22 "11:46"}, {\cf22 "12:57"}, {\cf22 "2:28"}, {\cf22 "3:39"}, {\cf22 "5:05"}, {\cf22 "6:16"}, {\cf22 "7:27"}, {\cf22 "8:53"}, {\cf22 "10:04"}, {\cf22 "REQ:"}],\par
00004     {\cf22 "Rite Aid/Walgreens"}: [{\cf22 "6:34"}, {\cf22 "7:45"}, {\cf22 "9:11"}, {\cf22 "10:22"}, {\cf22 "11:48"}, {\cf22 "12:59"}, {\cf22 "2:30"}, {\cf22 "3:41"}, {\cf22 "5:07"}, {\cf22 "6:18"}, {\cf22 "7:29"}, {\cf22 "8:55"}, {\cf22 "10:06"}, {\cf22 "REQ:"}],\par
00005     {\cf22 "El Portal & G Street"}: [{\cf22 "6:36"}, {\cf22 "7:47"}, {\cf22 "9:13"}, {\cf22 "10:24"}, {\cf22 "11:50"}, {\cf22 "1:01"}, {\cf22 "2:32"}, {\cf22 "3:43"}, {\cf22 "5:09"}, {\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "REQ:"}, {\cf22 "7:09"}, {\cf22 "8:35"}, {\cf22 "9:46"}, {\cf22 "11:12"}, {\cf22 "12:23"}, {\cf22 "1:49"}, {\cf22 "3:05"}, {\cf22 "4:31"}, {\cf22 "5:42"}, {\cf22 "6:53"}, {\cf22 "8:19"}, {\cf22 "9:30"},],\par
00006     {\cf22 "TriCollege/Mercy"}: [{\cf22 "6:39"}, {\cf22 "7:50"}, {\cf22 "9:16"}, {\cf22 "10:27"}, {\cf22 "11:53"}, {\cf22 "1:04"}, {\cf22 "2:35"}, {\cf22 "3:46"}, {\cf22 "5:12"}, {\cf22 "6:23"}, {\cf22 "7:34"}, {\cf22 "9:00"}, {\cf22 "10:11"}, {\cf22 "REQ:"}],\par
00007     {\cf22 "M St. At Bellevue RD"}: [{\cf22 "6:45"}, {\cf22 "7:56"}, {\cf22 "9:22"}, {\cf22 "10:33"}, {\cf22 "11:59"}, {\cf22 "1:10"}, {\cf22 "2:41"}, {\cf22 "3:52"}, {\cf22 "5:18"}, {\cf22 "6:29"}, {\cf22 "7:40"}, {\cf22 "9:06"}, {\cf22 "10:17"}, {\cf22 "REQ:"}],\par
00008     {\cf22 "University Transit Center"}: [{\cf22 "6:56"}, {\cf22 "8:22"}, {\cf22 "9:33"}, {\cf22 "10:59"}, {\cf22 "12:10"}, {\cf22 "1:36"}, {\cf22 "2:52"}, {\cf22 "4:18"}, {\cf22 "5:29"}, {\cf22 "6:40"}, {\cf22 "8:06"}, {\cf22 "9:17"}, {\cf22 "10:28"}],\par
00009     {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}: [{\cf22 "7:06"}, {\cf22 "8:32"}, {\cf22 "9:43"}, {\cf22 "11:09"}, {\cf22 "12:20"}, {\cf22 "1:46"}, {\cf22 "3:02"}, {\cf22 "4:28"}, {\cf22 "5:39"}, {\cf22 "6:50"}, {\cf22 "8:16"}, {\cf22 "9:27"}, {\cf22 "REQ:"}],\par
00010     {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}: [{\cf22 "7:14"}, {\cf22 "8:40"}, {\cf22 "9:51"}, {\cf22 "11:17"}, {\cf22 "12:28"}, {\cf22 "1:54"}, {\cf22 "3:10"}, {\cf22 "4:36"}, {\cf22 "5:47"}, {\cf22 "6:58"}, {\cf22 "8:24"}, {\cf22 "9:35"}, {\cf22 "REQ:"}]\par
00011     \}\par
}
{
Definition at line {\b 82} of file {\b route_datatypes.py}.}\par
}
{\xe \v C1_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:C1_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.C1_stops_keys}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "Granville Apartments"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "El Portal & G Street"}, \par
00002             {\cf22 "TriCollege/Mercy"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
00003             {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}]\par
}
{
Definition at line {\b 94} of file {\b route_datatypes.py}.}\par
}
{\xe \v C1_stops_values\:route_datatypes}
{\xe \v route_datatypes\:C1_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.C1_stops_values}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "11:34"}, {\cf22 "12:45"}, {\cf22 "2:16"}, {\cf22 "3:27"}, {\cf22 "4:53"}, {\cf22 "6:04"}, {\cf22 "7:15"}, {\cf22 "8:41"}, {\cf22 "9:52"}, {\cf22 "REQ:"}], \par
00002                    [{\cf22 "6:32"}, {\cf22 "7:43"}, {\cf22 "9:09"}, {\cf22 "10:20"}, {\cf22 "11:46"}, {\cf22 "12:57"}, {\cf22 "2:28"}, {\cf22 "3:39"}, {\cf22 "5:05"}, {\cf22 "6:16"}, {\cf22 "7:27"}, {\cf22 "8:53"}, {\cf22 "10:04"}, {\cf22 "REQ:"}], \par
00003                    [{\cf22 "6:34"}, {\cf22 "7:45"}, {\cf22 "9:11"}, {\cf22 "10:22"}, {\cf22 "11:48"}, {\cf22 "12:59"}, {\cf22 "2:30"}, {\cf22 "3:41"}, {\cf22 "5:07"}, {\cf22 "6:18"}, {\cf22 "7:29"}, {\cf22 "8:55"}, {\cf22 "10:06"}, {\cf22 "REQ:"}], \par
00004                    [{\cf22 "6:36"}, {\cf22 "7:47"}, {\cf22 "9:13"}, {\cf22 "10:24"}, {\cf22 "11:50"}, {\cf22 "1:01"}, {\cf22 "2:32"}, {\cf22 "3:43"}, {\cf22 "5:09"}, {\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "REQ:"}, \par
00005                     {\cf22 "7:09"}, {\cf22 "8:35"}, {\cf22 "9:46"}, {\cf22 "11:12"}, {\cf22 "12:23"}, {\cf22 "1:49"}, {\cf22 "3:05"}, {\cf22 "4:31"}, {\cf22 "5:42"}, {\cf22 "6:53"}, {\cf22 "8:19"}, {\cf22 "9:30"}], [{\cf22 "6:39"}, {\cf22 "7:50"}, \par
00006                     {\cf22 "9:16"}, {\cf22 "10:27"}, {\cf22 "11:53"}, {\cf22 "1:04"}, {\cf22 "2:35"}, {\cf22 "3:46"}, {\cf22 "5:12"}, {\cf22 "6:23"}, {\cf22 "7:34"}, {\cf22 "9:00"}, {\cf22 "10:11"}, {\cf22 "REQ:"}], [{\cf22 "6:45"}, {\cf22 "7:56"}, \par
00007                     {\cf22 "9:22"}, {\cf22 "10:33"}, {\cf22 "11:59"}, {\cf22 "1:10"}, {\cf22 "2:41"}, {\cf22 "3:52"}, {\cf22 "5:18"}, {\cf22 "6:29"}, {\cf22 "7:40"}, {\cf22 "9:06"}, {\cf22 "10:17"}, {\cf22 "REQ:"}], \par
00008                     [{\cf22 "6:56"}, {\cf22 "8:22"}, {\cf22 "9:33"}, {\cf22 "10:59"}, {\cf22 "12:10"}, {\cf22 "1:36"}, {\cf22 "2:52"}, {\cf22 "4:18"}, {\cf22 "5:29"}, {\cf22 "6:40"}, {\cf22 "8:06"}, {\cf22 "9:17"}, {\cf22 "10:28"}], \par
00009                     [{\cf22 "7:06"}, {\cf22 "8:32"}, {\cf22 "9:43"}, {\cf22 "11:09"}, {\cf22 "12:20"}, {\cf22 "1:46"}, {\cf22 "3:02"}, {\cf22 "4:28"}, {\cf22 "5:39"}, {\cf22 "6:50"}, {\cf22 "8:16"}, {\cf22 "9:27"}, {\cf22 "REQ:"}], \par
00010                     [{\cf22 "7:14"}, {\cf22 "8:40"}, {\cf22 "9:51"}, {\cf22 "11:17"}, {\cf22 "12:28"}, {\cf22 "1:54"}, {\cf22 "3:10"}, {\cf22 "4:36"}, {\cf22 "5:47"}, {\cf22 "6:58"}, {\cf22 "8:24"}, {\cf22 "9:35"}, {\cf22 "REQ:"}]]\par
}
{
Definition at line {\b 98} of file {\b route_datatypes.py}.}\par
}
{\xe \v C2_stops\:route_datatypes}
{\xe \v route_datatypes\:C2_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.C2_stops}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 109} of file {\b route_datatypes.py}.}\par
}
{\xe \v C2_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:C2_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.C2_stops_keys}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Buena Vista Dr"}, {\cf22 "Merced Mall Target"}, {\cf22 "Village Apts. 'M' Street"}, \par
00002                 {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Foothill Drive"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}]\par
}
{
Definition at line {\b 144} of file {\b route_datatypes.py}.}\par
}
{\xe \v C2_stops_values\:route_datatypes}
{\xe \v route_datatypes\:C2_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.C2_stops_values}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "6:20"}, {\cf22 "7:18"}, {\cf22 "8:31"}, {\cf22 "9:29"}, {\cf22 "10:42"}, {\cf22 "11:40"}, {\cf22 "12:53"}, {\cf22 "1:51"}, {\cf22 "2:52"}, {\cf22 "3:50"}, {\cf22 "5:03"}, {\cf22 "6:01"}, {\cf22 "7:14"}, {\cf22 "8:12"}, {\cf22 "9:25"}, {\cf22 "REQ:"}], \par
00002                    [{\cf22 "6:23"}, {\cf22 "7:21"}, {\cf22 "8:34"}, {\cf22 "9:32"}, {\cf22 "10:45"}, {\cf22 "11:43"}, {\cf22 "12:56"}, {\cf22 "1:54"}, {\cf22 "2:55"}, {\cf22 "3:53"}, {\cf22 "5:06"}, {\cf22 "6:04"}, {\cf22 "7:17"}, {\cf22 "8:15"}, {\cf22 "9:28"}, {\cf22 "REQ:"}], \par
00003                    [{\cf22 "6:25"}, {\cf22 "7:23"}, {\cf22 "8:36"}, {\cf22 "9:34"}, {\cf22 "10:47"}, {\cf22 "11:45"}, {\cf22 "12:58"}, {\cf22 "1:56"}, {\cf22 "2:57"}, {\cf22 "3:55"}, {\cf22 "5:08"}, {\cf22 "6:06"}, {\cf22 "7:19"}, {\cf22 "8:17"}, {\cf22 "9:30"}, {\cf22 "REQ:"}], \par
00004                    [{\cf22 "6:32"}, {\cf22 "7:30"}, {\cf22 "8:43"}, {\cf22 "9:41"}, {\cf22 "10:54"}, {\cf22 "11:52"}, {\cf22 "1:05"}, {\cf22 "2:03"}, {\cf22 "3:04"}, {\cf22 "4:02"}, {\cf22 "5:15"}, {\cf22 "6:13"}, {\cf22 "7:26"}, {\cf22 "8:24"}, {\cf22 "9:37"}, {\cf22 "REQ:"}], \par
00005                    [{\cf22 "6:39"}, {\cf22 "7:37"}, {\cf22 "8:50"}, {\cf22 "9:48"}, {\cf22 "11:01"}, {\cf22 "11:59"}, {\cf22 "1:12"}, {\cf22 "2:13"}, {\cf22 "3:11"}, {\cf22 "4:09"}, {\cf22 "5:22"}, {\cf22 "6:20"}, {\cf22 "7:33"}, {\cf22 "8:31"}, {\cf22 "9:44"}, {\cf22 "REQ:"}], \par
00006                    [{\cf22 "6:41"}, {\cf22 "7:39"}, {\cf22 "8:52"}, {\cf22 "9:50"}, {\cf22 "11:03"}, {\cf22 "12:01"}, {\cf22 "1:14"}, {\cf22 "2:15"}, {\cf22 "3:13"}, {\cf22 "4:11"}, {\cf22 "5:24"}, {\cf22 "6:22"}, {\cf22 "7:35"}, {\cf22 "8:33"}, {\cf22 "9:46"}, {\cf22 "REQ:"}], \par
00007                    [{\cf22 "6:45"}, {\cf22 "7:43"}, {\cf22 "8:56"}, {\cf22 "9:54"}, {\cf22 "11:07"}, {\cf22 "12:05"}, {\cf22 "1:18"}, {\cf22 "2:19"}, {\cf22 "3:17"}, {\cf22 "4:15"}, {\cf22 "5:28"}, {\cf22 "6:26"}, {\cf22 "7:39"}, {\cf22 "8:37"}, {\cf22 "9:50"}, {\cf22 "REQ:"}], \par
00008                    [{\cf22 "6:48"}, {\cf22 "7:46"}, {\cf22 "8:59"}, {\cf22 "9:57"}, {\cf22 "11:10"}, {\cf22 "12:08"}, {\cf22 "1:21"}, {\cf22 "2:22"}, {\cf22 "3:20"}, {\cf22 "4:18"}, {\cf22 "5:31"}, {\cf22 "6:29"}, {\cf22 "7:42"}, {\cf22 "8:40"}, {\cf22 "9:53"}, {\cf22 "REQ:"}], \par
00009                    [{\cf22 "6:51"}, {\cf22 "7:49"}, {\cf22 "9:02"}, {\cf22 "10:00"}, {\cf22 "11:13"}, {\cf22 "12:11"}, {\cf22 "1:24"}, {\cf22 "2:25"}, {\cf22 "3:23"}, {\cf22 "4:21"}, {\cf22 "5:34"}, {\cf22 "6:32"}, {\cf22 "7:45"}, {\cf22 "8:43"}, {\cf22 "9:56"}, {\cf22 "REQ:"}], \par
00010                    [{\cf22 "7:02"}, {\cf22 "8:15"}, {\cf22 "9:13"}, {\cf22 "10:26"}, {\cf22 "11:24"}, {\cf22 "12:37"}, {\cf22 "1:35"}, {\cf22 "2:36"}, {\cf22 "3:34"}, {\cf22 "4:47"}, {\cf22 "5:45"}, {\cf22 "6:58"}, {\cf22 "7:56"}, {\cf22 "9:09"}, {\cf22 "10:07"}], \par
00011                    [{\cf22 "7:09"}, {\cf22 "8:22"}, {\cf22 "9:20"}, {\cf22 "10:33"}, {\cf22 "11:31"}, {\cf22 "12:44"}, {\cf22 "1:42"}, {\cf22 "2:43"}], [{\cf22 "7:13"}, {\cf22 "8:26"}, {\cf22 "9:24"}, {\cf22 "10:37"}, {\cf22 "11:35"}, {\cf22 "12:48"}, {\cf22 "1:46"}, {\cf22 "2:47"}, {\cf22 "3:45"}, {\cf22 "4:58"}, {\cf22 "5:56"}, {\cf22 "7:09"}, {\cf22 "8:07"}, {\cf22 "9:20"}, {\cf22 "REQ:"}]]\par
}
{
Definition at line {\b 147} of file {\b route_datatypes.py}.}\par
}
{\xe \v E1_stops\:route_datatypes}
{\xe \v route_datatypes\:E1_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.E1_stops}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  \{\par
00002     {\cf22 "University Transit Center"}: [{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}],\par
00003     {\cf22 "G Street South"}: [{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}],\par
00004     {\cf22 "Amtrak Station"}: [{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}],\par
00005     {\cf22 "K St. Between 18th & 19th"}: [{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}],\par
00006     {\cf22 "Walmart on Loughborough Dr"}: [{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}],\par
00007     {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}: [{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}],\par
00008     {\cf22 "Merced Mall Target"}: [{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}],\par
00009     {\cf22 "Rite Aid/Walgreens"}: [{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}],\par
00010     {\cf22 "Yosemite Crossings Shopping Center"}: [{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"} ],\par
00011     \}\par
}
{
Definition at line {\b 159} of file {\b route_datatypes.py}.}\par
}
{\xe \v E1_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:E1_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.E1_stops_keys}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "University Transit Center"}, {\cf22 "G Street South"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced Mall Target"}, \par
00002                  {\cf22 "Rite Aid/Walgreens"}, {\cf22 "Yosemite Crossings Shopping Center"}]\par
}
{
Definition at line {\b 172} of file {\b route_datatypes.py}.}\par
}
{\xe \v E1_stops_values\:route_datatypes}
{\xe \v route_datatypes\:E1_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.E1_stops_values}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}], \par
00002                    [{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}], \par
00003                    [{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}], \par
00004                    [{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}], \par
00005                    [{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}], \par
00006                    [{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}], \par
00007                    [{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}], \par
00008                    [{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}], \par
00009                    [{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}]]\par
}
{
Definition at line {\b 175} of file {\b route_datatypes.py}.}\par
}
{\xe \v E2_stops\:route_datatypes}
{\xe \v route_datatypes\:E2_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.E2_stops}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  \{\par
00002         {\cf22 "University Transit Center"}: [{\cf22 "11:05"}, {\cf22 "12:09"}, {\cf22 "12:58"}, {\cf22 "1:47"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:29"}, {\cf22 "5:18"}, {\cf22 "6:25"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:07"}, {\cf22 "9:56"}],\par
00003         {\cf22 "Promenade Center"}: [{\cf22 "11:14"}, {\cf22 "12:18"}, {\cf22 "1:07"}, {\cf22 "1:56"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "4:38"}, {\cf22 "5:27"}, {\cf22 "6:34"}, {\cf22 "7:23"}, {\cf22 "8:27"}, {\cf22 "9:16"}],\par
00004         {\cf22 "R Street Village Apts"}: [{\cf22 "11:20"}, {\cf22 "12:24"}, {\cf22 "1:13"}, {\cf22 "2:02"}, {\cf22 "2:51"}, {\cf22 "3:55"}, {\cf22 "4:44"}, {\cf22 "5:36"}, {\cf22 "6:40"}, {\cf22 "7:29"}, {\cf22 "8:33"}, {\cf22 "9:22"}],\par
00005         {\cf22 "El Redondo Dr"}: [{\cf22 "11:23"}, {\cf22 "12:27"}, {\cf22 "1:16"}, {\cf22 "2:05"}, {\cf22 "2:54"}, {\cf22 "3:58"}, {\cf22 "4:47"}, {\cf22 "5:39"}, {\cf22 "6:43"}, {\cf22 "7:32"}, {\cf22 "8:36"}, {\cf22 "9:25"}],\par
00006         {\cf22 "Compass Pointe Apts"}: [{\cf22 "11:25"}, {\cf22 "12:29"}, {\cf22 "1:18"}, {\cf22 "2:07"}, {\cf22 "2:56"}, {\cf22 "4:00"}, {\cf22 "4:49"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "7:34"}, {\cf22 "8:38"}, {\cf22 "9:27"}],\par
00007         {\cf22 "Merced Mall Target"}: [{\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:24"}, {\cf22 "2:13"}, {\cf22 "3:02"}, {\cf22 "4:06"}, {\cf22 "4:55"}, {\cf22 "5:47"}, {\cf22 "6:51"}, {\cf22 "7:40"}, {\cf22 "8:44"}, {\cf22 "9:33"}],\par
00008         {\cf22 "M Street Village Apartments"}: [{\cf22 "11:33"}, {\cf22 "12:37"}, {\cf22 "1:26"}, {\cf22 "2:15"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "4:57"}, {\cf22 "5:49"}, {\cf22 "6:53"}, {\cf22 "7:42"}, {\cf22 "8:46"}, {\cf22 "9:35"}],\par
00009         {\cf22 "Ironstone Dr. & M St"}: [{\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:30"}, {\cf22 "2:19"}, {\cf22 "3:08"}, {\cf22 "4:12"}, {\cf22 "5:01"}, {\cf22 "5:53"}, {\cf22 "6:57"}, {\cf22 "7:46"}, {\cf22 "8:50"}, {\cf22 "9:39"}],\par
00010         {\cf22 "Yosemite & Cordova (Merced Physician Center)"}: [{\cf22 "11:43"}, {\cf22 "12:47"}, {\cf22 "1:36"}, {\cf22 "2:25"}, {\cf22 "3:14"}, {\cf22 "4:18"}, {\cf22 "5:07"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "7:52"}, {\cf22 "8:56"}, {\cf22 "9:45"}],\par
00011         {\cf22 "Moraga Subdivision"}: [{\cf22 "11:46"}, {\cf22 "12:50"}, {\cf22 "1:39"}, {\cf22 "2:28"}, {\cf22 "3:17"}, {\cf22 "4:21"}, {\cf22 "5:10"}, {\cf22 "6:02"}, {\cf22 "7:06"}, {\cf22 "7:55"}, {\cf22 "8:59"}, {\cf22 "9:48"}],\par
00012     \}\par
}
{
Definition at line {\b 185} of file {\b route_datatypes.py}.}\par
}
{\xe \v E2_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:E2_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.E2_stops_keys}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "University Transit Center"}, {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced Mall Target"}, \par
00002                  {\cf22 "M Street Village Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}]\par
}
{
Definition at line {\b 198} of file {\b route_datatypes.py}.}\par
}
{\xe \v E2_stops_values\:route_datatypes}
{\xe \v route_datatypes\:E2_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.E2_stops_values}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "11:05"}, {\cf22 "12:09"}, {\cf22 "12:58"}, {\cf22 "1:47"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:29"}, {\cf22 "5:18"}, {\cf22 "6:25"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:07"}, {\cf22 "9:56"}], \par
00002                    [{\cf22 "11:14"}, {\cf22 "12:18"}, {\cf22 "1:07"}, {\cf22 "1:56"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "4:38"}, {\cf22 "5:27"}, {\cf22 "6:34"}, {\cf22 "7:23"}, {\cf22 "8:27"}, {\cf22 "9:16"}], \par
00003                    [{\cf22 "11:20"}, {\cf22 "12:24"}, {\cf22 "1:13"}, {\cf22 "2:02"}, {\cf22 "2:51"}, {\cf22 "3:55"}, {\cf22 "4:44"}, {\cf22 "5:36"}, {\cf22 "6:40"}, {\cf22 "7:29"}, {\cf22 "8:33"}, {\cf22 "9:22"}], \par
00004                    [{\cf22 "11:23"}, {\cf22 "12:27"}, {\cf22 "1:16"}, {\cf22 "2:05"}, {\cf22 "2:54"}, {\cf22 "3:58"}, {\cf22 "4:47"}, {\cf22 "5:39"}, {\cf22 "6:43"}, {\cf22 "7:32"}, {\cf22 "8:36"}, {\cf22 "9:25"}], \par
00005                    [{\cf22 "11:25"}, {\cf22 "12:29"}, {\cf22 "1:18"}, {\cf22 "2:07"}, {\cf22 "2:56"}, {\cf22 "4:00"}, {\cf22 "4:49"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "7:34"}, {\cf22 "8:38"}, {\cf22 "9:27"}], \par
00006                    [{\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:24"}, {\cf22 "2:13"}, {\cf22 "3:02"}, {\cf22 "4:06"}, {\cf22 "4:55"}, {\cf22 "5:47"}, {\cf22 "6:51"}, {\cf22 "7:40"}, {\cf22 "8:44"}, {\cf22 "9:33"}], \par
00007                    [{\cf22 "11:33"}, {\cf22 "12:37"}, {\cf22 "1:26"}, {\cf22 "2:15"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "4:57"}, {\cf22 "5:49"}, {\cf22 "6:53"}, {\cf22 "7:42"}, {\cf22 "8:46"}, {\cf22 "9:35"}], \par
00008                    [{\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:30"}, {\cf22 "2:19"}, {\cf22 "3:08"}, {\cf22 "4:12"}, {\cf22 "5:01"}, {\cf22 "5:53"}, {\cf22 "6:57"}, {\cf22 "7:46"}, {\cf22 "8:50"}, {\cf22 "9:39"}], \par
00009                    [{\cf22 "11:43"}, {\cf22 "12:47"}, {\cf22 "1:36"}, {\cf22 "2:25"}, {\cf22 "3:14"}, {\cf22 "4:18"}, {\cf22 "5:07"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "7:52"}, {\cf22 "8:56"}, {\cf22 "9:45"}], \par
00010                    [{\cf22 "11:46"}, {\cf22 "12:50"}, {\cf22 "1:39"}, {\cf22 "2:28"}, {\cf22 "3:17"}, {\cf22 "4:21"}, {\cf22 "5:10"}, {\cf22 "6:02"}, {\cf22 "7:06"}, {\cf22 "7:55"}, {\cf22 "8:59"}, {\cf22 "9:48"}]]\par
}
{
Definition at line {\b 201} of file {\b route_datatypes.py}.}\par
}
{\xe \v Fastcat2_stops\:route_datatypes}
{\xe \v route_datatypes\:Fastcat2_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.Fastcat2_stops}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  \{\par
00002         {\cf22 "University Surgery Center"}: [{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, \par
00003                                       {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, \par
00004                                       {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}],\par
00005         {\cf22 "Promenade Center"}: [{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}],\par
00006         {\cf22 "Yosemite Crossings Shopping Center"}: [{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}],\par
00007         {\cf22 "TriCollege/Mercy  "}: [{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, {\cf22 "9:08"}, \par
00008                                        {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}],\par
00009         {\cf22 "Cardella Rd. & 'M' Street"}: [{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}],\par
00010         {\cf22 "M St. At Bellevue RD"}: [{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}],\par
00011         {\cf22 "University Transit Center"}: [{\cf22 "8:58"}, {\cf22 "10:17"}, {\cf22 "11:21"}, {\cf22 "12:25"}, {\cf22 "1:29"}, {\cf22 "2:48"}, {\cf22 "3:52"}, {\cf22 "4:59"}, {\cf22 "6:18"}, {\cf22 "7:22"}, {\cf22 "8:41"}, {\cf22 "9:45"}],\par
00012         {\cf22 "Yosemite & Cordova (Merced Physician Center)"}: [{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}],\par
00013         {\cf22 "Moraga Subdivision"}: [{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}],\par
00014         {\cf22 "University Transit Center"}: [{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"} ],\par
00015     \}\par
}
{
Definition at line {\b 239} of file {\b route_datatypes.py}.}\par
}
{\xe \v Fastcat2_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:Fastcat2_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.Fastcat2_stops_keys}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy  "}, {\cf22 "Cardella Rd. & 'M' Street"},\par
00002                        {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}]\par
}
{
Definition at line {\b 255} of file {\b route_datatypes.py}.}\par
}
{\xe \v Fastcat2_stops_values\:route_datatypes}
{\xe \v route_datatypes\:Fastcat2_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.Fastcat2_stops_values}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, \par
00002                           {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}], \par
00003                           [{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}], \par
00004                           [{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}], \par
00005                           [{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, \par
00006                            {\cf22 "9:08"}, {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}], \par
00007                            [{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}], \par
00008                            [{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}], \par
00009                            [{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"}], \par
00010                            [{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}], \par
00011                            [{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}]]\par
}
{
Definition at line {\b 258} of file {\b route_datatypes.py}.}\par
}
{\xe \v Fastcat_stops\:route_datatypes}
{\xe \v route_datatypes\:Fastcat_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.Fastcat_stops}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  \{\par
00002         {\cf22 "University Surgery Center"}: [ {\cf22 "6:35"}, {\cf22 "7:39"}, {\cf22 "8:58"}, {\cf22 "10:02"}, {\cf22 "11:06"}, {\cf22 "12:25"}, {\cf22 "1:29"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:59"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:11"}, {\cf22 "9:30"}],\par
00003         {\cf22 "Promenade Center"}: [{\cf22 "6:39"}, {\cf22 "7:43"}, {\cf22 "9:02"}, {\cf22 "10:06"}, {\cf22 "11:10"}, {\cf22 "12:29"}, {\cf22 "1:33"}, {\cf22 "2:40"}, {\cf22 "3:44"}, {\cf22 "5:03"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:15"}, {\cf22 "9:34"}],\par
00004         {\cf22 "Yosemite Crossings Shopping Center"}: [{\cf22 "6:42"}, {\cf22 "7:46"}, {\cf22 "9:05"}, {\cf22 "10:09"}, {\cf22 "11:13"}, {\cf22 "12:32"}, {\cf22 "1:36"}, {\cf22 "2:43"}, {\cf22 "3:47"}, {\cf22 "5:06"}, {\cf22 "6:10"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:37"}],\par
00005         {\cf22 "TriCollege/Mercy"}: [{\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"}, {\cf22 "11:15"}, {\cf22 "12:34"}, {\cf22 "1:38"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "5:08"}, {\cf22 "6:12"}, {\cf22 "7:16"}, {\cf22 "8:20"}, {\cf22 "9:39"}, {\cf22 "7:13"}, \par
00006                                        {\cf22 "8:32"}, {\cf22 "9:36"}, {\cf22 "10:40"}, {\cf22 "11:44"}, {\cf22 "1:03"}, {\cf22 "2:07"}, {\cf22 "3:14"}, {\cf22 "4:33"}, {\cf22 "5:37"}, {\cf22 "6:41"}, {\cf22 "7:45"}, {\cf22 "9:04"}, {\cf22 "10:08"},{\cf22 "REQ:"}],\par
00007         {\cf22 "Cardella Rd. & 'M' Street"}: [{\cf22 "6:48"}, {\cf22 "7:52"}, {\cf22 "9:11"}, {\cf22 "10:15"}, {\cf22 "11:19"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "2:49"}, {\cf22 "3:53"}, {\cf22 "5:12"}, {\cf22 "6:16"}, {\cf22 "7:20"}, {\cf22 "8:24"}, {\cf22 "9:43"}],\par
00008         {\cf22 "M St. At Bellevue RD"}: [{\cf22 "6:52"}, {\cf22 "7:56"}, {\cf22 "9:15"}, {\cf22 "10:19"}, {\cf22 "11:23"}, {\cf22 "12:42"}, {\cf22 "1:46"}, {\cf22 "2:53"}, {\cf22 "3:57"}, {\cf22 "5:16"}, {\cf22 "6:20"}, {\cf22 "7:24"}, {\cf22 "8:28"}, {\cf22 "9:47"}],\par
00009         {\cf22 "University Transit Center"}: [{\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:53"}, {\cf22 "1:57"}, {\cf22 "3:04"}, {\cf22 "4:23"}, {\cf22 "5:27"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "9:58"}, {\cf22 "7:30"}, \par
00010                                             {\cf22 "8:49"}, {\cf22 "9:53"}, {\cf22 "10:57"}, {\cf22 "12:16"}, {\cf22 "1:20"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:50"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:02"}, {\cf22 "9:21"}, {\cf22 "10:25"}],\par
00011         {\cf22 "Yosemite & Cordova (Merced Physician Center)"}: [{\cf22 "7:16"}, {\cf22 "8:35"}, {\cf22 "9:39"}, {\cf22 "10:43"}, {\cf22 "11:47"}, {\cf22 "1:06"}, {\cf22 "2:10"}, {\cf22 "3:17"}, {\cf22 "4:36"}, {\cf22 "5:40"}, {\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"},{\cf22 "REQ:"}],\par
00012         {\cf22 "Moraga Subdivision"}: [{\cf22 "7:22"}, {\cf22 "8:41"}, {\cf22 "9:45"}, {\cf22 "10:49"}, {\cf22 "11:53"}, {\cf22 "1:12"}, {\cf22 "2:19"}, {\cf22 "3:23"}, {\cf22 "4:42"}, {\cf22 "5:46"}, {\cf22 "6:50"}, {\cf22 "7:54"}, {\cf22 "9:13"}, {\cf22 "10:17"},{\cf22 "REQ:"}],\par
00013     \}\par
}
{
Definition at line {\b 212} of file {\b route_datatypes.py}.}\par
}
{\xe \v Fastcat_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:Fastcat_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.Fastcat_stops_keys}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy"}, {\cf22 "Cardella Rd. & 'M' Street"}, {\cf22 "M St. At Bellevue RD"}, \par
00002                       {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}]\par
}
{
Definition at line {\b 226} of file {\b route_datatypes.py}.}\par
}
{\xe \v Fastcat_stops_values\:route_datatypes}
{\xe \v route_datatypes\:Fastcat_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.Fastcat_stops_values}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "6:35"}, {\cf22 "7:39"}, {\cf22 "8:58"}, {\cf22 "10:02"}, {\cf22 "11:06"}, {\cf22 "12:25"}, {\cf22 "1:29"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:59"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:11"}, {\cf22 "9:30"}], \par
00002                         [{\cf22 "6:39"}, {\cf22 "7:43"}, {\cf22 "9:02"}, {\cf22 "10:06"}, {\cf22 "11:10"}, {\cf22 "12:29"}, {\cf22 "1:33"}, {\cf22 "2:40"}, {\cf22 "3:44"}, {\cf22 "5:03"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:15"}, {\cf22 "9:34"}], \par
00003                         [{\cf22 "6:42"}, {\cf22 "7:46"}, {\cf22 "9:05"}, {\cf22 "10:09"}, {\cf22 "11:13"}, {\cf22 "12:32"}, {\cf22 "1:36"}, {\cf22 "2:43"}, {\cf22 "3:47"}, {\cf22 "5:06"}, {\cf22 "6:10"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:37"}], \par
00004                         [{\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"}, {\cf22 "11:15"}, {\cf22 "12:34"}, {\cf22 "1:38"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "5:08"}, {\cf22 "6:12"}, {\cf22 "7:16"}, {\cf22 "8:20"}, {\cf22 "9:39"}, {\cf22 "7:13"}, {\cf22 "8:32"}, {\cf22 "9:36"}, {\cf22 "10:40"}, {\cf22 "11:44"}, {\cf22 "1:03"}, {\cf22 "2:07"}, {\cf22 "3:14"}, {\cf22 "4:33"}, {\cf22 "5:37"}, {\cf22 "6:41"}, {\cf22 "7:45"}, {\cf22 "9:04"}, {\cf22 "10:08"}, {\cf22 "REQ:"}], \par
00005                         [{\cf22 "6:48"}, {\cf22 "7:52"}, {\cf22 "9:11"}, {\cf22 "10:15"}, {\cf22 "11:19"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "2:49"}, {\cf22 "3:53"}, {\cf22 "5:12"}, {\cf22 "6:16"}, {\cf22 "7:20"}, {\cf22 "8:24"}, {\cf22 "9:43"}], \par
00006                         [{\cf22 "6:52"}, {\cf22 "7:56"}, {\cf22 "9:15"}, {\cf22 "10:19"}, {\cf22 "11:23"}, {\cf22 "12:42"}, {\cf22 "1:46"}, {\cf22 "2:53"}, {\cf22 "3:57"}, {\cf22 "5:16"}, {\cf22 "6:20"}, {\cf22 "7:24"}, {\cf22 "8:28"}, {\cf22 "9:47"}], \par
00007                         [{\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:53"}, {\cf22 "1:57"}, {\cf22 "3:04"}, {\cf22 "4:23"}, {\cf22 "5:27"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "9:58"}, {\cf22 "7:30"}, {\cf22 "8:49"}, {\cf22 "9:53"}, {\cf22 "10:57"}, {\cf22 "12:16"}, {\cf22 "1:20"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:50"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:02"}, {\cf22 "9:21"}, {\cf22 "10:25"}], \par
00008                         [{\cf22 "7:16"}, {\cf22 "8:35"}, {\cf22 "9:39"}, {\cf22 "10:43"}, {\cf22 "11:47"}, {\cf22 "1:06"}, {\cf22 "2:10"}, {\cf22 "3:17"}, {\cf22 "4:36"}, {\cf22 "5:40"}, {\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"}, {\cf22 "REQ:"}], \par
00009                         [{\cf22 "7:22"}, {\cf22 "8:41"}, {\cf22 "9:45"}, {\cf22 "10:49"}, {\cf22 "11:53"}, {\cf22 "1:12"}, {\cf22 "2:19"}, {\cf22 "3:23"}, {\cf22 "4:42"}, {\cf22 "5:46"}, {\cf22 "6:50"}, {\cf22 "7:54"}, {\cf22 "9:13"}, {\cf22 "10:17"}, {\cf22 "REQ:"}]]\par
}
{
Definition at line {\b 229} of file {\b route_datatypes.py}.}\par
}
{\xe \v G_line_stops\:route_datatypes}
{\xe \v route_datatypes\:G_line_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.G_line_stops}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  \{\par
00002         {\cf22 "R Street Village Apts"}: [{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, \par
00003                                    {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}],\par
00004         {\cf22 "El Redondo Dr"}: [{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}],\par
00005         {\cf22 "Compass Pointe Apts"}: [{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}],\par
00006         {\cf22 "Merced College The Bus Terminal"}: [{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}],\par
00007         {\cf22 "M St. At Bellevue RD"}: [{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}],\par
00008         {\cf22 "University Transit Center"}: [{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}],\par
00009         {\cf22 "Amtrak Station"}: [{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}],\par
00010         {\cf22 "K St. Between 18th & 19th"}: [{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}],\par
00011         {\cf22 "UC Merced Downtown Campus Center"}: [{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}],\par
00012         {\cf22 "Merced Transpo"}: [{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}],\par
00013     \}\par
}
{
Definition at line {\b 270} of file {\b route_datatypes.py}.}\par
}
{\xe \v G_line_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:G_line_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.G_line_stops_keys}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
00002                      {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}]\par
}
{
Definition at line {\b 284} of file {\b route_datatypes.py}.}\par
}
{\xe \v G_line_stops_values\:route_datatypes}
{\xe \v route_datatypes\:G_line_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.G_line_stops_values}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}], \par
00002                        [{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}], \par
00003                        [{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}], \par
00004                        [{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}], \par
00005                        [{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}], \par
00006                        [{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}], \par
00007                        [{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}], \par
00008                        [{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}], \par
00009                        [{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}], \par
00010                        [{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}]]\par
}
{
Definition at line {\b 287} of file {\b route_datatypes.py}.}\par
}
{\xe \v geo_pyPlaces\:route_datatypes}
{\xe \v route_datatypes\:geo_pyPlaces}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.geo_pyPlaces}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "355 West 24th Street, Merced, CA"}, {\cf22 "595, Glendon Court, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "4298, Lasalle Drive, The Meadows At Bellevue Ranch West, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "1220 Daybreak Dr, Merced, CA 95348"}, {\cf22 "19, El Portal Drive, Merced, Merced County, California, 95340, United States"},\par
00002                 {\cf22 "3706 El Redondo Drive"}, {\cf22 "4486 Everson Ct, Merced, CA 95348"}, {\cf22 "80, Emerald Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "59, Sandy Lane, Merced, Merced County, California, 95340, United States"}, {\cf22 "3514 G St, Merced, CA 95340"}, {\cf22 "2962, Willowbrook Drive, Merced, Merced County, California, 95348, United States"}, \par
00003                 {\cf22 "621 M St, Merced, CA 95348"}, {\cf22 "415, West 18th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "586 Barclay Way, Merced, CA 95348"}, {\cf22 "597, Collins Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "1223, Devonwood Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "614, Stanford Court, Merced, Merced County, California, 95348, United States"}, {\cf22 "3304, Santa Rosa Court, Merced, Merced County, California, 95348, United States"},\par
00004                 {\cf22 "710, West 16th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "2397, Explorador Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "755, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "3892, R Street, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "Pizza Factory, G Street, Merced, Merced County, California, 98348, United States"},\par
00005                 {\cf22 "315 Mercy Avenue, Merced, CA, USA"}, {\cf22 "3601 G Street, Merced, CA"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgical & Dianogstic Center"}, {\cf22 "2897 Bellevue Rd, Merced, CA 95340"},\par
00006                 {\cf22 "Walmart 3055 Loughborough Drive"}, {\cf22 "Doctors Carreon Adrian Md, 410, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "Soccer Field (Varsity) G Street"}]\par
}
{
Definition at line {\b 11} of file {\b route_datatypes.py}.}\par
}
{\xe \v geo_pyPlacesCoords\:route_datatypes}
{\xe \v route_datatypes\:geo_pyPlacesCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.geo_pyPlacesCoords = []}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b route_datatypes.py}.}\par
}
{\xe \v geo_pyPlacesGeocode\:route_datatypes}
{\xe \v route_datatypes\:geo_pyPlacesGeocode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.geo_pyPlacesGeocode = []}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b route_datatypes.py}.}\par
}
{\xe \v geolocator\:route_datatypes}
{\xe \v route_datatypes\:geolocator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
route_datatypes.geolocator = Nominatim(user_agent = "route app", {\b ssl_context}={\b ssl_context}, timeout=10)}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b route_datatypes.py}.}\par
}
{\xe \v location\:route_datatypes}
{\xe \v route_datatypes\:location}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
route_datatypes.location = geolocator.geocode(place)}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b route_datatypes.py}.}\par
}
{\xe \v places\:route_datatypes}
{\xe \v route_datatypes\:places}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.places}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "Amtrak Station"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}, {\cf22 "Compass Pointe Apts"}, \par
00002           {\cf22 "El Portal & G Street"}, {\cf22 "El Redondo Dr"}, {\cf22 "Foothill Drive"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}, \par
00003           {\cf22 "G Street South"}, {\cf22 "Granville Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "M St. At Bellevue RD"}, \par
00004           {\cf22 "M Street Village Apartments"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Merced Mall Target"}, {\cf22 "Merced Transpo"}, {\cf22 "Moraga Subdivision"}, \par
00005           {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "TriCollege/Mercy"}, {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, \par
00006           {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgery Center"}, {\cf22 "University Transit Center"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, \par
00007           {\cf22 "Yosemite Crossings Shopping Center"}]\par
}
{
Definition at line {\b 3} of file {\b route_datatypes.py}.}\par
}
{\xe \v ssl_context\:route_datatypes}
{\xe \v route_datatypes\:ssl_context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
route_datatypes.ssl_context = ssl.create_default_context(cafile=certifi.where())}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b route_datatypes.py}.}\par
}
{\xe \v yosemite_express_stops\:route_datatypes}
{\xe \v route_datatypes\:yosemite_express_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict route_datatypes.yosemite_express_stops}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  \{\par
00002     {\cf22 "Moraga Subdivision"}: [{\cf22 "9:00"}, {\cf22 "9:27"}, {\cf22 "9:54"}, {\cf22 "10:36"}, {\cf22 "11:03"}, {\cf22 "11:30"}, {\cf22 "11:57"}, {\cf22 "12:24"}, {\cf22 "12:51"}, {\cf22 "1:18"},{\cf22 "2:00"}, \par
00003                            {\cf22 "2:27"}, {\cf22 "2:54"}, {\cf22 "3:21"}, {\cf22 "4:03"}, {\cf22 "4:35"}, {\cf22 "5:02"}, {\cf22 "5:29"}, {\cf22 "5:56"}, {\cf22 "6:38"},{\cf22 "7:05"}, {\cf22 "7:32"}, {\cf22 "7:59"}, \par
00004                            {\cf22 "8:26"}, {\cf22 "8:53"}, {\cf22 "9:20"}, {\cf22 "10:02"}], \par
00005     {\cf22 "University Transit Center"} : [{\cf22 "9:07"}, {\cf22 "9:34"}, {\cf22 "10:16"},{\cf22 "10:43"}, {\cf22 "11:10"}, {\cf22 "11:37"}, {\cf22 "12:04"}, {\cf22 "12:31"}, \par
00006                                         {\cf22 "12:58"}, {\cf22 "1:40"},{\cf22 "2:07"}, {\cf22 "2:34"}, {\cf22 "3:01"}, {\cf22 "3:43"}, {\cf22 "4:10"}, {\cf22 "4:42"}, {\cf22 "5:09"}, \par
00007                                         {\cf22 "5:36"}, {\cf22 "6:18"}, {\cf22 "6:45"}, {\cf22 "7:12"}, {\cf22 "7:39"}, {\cf22 "8:06"}, {\cf22 "8:33"}, {\cf22 "9:00"}, {\cf22 "9:42"}, {\cf22 "10:09"}],\par
00008     {\cf22 "Foothill Drive"} : [{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"},{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}], \par
00009     {\cf22 "TriCollege/Mercy"} : [{\cf22 "9:16"},{\cf22 "9:43"}, {\cf22 "10:25"}, {\cf22 "10:52"}, {\cf22 "11:19"}, {\cf22 "11:46"}, {\cf22 "12:13"}, {\cf22 "12:40"}, {\cf22 "1:07"}, {\cf22 "1:49"}, \par
00010                             {\cf22 "2:16"}, {\cf22 "2:43"},{\cf22 "3:10"}, {\cf22 "3:52"}, {\cf22 "4:24"}, {\cf22 "4:51"},{\cf22 "5:18"}, {\cf22 "5:45"}, {\cf22 "6:27"}, {\cf22 "6:54"}, {\cf22 "7:21"}, \par
00011                             {\cf22 "7:48"}, {\cf22 "8:15"}, {\cf22 "8:42"}, {\cf22 "9:09"}, {\cf22 "9:51"}, {\cf22 "REQ:"}], \par
00012     {\cf22 "G Street South"} : [{\cf22 "9:19"}, {\cf22 "9:46"}, {\cf22 "10:28"},{\cf22 "10:55"}, {\cf22 "11:22"}, {\cf22 "11:49"}, {\cf22 "12:16"}, {\cf22 "12:43"}, {\cf22 "1:10"}, {\cf22 "1:52"}, \par
00013                         {\cf22 "2:19"}, {\cf22 "2:46"}, {\cf22 "3:13"}, {\cf22 "3:55"},  {\cf22 "4:27"}, {\cf22 "4:54"}, {\cf22 "5:21"}, {\cf22 "5:48"}, {\cf22 "6:30"},{\cf22 "6:57"}, {\cf22 "7:24"}, \par
00014                         {\cf22 "7:51"}, {\cf22 "8:18"}, {\cf22 "8:45"}, {\cf22 "9:12"}, {\cf22 "9:54"}, {\cf22 "REQ:"}],\par
00015     {\cf22 "University Surgery Center"}:[{\cf22 "9:24"}, {\cf22 "9:51"}, {\cf22 "10:33"}, {\cf22 "11:00"}, {\cf22 "11:27"}, {\cf22 "11:54"}, {\cf22 "12:21"}, {\cf22 "12:48"},{\cf22 "1:15"}, \par
00016                                 {\cf22 "1:57"}, {\cf22 "2:24"}, {\cf22 "2:51"}, {\cf22 "3:18"}, {\cf22 "4:00"}, {\cf22 "4:32"},{\cf22 "4:59"}, {\cf22 "5:26"}, {\cf22 "5:53"}, {\cf22 "6:35"}, \par
00017                                 {\cf22 "7:02"}, {\cf22 "7:29"}, {\cf22 "7:56"}, {\cf22 "8:23"}, {\cf22 "8:50"}, {\cf22 "9:17"}, {\cf22 "9:59"}, {\cf22 "REQ:"}]\par
00018 \}\par
}
{
Definition at line {\b 298} of file {\b route_datatypes.py}.}\par
}
{\xe \v yosemite_express_stops_keys\:route_datatypes}
{\xe \v route_datatypes\:yosemite_express_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.yosemite_express_stops_keys}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, \par
00002                                {\cf22 "University Transit Center"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}]\par
}
{
Definition at line {\b 317} of file {\b route_datatypes.py}.}\par
}
{\xe \v yosemite_express_stops_values\:route_datatypes}
{\xe \v route_datatypes\:yosemite_express_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list route_datatypes.yosemite_express_stops_values}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  [[{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}], \par
00002                                  [{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}], [{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}], \par
00003                                  [{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}], [{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}], \par
00004                                  [{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}], [{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}], \par
00005                                  [{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}], [{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}], \par
00006                                  [{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}]]\par
}
{
Definition at line {\b 320} of file {\b route_datatypes.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
search Namespace Reference\par \pard\plain 
{\tc\tcl2 \v search}
{\xe \v search}
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b validatePlaceq1} (target, start, end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b validatePlaceq2} (target, start, end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b validateTime} (input_time)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dict_binary_search} (name, target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b findBusTaken} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b busGoStops} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b findBusGo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b findshortestBus} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tz_LA} = pytz.timezone('America/Los_Angeles')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b datetime_LA} = datetime.now({\b tz_LA})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b placeFoundq1} = False\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b placeFoundq2} = False\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b q1} = input("Where would you like to go?: ")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b q2} = input("Where are you currently located?: ")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b named_stops} = \{"Bobcat Express": bobcat_express_stops, "C1": C1_stops, "C2": C2_stops, "E1": E1_stops, "E2": E2_stops, "Fastcat": Fastcat_stops, "Fastcat 2": Fastcat2_stops, "G Line": G_line_stops, "Yosemite Express" : yosemite_express_stops\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b bus_names} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b possible_buses} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b possible_busnames} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b possible_distances} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b shortest_stops} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b busGo_stops} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b distances_dict} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b shortestnames_stops} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b distances_list} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b q3} = input("What time would you like to arrive by? Enter a time (Hour:Minute:Second format): ")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b client} = ORS(api_key='5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b potential_buses} = set()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b unique_list} = list({\b potential_buses})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v busGoStops\:search}
{\xe \v search\:busGoStops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.busGoStops ()}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 134} of file {\b search.py}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_a8af036654b8c8878447d1e55225cc4c1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_a8af036654b8c8878447d1e55225cc4c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v dict_binary_search\:search}
{\xe \v search\:dict_binary_search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.dict_binary_search ( name,  target)}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 114} of file {\b search.py}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_a79be19296b7b96829cfc6d54ec5cb084_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findBusGo\:search}
{\xe \v search\:findBusGo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.findBusGo ()}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b search.py}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_a6aed943c283470ac4811b589afebee85_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_a6aed943c283470ac4811b589afebee85_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findBusTaken\:search}
{\xe \v search\:findBusTaken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.findBusTaken ()}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 129} of file {\b search.py}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_a67013b4ddfe9c4f2dbb661a642cbed07_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_a67013b4ddfe9c4f2dbb661a642cbed07_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findshortestBus\:search}
{\xe \v search\:findshortestBus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.findshortestBus ()}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 173} of file {\b search.py}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_afdf665e9c4a977f17e7c7604884bf928_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_afdf665e9c4a977f17e7c7604884bf928_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validatePlaceq1\:search}
{\xe \v search\:validatePlaceq1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.validatePlaceq1 ( target,  start,  end)}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b search.py}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_aa0a2895db358e9e68e0f40f93d11dd85_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_aa0a2895db358e9e68e0f40f93d11dd85_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validatePlaceq2\:search}
{\xe \v search\:validatePlaceq2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.validatePlaceq2 ( target,  start,  end)}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b search.py}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_ae8f1d38ba40d7cb40299d427d773b353_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacesearch_ae8f1d38ba40d7cb40299d427d773b353_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validateTime\:search}
{\xe \v search\:validateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.validateTime ( input_time)}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b search.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v bus_names\:search}
{\xe \v search\:bus_names}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict search.bus_names = \{\}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b search.py}.}\par
}
{\xe \v busGo_stops\:search}
{\xe \v search\:busGo_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict search.busGo_stops = \{\}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b search.py}.}\par
}
{\xe \v client\:search}
{\xe \v search\:client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.client = ORS(api_key='5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3')}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 141} of file {\b search.py}.}\par
}
{\xe \v datetime_LA\:search}
{\xe \v search\:datetime_LA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.datetime_LA = datetime.now({\b tz_LA})}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b search.py}.}\par
}
{\xe \v distances_dict\:search}
{\xe \v search\:distances_dict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict search.distances_dict = \{\}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b search.py}.}\par
}
{\xe \v distances_list\:search}
{\xe \v search\:distances_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list search.distances_list = []}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b search.py}.}\par
}
{\xe \v named_stops\:search}
{\xe \v search\:named_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict search.named_stops = \{"Bobcat Express": bobcat_express_stops, "C1": C1_stops, "C2": C2_stops, "E1": E1_stops, "E2": E2_stops, "Fastcat": Fastcat_stops, "Fastcat 2": Fastcat2_stops, "G Line": G_line_stops, "Yosemite Express" : yosemite_express_stops\}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 95} of file {\b search.py}.}\par
}
{\xe \v placeFoundq1\:search}
{\xe \v search\:placeFoundq1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool search.placeFoundq1 = False}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b search.py}.}\par
}
{\xe \v placeFoundq2\:search}
{\xe \v search\:placeFoundq2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool search.placeFoundq2 = False}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b search.py}.}\par
}
{\xe \v possible_buses\:search}
{\xe \v search\:possible_buses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict search.possible_buses = \{\}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 97} of file {\b search.py}.}\par
}
{\xe \v possible_busnames\:search}
{\xe \v search\:possible_busnames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list search.possible_busnames = []}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b search.py}.}\par
}
{\xe \v possible_distances\:search}
{\xe \v search\:possible_distances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict search.possible_distances = \{\}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b search.py}.}\par
}
{\xe \v potential_buses\:search}
{\xe \v search\:potential_buses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.potential_buses = set()}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 198} of file {\b search.py}.}\par
}
{\xe \v q1\:search}
{\xe \v search\:q1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.q1 = input("Where would you like to go?: ")}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b search.py}.}\par
}
{\xe \v q2\:search}
{\xe \v search\:q2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.q2 = input("Where are you currently located?: ")}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b search.py}.}\par
}
{\xe \v q3\:search}
{\xe \v search\:q3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.q3 = input("What time would you like to arrive by? Enter a time (Hour:Minute:Second format): ")}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b search.py}.}\par
}
{\xe \v shortest_stops\:search}
{\xe \v search\:shortest_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list search.shortest_stops = []}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 100} of file {\b search.py}.}\par
}
{\xe \v shortestnames_stops\:search}
{\xe \v search\:shortestnames_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dict search.shortestnames_stops = \{\}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b search.py}.}\par
}
{\xe \v tz_LA\:search}
{\xe \v search\:tz_LA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.tz_LA = pytz.timezone('America/Los_Angeles')}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b search.py}.}\par
}
{\xe \v unique_list\:search}
{\xe \v search\:unique_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
search.unique_list = list({\b potential_buses})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 205} of file {\b search.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tester Namespace Reference\par \pard\plain 
{\tc\tcl2 \v tester}
{\xe \v tester}
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b simple_calculator} (expression)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v simple_calculator\:tester}
{\xe \v tester\:simple_calculator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tester.simple_calculator ( expression)}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1} of file {\b tester.py}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacetester_aaccb9dff0d9481dceaffc98f77918b9a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacetester_aaccb9dff0d9481dceaffc98f77918b9a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArrayList< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ArrayList< T >}
{\xe \v ArrayList< T >}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
{
{\f2 #include <ArrayList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
auto {\b begin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
auto {\b end} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList} (const {\b ArrayList} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList} & {\b operator=} (const {\b ArrayList} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList} (std::initializer_list< T > list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList} {\b insertionSort} ({\b ArrayList}< T > &list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b append} (T value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b append} ({\b LinkedList}< std::list< T > > *value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getsize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T * {\b getarr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b prepend} (T val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeFirst} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeLast} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b operator[]} (int {\b index})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T & {\b operator[]} (int {\b index}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b index} (T target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b search} (std::string target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ArrayList} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inflate} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deflate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T * {\b arr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b capacity}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestArrayList}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &os, const {\b ArrayList}< T > &container)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class ArrayList< T >\par
}
\par
{
Definition at line {\b 19} of file {\b ArrayList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArrayList\:ArrayList< T >}
{\xe \v ArrayList< T >\:ArrayList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}< T >{\b ::ArrayList} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b ArrayList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_a77ba51ae82bb2246563af5c4d64d438e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ArrayList\:ArrayList< T >}
{\xe \v ArrayList< T >\:ArrayList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}< T >{\b ::ArrayList} (const {\b ArrayList}< T > & other){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_a40e4e8789525d9df99df5dad2004c450_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ArrayList\:ArrayList< T >}
{\xe \v ArrayList< T >\:ArrayList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}< T >{\b ::ArrayList} (std::initializer_list< T > list){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 93} of file {\b ArrayList.h}.}\par
}
{\xe \v ~ArrayList\:ArrayList< T >}
{\xe \v ArrayList< T >\:~ArrayList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}< T >::~{\b ArrayList} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 222} of file {\b ArrayList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v append\:ArrayList< T >}
{\xe \v ArrayList< T >\:append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b ArrayList}< T >::append ({\b LinkedList}< std::list< T > > * value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_ab4ca4a44df2124cef802c85d17c895a0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v append\:ArrayList< T >}
{\xe \v ArrayList< T >\:append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b ArrayList}< T >::append (T value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_a4b4d6ec48045b7056f73db5dfa9f2b66_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_a4b4d6ec48045b7056f73db5dfa9f2b66_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v begin\:ArrayList< T >}
{\xe \v ArrayList< T >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> auto {\b ArrayList}< T >::begin (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b ArrayList.h}.}\par
}
{\xe \v deflate\:ArrayList< T >}
{\xe \v ArrayList< T >\:deflate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b ArrayList}< T >::deflate (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b ArrayList.h}.}\par
}
{\xe \v end\:ArrayList< T >}
{\xe \v ArrayList< T >\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> auto {\b ArrayList}< T >::end (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b ArrayList.h}.}\par
}
{\xe \v getarr\:ArrayList< T >}
{\xe \v ArrayList< T >\:getarr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> T * {\b ArrayList}< T >::getarr (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 140} of file {\b ArrayList.h}.}\par
}
{\xe \v getsize\:ArrayList< T >}
{\xe \v ArrayList< T >\:getsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b ArrayList}< T >::getsize () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 136} of file {\b ArrayList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_a063667aea4d7d7c5967608d3c9e7d475_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v index\:ArrayList< T >}
{\xe \v ArrayList< T >\:index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b ArrayList}< T >::index (T target){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 182} of file {\b ArrayList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_af79c627742b9f3e860ae8626093acebd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v inflate\:ArrayList< T >}
{\xe \v ArrayList< T >\:inflate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b ArrayList}< T >::inflate (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b ArrayList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_a4f600ba53c65641ca13c079cffa55dee_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v insertionSort\:ArrayList< T >}
{\xe \v ArrayList< T >\:insertionSort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList} {\b ArrayList}< T >::insertionSort ({\b ArrayList}< T > & list){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 105} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_ada3fb5f7a252cfd485ce04c99435479d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator=\:ArrayList< T >}
{\xe \v ArrayList< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList} & {\b ArrayList}< T >::operator= (const {\b ArrayList}< T > & other){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_a6b43f2d020e29c652c3909bae4d01e43_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator[]\:ArrayList< T >}
{\xe \v ArrayList< T >\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> T & {\b ArrayList}< T >::operator[] (int index){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 170} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_af75c5296ea79cd6df004884bc6532481_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator[]\:ArrayList< T >}
{\xe \v ArrayList< T >\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> const T & {\b ArrayList}< T >::operator[] (int index) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 174} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_aef30d5442626d0b372aa9a8cf6eef4ee_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v prepend\:ArrayList< T >}
{\xe \v ArrayList< T >\:prepend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b ArrayList}< T >::prepend (T val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b ArrayList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_array_list_aa9d55292cfe75a3b297882ce4fdf6505_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v removeFirst\:ArrayList< T >}
{\xe \v ArrayList< T >\:removeFirst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b ArrayList}< T >::removeFirst (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 155} of file {\b ArrayList.h}.}\par
}
{\xe \v removeLast\:ArrayList< T >}
{\xe \v ArrayList< T >\:removeLast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b ArrayList}< T >::removeLast (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 166} of file {\b ArrayList.h}.}\par
}
{\xe \v search\:ArrayList< T >}
{\xe \v ArrayList< T >\:search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::string {\b ArrayList}< T >::search (std::string target){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 202} of file {\b ArrayList.h}.}\par
}
{\xe \v size\:ArrayList< T >}
{\xe \v ArrayList< T >\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b ArrayList}< T >::size (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 178} of file {\b ArrayList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator<<\:ArrayList< T >}
{\xe \v ArrayList< T >\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::ostream & operator<< (std::ostream & os, const {\b ArrayList}< T > & container){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 231} of file {\b ArrayList.h}.}\par
}
{\xe \v TestArrayList\:ArrayList< T >}
{\xe \v ArrayList< T >\:TestArrayList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> friend struct TestArrayList{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b ArrayList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v arr\:ArrayList< T >}
{\xe \v ArrayList< T >\:arr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> T* {\b ArrayList}< T >::arr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b ArrayList.h}.}\par
}
{\xe \v capacity\:ArrayList< T >}
{\xe \v ArrayList< T >\:capacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b ArrayList}< T >::capacity{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b ArrayList.h}.}\par
}
{\xe \v count\:ArrayList< T >}
{\xe \v ArrayList< T >\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b ArrayList}< T >::count{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b ArrayList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HashTable< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v HashTable< T >}
{\xe \v HashTable< T >}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\par
{
{\f2 #include <HashTable.h>}}\par
Collaboration diagram for HashTable< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable} (std::string {\b name}, int {\b buckets})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable} (std::string {\b name}, {\b ArrayList}< T > &bus_keys)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable} (const {\b HashTable}< T > &other)=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable} ({\b HashTable}< T > &&other) noexcept=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< T > & {\b operator=} (const {\b HashTable}< T > &other)=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< T > & {\b operator=} ({\b HashTable}< T > &&other) noexcept=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~HashTable} ()=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
auto {\b begin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
auto {\b end} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HashInts} (int val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HashStrings} (const std::string &val) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b getKeys} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< {\b LinkedList}< std::list< T > > > {\b getValues} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LinkedList}< {\b HashTable}< T > > {\b getValues} (std::string busname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b search} (std::string val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b searchforKeyIndex} (float val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b searchforKey} (float val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b operator[]} (int key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b operator[]} (std::string key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getBuckets} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getName} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getMinValue} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendTable} (int hashCode, const std::string &value, {\b HashTable}< T > &values)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendHashes} ({\b ArrayList}< T > &bus_keys, {\b ArrayList}< std::list< T > > &values)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendHashes} ({\b ArrayList}< T > &bus_keys, {\b ArrayList}< {\b HashTable}< T > > &values)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendHashes} ({\b ArrayList}< T > &bus_keys, {\b HashTable}< T > &values)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendHashes} ({\b ArrayList}< std::string > &bus_keys, T distances)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendHashes} (std::string bus_keys, std::string busnames)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendHashes} ({\b ArrayList}< std::string > &bus_keys, float distances)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buckets}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< {\b LinkedList}< std::list< T > > > {\b data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< {\b LinkedList}< {\b HashTable}< T > > > {\b dataTables}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< {\b LinkedList}< T > > {\b dataT}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &os, const {\b HashTable}< T > &table)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class HashTable< T >\par
}
\par
{
Definition at line {\b 20} of file {\b HashTable.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HashTable\:HashTable< T >}
{\xe \v HashTable< T >\:HashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T >{\b ::HashTable} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b HashTable.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_aef9a69291686266a617009ace9bcb135_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HashTable\:HashTable< T >}
{\xe \v HashTable< T >\:HashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T >{\b ::HashTable} (std::string name, int buckets){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a4a11963e508c404d4639910fe8642571_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HashTable\:HashTable< T >}
{\xe \v HashTable< T >\:HashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T >{\b ::HashTable} (std::string name, {\b ArrayList}< T > & bus_keys){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_adf3873ac75e2ae9a37ac4cdce8bf95ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HashTable\:HashTable< T >}
{\xe \v HashTable< T >\:HashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T >{\b ::HashTable} (const {\b HashTable}< T > & other){\f2 [default]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a9975878c274ef8e36176b88629af2887_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HashTable\:HashTable< T >}
{\xe \v HashTable< T >\:HashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T >{\b ::HashTable} ({\b HashTable}< T > && other){\f2 [default]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a15f6fd855190aa4060743fa1a5ad1048_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~HashTable\:HashTable< T >}
{\xe \v HashTable< T >\:~HashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T >::~{\b HashTable} (){\f2 [default]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v appendHashes\:HashTable< T >}
{\xe \v HashTable< T >\:appendHashes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b HashTable}< T >::appendHashes ({\b ArrayList}< std::string > & bus_keys, float distances){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 270} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a0c2f65372ae69ba7852b552238f5accd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v appendHashes\:HashTable< T >}
{\xe \v HashTable< T >\:appendHashes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b HashTable}< T >::appendHashes ({\b ArrayList}< std::string > & bus_keys, T distances){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 256} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a017abff6a21774cfc698883f383aba59_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v appendHashes\:HashTable< T >}
{\xe \v HashTable< T >\:appendHashes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b HashTable}< T >::appendHashes ({\b ArrayList}< T > & bus_keys, {\b ArrayList}< {\b HashTable}< T > > & values){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 240} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_ab526b44388ca692ef94c4561c21e1ae9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v appendHashes\:HashTable< T >}
{\xe \v HashTable< T >\:appendHashes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b HashTable}< T >::appendHashes ({\b ArrayList}< T > & bus_keys, {\b ArrayList}< std::list< T > > & values){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 232} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a19d70062202d74e388bd00ee3e60252c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a19d70062202d74e388bd00ee3e60252c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v appendHashes\:HashTable< T >}
{\xe \v HashTable< T >\:appendHashes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b HashTable}< T >::appendHashes ({\b ArrayList}< T > & bus_keys, {\b HashTable}< T > & values){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 248} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_ae398bb56ee52bc6c176977ea4366d517_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v appendHashes\:HashTable< T >}
{\xe \v HashTable< T >\:appendHashes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b HashTable}< T >::appendHashes (std::string bus_keys, std::string busnames){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 264} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a579bdf29d6361e749a091ca6b2f01111_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v appendTable\:HashTable< T >}
{\xe \v HashTable< T >\:appendTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b HashTable}< T >::appendTable (int hashCode, const std::string & value, {\b HashTable}< T > & values){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_abf14fb1b8620c525979c1273ed8197e7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v begin\:HashTable< T >}
{\xe \v HashTable< T >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> auto {\b HashTable}< T >::begin (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b HashTable.h}.}\par
}
{\xe \v end\:HashTable< T >}
{\xe \v HashTable< T >\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> auto {\b HashTable}< T >::end (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b HashTable.h}.}\par
}
{\xe \v getBuckets\:HashTable< T >}
{\xe \v HashTable< T >\:getBuckets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b HashTable}< T >::getBuckets () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 198} of file {\b HashTable.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a334c472f741326880069131e6e250d04_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getKeys\:HashTable< T >}
{\xe \v HashTable< T >\:getKeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}< std::string > {\b HashTable}< T >::getKeys () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b HashTable.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a696a2532b2a73abc2a2135e57d138906_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getMinValue\:HashTable< T >}
{\xe \v HashTable< T >\:getMinValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> float {\b HashTable}< T >::getMinValue (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 206} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a78319df5357e26b81cfa732d9fd23967_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getName\:HashTable< T >}
{\xe \v HashTable< T >\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::string {\b HashTable}< T >::getName () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 202} of file {\b HashTable.h}.}\par
}
{\xe \v getValues\:HashTable< T >}
{\xe \v HashTable< T >\:getValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}< {\b LinkedList}< std::list< T > > > {\b HashTable}< T >::getValues (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b HashTable.h}.}\par
}
{\xe \v getValues\:HashTable< T >}
{\xe \v HashTable< T >\:getValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b LinkedList}< {\b HashTable}< T > > {\b HashTable}< T >::getValues (std::string busname){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 112} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a14225a6edd19b90b8e9ed55484c7766f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HashInts\:HashTable< T >}
{\xe \v HashTable< T >\:HashInts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b HashTable}< T >::HashInts (int val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b HashTable.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a7a5c66eeea34c1566638f1e7a64ab627_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HashStrings\:HashTable< T >}
{\xe \v HashTable< T >\:HashStrings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b HashTable}< T >::HashStrings (const std::string & val) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b HashTable.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a2f9f1e739d8383b38d89fa2508d98a9c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator=\:HashTable< T >}
{\xe \v HashTable< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T > & {\b HashTable}< T >::operator= (const {\b HashTable}< T > & other){\f2 [default]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_aee63cca1c525d74f1dd700f4b43aec97_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator=\:HashTable< T >}
{\xe \v HashTable< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b HashTable}< T > & {\b HashTable}< T >::operator= ({\b HashTable}< T > && other){\f2 [default]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a5bf66782ede692e139142deb5e69274a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator[]\:HashTable< T >}
{\xe \v HashTable< T >\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::string {\b HashTable}< T >::operator[] (int key){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 181} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_ad585ca0ecf155ce37180596d9e4b1ac0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator[]\:HashTable< T >}
{\xe \v HashTable< T >\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::string {\b HashTable}< T >::operator[] (std::string key){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 189} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a9cae17312252d0c048c266dfd7b14ee3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v search\:HashTable< T >}
{\xe \v HashTable< T >\:search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::string {\b HashTable}< T >::search (std::string val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b HashTable.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a012d6d29d5afe9756a310bdff563aa9f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v searchforKey\:HashTable< T >}
{\xe \v HashTable< T >\:searchforKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::string {\b HashTable}< T >::searchforKey (float val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 148} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_a41e58d0ef84097a6ede10d7bdd2d84f3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v searchforKeyIndex\:HashTable< T >}
{\xe \v HashTable< T >\:searchforKeyIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b HashTable}< T >::searchforKeyIndex (float val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b HashTable.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_hash_table_aed30b3a5fcccdf2e1636e32dbf0996e3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator<<\:HashTable< T >}
{\xe \v HashTable< T >\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::ostream & operator<< (std::ostream & os, const {\b HashTable}< T > & table){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 284} of file {\b HashTable.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buckets\:HashTable< T >}
{\xe \v HashTable< T >\:buckets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> int {\b HashTable}< T >::buckets{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b HashTable.h}.}\par
}
{\xe \v data\:HashTable< T >}
{\xe \v HashTable< T >\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}<{\b LinkedList}<std::list<T> > > {\b HashTable}< T >::data{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b HashTable.h}.}\par
}
{\xe \v dataT\:HashTable< T >}
{\xe \v HashTable< T >\:dataT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}<{\b LinkedList}<T> > {\b HashTable}< T >::dataT{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b HashTable.h}.}\par
}
{\xe \v dataTables\:HashTable< T >}
{\xe \v HashTable< T >\:dataTables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}<{\b LinkedList}<{\b HashTable}<T> > > {\b HashTable}< T >::dataTables{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b HashTable.h}.}\par
}
{\xe \v keys\:HashTable< T >}
{\xe \v HashTable< T >\:keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b ArrayList}<std::string> {\b HashTable}< T >::keys{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b HashTable.h}.}\par
}
{\xe \v name\:HashTable< T >}
{\xe \v HashTable< T >\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::string {\b HashTable}< T >::name{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b HashTable.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LinkedList< T >::Iterator Class Reference\par \pard\plain 
{\tc\tcl2 \v LinkedList< T >::Iterator}
{\xe \v LinkedList< T >::Iterator}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
{
{\f2 #include <LinkedList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Iterator} ({\b Node}< T > *node)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b operator*} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Iterator} & {\b operator++} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator!=} (const {\b Iterator} &other) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class LinkedList< T >::Iterator\par
}
\par
{
Definition at line {\b 68} of file {\b LinkedList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Iterator\:LinkedList< T >::Iterator}
{\xe \v LinkedList< T >::Iterator\:Iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b LinkedList}< T >::Iterator::Iterator ({\b Node}< T > * node){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b LinkedList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_1_1_iterator_ae772ed8a3fe633ea021c0851ffd0ef1d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v operator!=\:LinkedList< T >::Iterator}
{\xe \v LinkedList< T >::Iterator\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> bool {\b LinkedList}< T >::Iterator::operator!= (const {\b Iterator} & other) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b LinkedList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_1_1_iterator_a8f198f199bcec5ac69f39cd539000c0e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator*\:LinkedList< T >::Iterator}
{\xe \v LinkedList< T >::Iterator\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> T & {\b LinkedList}< T >::Iterator::operator* (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b LinkedList.h}.}\par
}
{\xe \v operator++\:LinkedList< T >::Iterator}
{\xe \v LinkedList< T >::Iterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Iterator} & {\b LinkedList}< T >::Iterator::operator++ (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b LinkedList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_1_1_iterator_ab71c0df5efc97a4a8ffa8866723e662b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LinkedList.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LinkedList< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v LinkedList< T >}
{\xe \v LinkedList< T >}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\par
{
{\f2 #include <LinkedList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Iterator}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LinkedList} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LinkedList} (const {\b LinkedList}< T > &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Iterator} {\b begin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Iterator} {\b end} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendinLL} (T val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b appendinLL} (float val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~LinkedList} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &os, const {\b LinkedList}< T > &list)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class LinkedList< T >\par
}
\par
{
Definition at line {\b 48} of file {\b LinkedList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LinkedList\:LinkedList< T >}
{\xe \v LinkedList< T >\:LinkedList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b LinkedList}< T >{\b ::LinkedList} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b LinkedList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_a3c20fcfec867e867f541061a09fc640c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v LinkedList\:LinkedList< T >}
{\xe \v LinkedList< T >\:LinkedList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b LinkedList}< T >{\b ::LinkedList} (const {\b LinkedList}< T > & other){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b LinkedList.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_a2e6c246781e458f803203e9c75c6aa90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~LinkedList\:LinkedList< T >}
{\xe \v LinkedList< T >\:~LinkedList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b LinkedList}< T >::~{\b LinkedList} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b LinkedList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v appendinLL\:LinkedList< T >}
{\xe \v LinkedList< T >\:appendinLL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b LinkedList}< T >::appendinLL (float val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b LinkedList.h}.}\par
}
{\xe \v appendinLL\:LinkedList< T >}
{\xe \v LinkedList< T >\:appendinLL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void {\b LinkedList}< T >::appendinLL (T val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 86} of file {\b LinkedList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_afecdb04d978c0206287d8cf88d4e5912_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v begin\:LinkedList< T >}
{\xe \v LinkedList< T >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Iterator} {\b LinkedList}< T >::begin () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b LinkedList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_a417e93e223b5e9f5a511cee4c56ac338_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v end\:LinkedList< T >}
{\xe \v LinkedList< T >\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Iterator} {\b LinkedList}< T >::end () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b LinkedList.h}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_linked_list_abd13f8fef21c6b9a594a36e31d0f79ad_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator<<\:LinkedList< T >}
{\xe \v LinkedList< T >\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::ostream & operator<< (std::ostream & os, const {\b LinkedList}< T > & list){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 133} of file {\b LinkedList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LinkedList.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Node< T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v Node< T >}
{\xe \v Node< T >}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
{
{\f2 #include <BinaryTree.h>}}\par
Collaboration diagram for Node< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_node__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} (T val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} (T {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} (float {\b data})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} * {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} * {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} * {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} * {\b prev}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
struct Node< T >\par
}
\par
{
Definition at line {\b 9} of file {\b BinaryTree.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Node\:Node< T >}
{\xe \v Node< T >\:Node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}< T >{\b ::Node} (T val){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b BinaryTree.h}.}\par
}
{\xe \v Node\:Node< T >}
{\xe \v Node< T >\:Node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}< T >{\b ::Node} (T data){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b LinkedList.h}.}\par
}
{\xe \v Node\:Node< T >}
{\xe \v Node< T >\:Node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}< T >{\b ::Node} (float data){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b LinkedList.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data\:Node< T >}
{\xe \v Node< T >\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> T {\b Node}< T >::data}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b BinaryTree.h}.}\par
}
{\xe \v left\:Node< T >}
{\xe \v Node< T >\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}* {\b Node}< T >::left}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b BinaryTree.h}.}\par
}
{\xe \v next\:Node< T >}
{\xe \v Node< T >\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}* {\b Node}< T >::next}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b LinkedList.h}.}\par
}
{\xe \v prev\:Node< T >}
{\xe \v Node< T >\:prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}* {\b Node}< T >::prev}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b LinkedList.h}.}\par
}
{\xe \v right\:Node< T >}
{\xe \v Node< T >\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}* {\b Node}< T >::right}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b BinaryTree.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BinaryTree.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LinkedList.h}}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArrayList.h File Reference\par \pard\plain 
{\tc\tcl2 \v ArrayList.h}
{\xe \v ArrayList.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <initializer_list>}\par
{\f2 #include "LinkedList.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <ostream>}\par
{\f2 #include <cmath>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ArrayList.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_array_list_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_array_list_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArrayList< T >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T> std::ostream & {\b operator<<} (std::ostream &os, const {\b ArrayList}< T > &container)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator<<\:ArrayList.h}
{\xe \v ArrayList.h\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::ostream & operator<< (std::ostream & os, const {\b ArrayList}< T > & container)}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 231} of file {\b ArrayList.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArrayList.h\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef ARRAY_LIST}\par
00002 {\cf21 #define ARRAY_LIST}\par
00003 \par
00004 {\cf21 #include <initializer_list>}\par
00005 {\cf21 #include "LinkedList.h"}\par
00006 {\cf21 #include <iostream>}\par
00007 {\cf21 #include <ostream>}\par
00008 {\cf21 #include <cmath>}\par
00009 {\cf21 #include <string>}\par
00010 \par
00011 \par
00012 {\cf17 template} <{\cf17 class} T>\par
00013 {\cf17 class }ArrayList;\par
00014 \par
00015 {\cf17 template} <{\cf17 class} T>\par
00016 std::ostream& operator<<(std::ostream& os, {\cf17 const} ArrayList<T>& container);\par
00017 \par
00018 {\cf17 template} <{\cf17 class} T>\par
00019 {\cf17 class }ArrayList\{\par
00020 {\cf17 protected}:\par
00021     T* arr;\par
00022     {\cf18 int} count;\par
00023     {\cf18 int} capacity;\par
00024 \par
00025     {\cf18 void} inflate()\{\par
00026         {\cf19 if} (count == capacity)\{\par
00027             {\cf18 int} oldCapacity = capacity;\par
00028             capacity *= 2;\par
00029 \par
00030             T* temp = {\cf17 new} T[capacity];\par
00031 \par
00032             {\cf19 for} ({\cf18 int} i = 0; i < oldCapacity; i++)\{\par
00033                 temp[i] = arr[i];\par
00034             \}\par
00035 \par
00036             T* old = arr;\par
00037 \par
00038             arr = temp;\par
00039 \par
00040             {\cf17 delete}[] old;\par
00041         \}\par
00042     \}\par
00043 \par
00044     {\cf18 void} deflate()\{\par
00045         {\cf19 if} (capacity > count * 2)\{\par
00046             capacity /= 2;\par
00047             T* temp = {\cf17 new} T[capacity];\par
00048 \par
00049             {\cf19 for} ({\cf18 int} i = 0; i < count; i++)\{\par
00050                 temp[i] = arr[i];\par
00051             \}\par
00052             T* old = arr;\par
00053             arr = temp;\par
00054             {\cf17 delete} [] old;\par
00055         \}\par
00056     \}\par
00057 \par
00058 \par
00059 {\cf17 public}:\par
00060     ArrayList()\{\par
00061         capacity = 1;\par
00062         arr = {\cf17 new} T[capacity];\par
00063         count = 0;\par
00064     \}\par
00065 \par
00066     {\cf17 auto} begin() \{{\cf19 return} arr;\}\par
00067     {\cf17 auto} end() \{{\cf19 return} arr + count;\}\par
00068 \par
00069     ArrayList({\cf17 const} ArrayList& other)\{\par
00070         capacity = other.capacity;\par
00071         arr = {\cf17 new} T[capacity];\par
00072         count = other.count;\par
00073         {\cf19 for} ({\cf18 int} i = 0; i < count; i++)\{\par
00074             arr[i] = other.arr[i];\par
00075         \}\par
00076     \}\par
00077 \par
00078    ArrayList& operator=({\cf17 const} ArrayList& other)\{\par
00079         {\cf19 if} ({\cf17 this} == &other)\{\par
00080             {\cf19 return} *{\cf17 this};\par
00081         \}\par
00082         {\cf17 delete}[] arr;\par
00083         capacity = other.capacity;\par
00084         arr = {\cf17 new} T[capacity];\par
00085         count = other.count;\par
00086         {\cf19 for} ({\cf18 int} i = 0; i < count; i++)\{\par
00087             arr[i] = other.arr[i];\par
00088         \}\par
00089         {\cf19 return} *{\cf17 this};\par
00090     \}\par
00091     \par
00092 \par
00093     ArrayList(std::initializer_list<T> list) \{\par
00094         count = list.size();\par
00095         capacity = (count == 0) ? 1 : (int)pow(2, ceil(std::log2(count)));\par
00096 \par
00097         arr = {\cf17 new} T[capacity];\par
00098         \par
00099         {\cf18 int} i = 0;\par
00100         {\cf19 for} ({\cf17 auto} it = list.begin(); it != list.end(); i++, it++) \{\par
00101             arr[i] = *it;\par
00102         \}\par
00103     \}\par
00104 \par
00105    ArrayList insertionSort(ArrayList<T>& list)\{\par
00106     {\cf19 for} ({\cf18 int} i = 1; i < list.getsize(); i++)\{\par
00107        std::string temp = list[i];\par
00108         {\cf18 int} j = i - 1;\par
00109 \par
00110         {\cf19 while} (j >= 0 && list[j] > temp)\{\par
00111         list[j + 1] = list[j];\par
00112         j--;\par
00113         \}\par
00114         list[j + 1] = temp;\par
00115     \}\par
00116     {\cf19 return} list;\par
00117     \}\par
00118 \par
00119     {\cf18 void} append(T value)\{\par
00120         {\cf19 if} (count == capacity)\{\par
00121             inflate();\par
00122         \}\par
00123         arr[count] = value;\par
00124         count++;\par
00125         \par
00126     \}\par
00127 \par
00128      {\cf18 void} append(LinkedList<std::list<T>>* value)\{\par
00129         {\cf19 if} (count == capacity)\{\par
00130             inflate();\par
00131         \}\par
00132         arr[count] = value;\par
00133         count++;\par
00134     \}\par
00135 \par
00136     {\cf18 int} getsize(){\cf17  const}\{\par
00137         {\cf19 return} count;\par
00138     \}\par
00139 \par
00140     T* getarr()\{\par
00141         {\cf19 return} arr;\par
00142     \}\par
00143 \par
00144     {\cf18 void} prepend(T val)\{\par
00145         {\cf19 if} (count == capacity)\{\par
00146             inflate();\par
00147         \}\par
00148         {\cf19 for} ({\cf18 int} i = count - 1; i >= 0; i--)\{\par
00149             arr[i + 1] = arr[i];\par
00150         \}\par
00151         arr[0] = val;\par
00152         count++;\par
00153     \}\par
00154 \par
00155     {\cf18 void} removeFirst()\{\par
00156         T* temp = {\cf17 new} T[capacity];\par
00157         {\cf19 for} ({\cf18 int} i = 1; i < count; i++)\{\par
00158             temp[i - 1] = arr[i];\par
00159         \}\par
00160         T* old = arr;\par
00161         arr = temp;\par
00162         {\cf17 delete} [] old;\par
00163         count--;\par
00164     \}\par
00165 \par
00166     {\cf18 void} removeLast()\{\par
00167         count--;\par
00168     \}\par
00169 \par
00170     T& operator[]({\cf18 int} index)\{\par
00171         {\cf19 return} arr[index];\par
00172     \}\par
00173 \par
00174     {\cf17 const} T& operator[]({\cf18 int} index){\cf17  const }\{\par
00175         {\cf19 return} arr[index];\par
00176     \}\par
00177 \par
00178     {\cf18 int} size() \{\par
00179         {\cf19 return} count;\par
00180     \}\par
00181     \par
00182    {\cf18 int} index(T target)\{\par
00183         {\cf18 int} low = 0;\par
00184         {\cf18 int} high = count - 1;\par
00185 \par
00186         {\cf19 while} (low <= high)\{\par
00187             {\cf18 int} middle = (low + high) / 2;\par
00188             T value = arr[middle];\par
00189             {\cf19 if} (value < target)\{\par
00190                 low = middle + 1;\par
00191             \}\par
00192             {\cf19 else} {\cf19 if} (value > target)\{\par
00193                 high = middle - 1;\par
00194             \}\par
00195             {\cf19 else}\{\par
00196                 {\cf19 return} middle;\par
00197             \}\par
00198         \}\par
00199         {\cf19 return} -1;\par
00200     \} \par
00201 \par
00202     std::string search(std::string target)\{\par
00203         {\cf18 int} low = 0;\par
00204         {\cf18 int} high = count - 1;\par
00205 \par
00206         {\cf19 while} (low <= high)\{\par
00207             {\cf18 int} middle = (low + high) / 2;\par
00208             T value = arr[middle];\par
00209             {\cf19 if} (value < target)\{\par
00210                 low = middle + 1;\par
00211             \}\par
00212             {\cf19 else} {\cf19 if} (value > target)\{\par
00213                 high = middle - 1;\par
00214             \}\par
00215             {\cf19 else}\{\par
00216                 {\cf19 return} arr[middle];\par
00217             \}\par
00218         \}\par
00219         {\cf19 return} {\cf22 ""};\par
00220     \}\par
00221 \par
00222     ~ArrayList()\{\par
00223         {\cf17 delete}[] arr;\par
00224     \}\par
00225 \par
00226     {\cf17 friend} std::ostream& operator<< <>(std::ostream& os, {\cf17 const} ArrayList<T>& container);\par
00227     {\cf17 friend} {\cf17 struct }TestArrayList;\par
00228 \};\par
00229 \par
00230 {\cf17 template} <{\cf17 class} T>\par
00231 std::ostream& operator<<(std::ostream& os, {\cf17 const} ArrayList<T>& container)\{\par
00232     {\cf19 for} ({\cf18 int} i = 0; i < container.count; i++)\{\par
00233         os << container.arr[i];\par
00234         {\cf19 if} (i < container.count-1)\{\par
00235             os << {\cf22 ", "};\par
00236         \}\par
00237     \}\par
00238     {\cf19 return} os;\par
00239 \}\par
00240 \par
00241 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BinaryTree.h File Reference\par \pard\plain 
{\tc\tcl2 \v BinaryTree.h}
{\xe \v BinaryTree.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <ostream>}\par
{\f2 #include "ArrayList.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for BinaryTree.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_binary_tree_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Node< T >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T> {\b Node}< T > * {\b sorted_BST} ({\b ArrayList}< T > &list, int start, int end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T> void {\b print_tree} ({\b Node}< T > *root, std::string indent="", bool last=true)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v print_tree\:BinaryTree.h}
{\xe \v BinaryTree.h\:print_tree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> void print_tree ({\b Node}< T > * root, std::string indent = {\f2 ""}, bool last = {\f2 true})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b BinaryTree.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_binary_tree_8h_afaf0762fd71cfb9a550a9086efcf8985_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_binary_tree_8h_afaf0762fd71cfb9a550a9086efcf8985_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sorted_BST\:BinaryTree.h}
{\xe \v BinaryTree.h\:sorted_BST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> {\b Node}< T > * sorted_BST ({\b ArrayList}< T > & list, int start, int end)}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b BinaryTree.h}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_binary_tree_8h_a3d6d6401e490c4477d568c2f28072327_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_binary_tree_8h_a3d6d6401e490c4477d568c2f28072327_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BinaryTree.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BINARY_TREE}\par
00002 {\cf21 #define BINARY_TREE}\par
00003 \par
00004 {\cf21 #include <iostream>}\par
00005 {\cf21 #include <ostream>}\par
00006 {\cf21 #include "ArrayList.h"}\par
00007 \par
00008 {\cf17 template} <{\cf17 class} T>\par
00009 {\cf17 struct }Node\{\par
00010     T data;\par
00011     Node* left;\par
00012     Node* right;\par
00013 \par
00014 \par
00015     Node(T val)\{\par
00016         data = val;\par
00017     \}\par
00018 \};\par
00019 \par
00020 {\cf20 //creates a Binary Search Tree using a sorted ArrayList}\par
00021 {\cf17 template} <{\cf17 class} T>\par
00022 Node<T>* sorted_BST(ArrayList<T>& list, {\cf18 int} start, {\cf18 int} end)\{\par
00023     {\cf19 if} (start > end) \{\par
00024         {\cf19 return} {\cf17 nullptr};\par
00025     \}\par
00026     {\cf18 int} mid = (start + end) / 2;\par
00027     Node<T>* node = {\cf17 new} Node<T>(list[mid]);\par
00028     node->left = sorted_BST(list, start, mid - 1);\par
00029     node->right = sorted_BST(list, mid + 1, end);\par
00030     {\cf19 return} node;\par
00031 \}\par
00032 \par
00033 {\cf20 // Prints the binary tree in a pretty way with branches}\par
00034 {\cf17 template} <{\cf17 class} T>\par
00035 {\cf18 void} print_tree(Node<T>* root, std::string indent = {\cf22 ""}, {\cf18 bool} last = {\cf17 true}) \{\par
00036     {\cf19 if} (!root) {\cf19 return};\par
00037     std::cout << indent;\par
00038     {\cf19 if} (last) \{\par
00039         std::cout << {\cf22 "+-- "};\par
00040         indent += {\cf22 "    "};\par
00041     \} {\cf19 else} \{\par
00042         std::cout << {\cf22 "+-- "};\par
00043         indent += {\cf22 "|   "};\par
00044     \}\par
00045     std::cout << root->data << std::endl;\par
00046     print_tree(root->left, indent, {\cf17 false});\par
00047     print_tree(root->right, indent, {\cf17 true});\par
00048 \}\par
00049 {\cf17 template} <{\cf17 class} T>\par
00050 {\cf18 void} print_tree(Node<T>* root, std::string indent = {\cf22 ""}, {\cf18 bool} last = {\cf17 true})\{\par
00051     {\cf19 if} (!root) {\cf19 return};\par
00052 \}\par
00053 \par
00054 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
brain.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v brain.cpp}
{\xe \v brain.cpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <chrono>}\par
{\f2 #include <ctime>}\par
{\f2 #include <vector>}\par
{\f2 #include "stops_data.h"}\par
{\f2 #include "ArrayList.h"}\par
{\f2 #include <unordered_set>}\par
{\f2 #include "HashTable.h"}\par
{\f2 #include <cpr/cpr.h>}\par
{\f2 #include <nlohmann/json.hpp>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for brain.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
using {\b json} = nlohmann::json\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b validatePlace} ({\b ArrayList}< std::string > list, std::string target, int start, int end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b Hash_binary_search} ({\b HashTable}< std::string > &table, const std::string &target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b findBusTaken} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b busGoStops} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b apiCalls} (std::string point1, std::string point2, std::string point3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b findbustoTake} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b findBusSimilar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b findBusGo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b findShortestBus} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
auto {\b timeLA} = std::chrono::system_clock::now()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::time_t {\b timeT} = std::chrono::system_clock::to_time_t({\b timeLA})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b placeFound} = false\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b nameBus} ("nameBus", 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b possible_buses} ("possiblebuses", 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b possible_busnames}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b possible_distances} ("possibledistances", 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b shortest_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b busGo_stops} ("busGostops", 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b distances_dict} ("distancesdict", 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b shortestnames_stops} ("shortestnames_stops", 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b distances_list}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b named_stops} ("named_stops", 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b q1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b q2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v json\:brain.cpp}
{\xe \v brain.cpp\:json}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
using {\b json} = nlohmann::json}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b brain.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v apiCalls\:brain.cpp}
{\xe \v brain.cpp\:apiCalls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float apiCalls (std::string point1, std::string point2, std::string point3)}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 97} of file {\b brain.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_aef79fcf6e4eb190dcc020f8169e20ba4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v busGoStops\:brain.cpp}
{\xe \v brain.cpp\:busGoStops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void busGoStops ()}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 89} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_a92439386422a137302195241eb828238_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findBusGo\:brain.cpp}
{\xe \v brain.cpp\:findBusGo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void findBusGo ()}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 301} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_a29b369f1fea7a4921c4248610e67935b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findBusSimilar\:brain.cpp}
{\xe \v brain.cpp\:findBusSimilar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void findBusSimilar ()}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 203} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_a4a8de83f900529830fe73b019e7a0633_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_a4a8de83f900529830fe73b019e7a0633_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findBusTaken\:brain.cpp}
{\xe \v brain.cpp\:findBusTaken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void findBusTaken ()}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_a5d44cd73410c9105427d5ffd68759fa0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findbustoTake\:brain.cpp}
{\xe \v brain.cpp\:findbustoTake}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void findbustoTake ()}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 174} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_a843260ff92ac53db80f16e606e63840b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findShortestBus\:brain.cpp}
{\xe \v brain.cpp\:findShortestBus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void findShortestBus ()}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 350} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_a95d1dbab111395e55c015259450d66ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Hash_binary_search\:brain.cpp}
{\xe \v brain.cpp\:Hash_binary_search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Hash_binary_search ({\b HashTable}< std::string > & table, const std::string & target)}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_af4da574d6416dbfb33b8446fbe6d9fac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_af4da574d6416dbfb33b8446fbe6d9fac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:brain.cpp}
{\xe \v brain.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 363} of file {\b brain.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validatePlace\:brain.cpp}
{\xe \v brain.cpp\:validatePlace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool validatePlace ({\b ArrayList}< std::string > list, std::string target, int start, int end)}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b brain.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "brain_8cpp_aaca0d28c24e42cd61684a8f04f85fd3f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v busGo_stops\:brain.cpp}
{\xe \v brain.cpp\:busGo_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > busGo_stops("busGostops", 9) ("busGostops" , 9 )}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v distances_dict\:brain.cpp}
{\xe \v brain.cpp\:distances_dict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > distances_dict("distancesdict", 9) ("distancesdict" , 9 )}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v distances_list\:brain.cpp}
{\xe \v brain.cpp\:distances_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> distances_list}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b brain.cpp}.}\par
}
{\xe \v nameBus\:brain.cpp}
{\xe \v brain.cpp\:nameBus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > nameBus("nameBus", 9) ("nameBus" , 9 )}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v named_stops\:brain.cpp}
{\xe \v brain.cpp\:named_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > named_stops("named_stops", 9) ("named_stops" , 9 )}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v placeFound\:brain.cpp}
{\xe \v brain.cpp\:placeFound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool placeFound = false}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b brain.cpp}.}\par
}
{\xe \v possible_buses\:brain.cpp}
{\xe \v brain.cpp\:possible_buses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > possible_buses("possiblebuses", 9) ("possiblebuses" , 9 )}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v possible_busnames\:brain.cpp}
{\xe \v brain.cpp\:possible_busnames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> possible_busnames}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b brain.cpp}.}\par
}
{\xe \v possible_distances\:brain.cpp}
{\xe \v brain.cpp\:possible_distances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > possible_distances("possibledistances", 9) ("possibledistances" , 9 )}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v q1\:brain.cpp}
{\xe \v brain.cpp\:q1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string q1}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b brain.cpp}.}\par
}
{\xe \v q2\:brain.cpp}
{\xe \v brain.cpp\:q2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string q2}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b brain.cpp}.}\par
}
{\xe \v shortest_stops\:brain.cpp}
{\xe \v brain.cpp\:shortest_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> shortest_stops}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b brain.cpp}.}\par
}
{\xe \v shortestnames_stops\:brain.cpp}
{\xe \v brain.cpp\:shortestnames_stops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > shortestnames_stops("shortestnames_stops", 9) ("shortestnames_stops" , 9 )}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timeLA\:brain.cpp}
{\xe \v brain.cpp\:timeLA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
auto timeLA = std::chrono::system_clock::now()}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b brain.cpp}.}\par
}
{\xe \v timeT\:brain.cpp}
{\xe \v brain.cpp\:timeT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::time_t timeT = std::chrono::system_clock::to_time_t({\b timeLA})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b brain.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
brain.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <chrono>}\par
00003 {\cf21 #include <ctime>}\par
00004 {\cf21 #include <vector>}\par
00005 {\cf21 #include "stops_data.h"}\par
00006 {\cf21 #include "ArrayList.h"}\par
00007 {\cf21 #include <unordered_set>}\par
00008 {\cf21 #include "HashTable.h"}\par
00009 \par
00010 {\cf21 #include <cpr/cpr.h>}\par
00011 {\cf21 #include <nlohmann/json.hpp>}\par
00012 \par
00013 {\cf17 using }json = nlohmann::json;\par
00014 \par
00015 {\cf20 //holds an object of type time }\par
00016 {\cf17 auto} timeLA = std::chrono::system_clock::now();\par
00017 {\cf20 //coverts the time object to a printable type}\par
00018 std::time_t timeT = std::chrono::system_clock::to_time_t(timeLA);\par
00019 \par
00020 {\cf18 bool} placeFound = {\cf17 false};\par
00021 \par
00022 HashTable<std::string> nameBus({\cf22 "nameBus"},9);\par
00023 HashTable<std::string> possible_buses({\cf22 "possiblebuses"}, 9);\par
00024 ArrayList<std::string> possible_busnames;\par
00025 HashTable<std::string> possible_distances({\cf22 "possibledistances"}, 9);\par
00026 ArrayList<std::string> shortest_stops;\par
00027 HashTable<std::string> busGo_stops({\cf22 "busGostops"}, 9);\par
00028 HashTable<std::string> distances_dict({\cf22 "distancesdict"}, 9);\par
00029 HashTable<std::string> shortestnames_stops({\cf22 "shortestnames_stops"}, 9);\par
00030 ArrayList<std::string> distances_list;\par
00031 HashTable<std::string> named_stops({\cf22 "named_stops"}, 9);\par
00032 \par
00033 \par
00034 {\cf18 bool} validatePlace(ArrayList<std::string> list, std::string target, {\cf18 int} start, {\cf18 int} end)\{\par
00035     {\cf19 while} (start <= end)\{\par
00036         {\cf18 int} middle = start + (end - start) / 2;\par
00037         {\cf19 if} (list[middle] == target)\{\par
00038             {\cf19 return} {\cf17 true};\par
00039         \}\par
00040         {\cf19 else} {\cf19 if} (list[middle] > target)\{\par
00041             end = middle - 1;\par
00042         \}\par
00043         {\cf19 else}\{\par
00044             start = middle + 1;\par
00045         \}\par
00046     \}\par
00047     {\cf19 return} {\cf17 false};\par
00048 \}\par
00049 \par
00050 \par
00051 std::string Hash_binary_search(HashTable<std::string>& table, {\cf17 const} std::string& target)\{\par
00052     {\cf19 if}(table.getBuckets() == 0)\{\par
00053             {\cf20 // Handle empty case as needed}\par
00054             {\cf19 throw} std::runtime_error({\cf22 "HashTable is empty"});\par
00055         \}\par
00056   {\cf20 //ArrayList<std::string> sorted_names;}\par
00057   {\cf20 //sorted_names.insertionSort(bus_names);}\par
00058   {\cf18 int} low = 0;\par
00059   {\cf18 int} high = table.getKeys().getsize() - 1;\par
00060 \par
00061   {\cf19 while} (low <= high)\{\par
00062     {\cf18 int} middle = (low + high) / 2;\par
00063     ArrayList<std::string> keys = table.getKeys();\par
00064     std::string value = keys[middle];\par
00065     {\cf19 if} (value < target)\{\par
00066       low = middle + 1;\par
00067     \}\par
00068     {\cf19 else} {\cf19 if} (value > target)\{\par
00069       high = middle - 1;\par
00070     \}\par
00071     {\cf19 else}\{\par
00072       {\cf19 return} table.search(value);\par
00073     \}\par
00074   \}\par
00075   {\cf19 return} {\cf22 ""};\par
00076 \}\par
00077 \par
00078 std::string q1;\par
00079 std::string q2;\par
00080 \par
00081 {\cf18 void} findBusTaken()\{\par
00082   {\cf19 for} ({\cf17 auto}& tables : bus_stops_tables)\{\par
00083     {\cf19 if} (Hash_binary_search(tables, q2) == q2)\{\par
00084       nameBus.appendTable(nameBus.HashStrings(q2), tables.getName(), tables);\par
00085     \}\par
00086   \}\par
00087 \}\par
00088 \par
00089 {\cf18 void} busGoStops()\{\par
00090   {\cf19 for} ({\cf17 auto}& tables : bus_stops_tables)\{\par
00091     {\cf19 if} (Hash_binary_search(tables, q1) == q1)\{\par
00092       busGo_stops.appendTable(busGo_stops.HashStrings(q1), tables.getName(), tables);\par
00093     \}\par
00094   \}\par
00095 \}\par
00096 \par
00097 {\cf18 float} apiCalls(std::string point1, std::string point2, std::string point3)\{\par
00098   std::vector<std::vector<float>> coordinates1;\par
00099   {\cf18 float} distanceMiles;\par
00100   cpr::Response point1_call = cpr::Get(cpr::Url\{{\cf22 "https://api.openrouteservice.org/geocode/search"}\},\par
00101                           cpr::Parameters\{\{{\cf22 "text"}, point1\}, \{{\cf22 "api_key"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}\}\par
00102                           );\par
00103   {\cf19 if}(point1_call.status_code != 200)\{\par
00104     {\cf19 throw} std::runtime_error({\cf22 "API call for point1 failed with status: "} + std::to_string(point1_call.status_code));\par
00105   \}\par
00106   json jsonResponse = json::parse(point1_call.text);\par
00107   json features = jsonResponse[{\cf22 "features"}];\par
00108   {\cf19 for} ({\cf17 auto}& feature : features)\{\par
00109     {\cf17 auto} coords = feature[{\cf22 "geometry"}][{\cf22 "coordinates"}];\par
00110     {\cf18 float} lon = coords[0];\par
00111     {\cf18 float} lat = coords[1];\par
00112     coordinates1.push_back(\{lon, lat\});\par
00113     {\cf19 break};\par
00114     \}\par
00115 \par
00116    cpr::Response point2_call = cpr::Get(cpr::Url\{{\cf22 "https://api.openrouteservice.org/geocode/search"}\},\par
00117                           cpr::Parameters\{\{{\cf22 "text"}, point2\}, \{{\cf22 "api_key"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}\}\par
00118                           );\par
00119   {\cf19 if}(point2_call.status_code != 200)\{\par
00120     {\cf19 throw} std::runtime_error({\cf22 "API call for point2 failed with status: "} + std::to_string(point2_call.status_code));\par
00121   \}\par
00122   json jsonResponse2 = json::parse(point2_call.text);\par
00123   json features2 = jsonResponse2[{\cf22 "features"}];\par
00124   {\cf19 for} ({\cf17 auto}& feature : features2)\{\par
00125     {\cf17 auto} coords2 = feature[{\cf22 "geometry"}][{\cf22 "coordinates"}];\par
00126     {\cf18 float} lon = coords2[0];\par
00127     {\cf18 float} lat = coords2[1];\par
00128     coordinates1.push_back(\{lon, lat\});\par
00129     {\cf19 break};\par
00130   \}\par
00131 \par
00132    cpr::Response point3_call = cpr::Get(cpr::Url\{{\cf22 "https://api.openrouteservice.org/geocode/search"}\},\par
00133                           cpr::Parameters\{\{{\cf22 "text"}, point3\}, \{{\cf22 "api_key"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}\}\par
00134                           );\par
00135   {\cf19 if}(point3_call.status_code != 200)\{\par
00136     {\cf19 throw} std::runtime_error({\cf22 "API call for point3 failed with status: "} + std::to_string(point3_call.status_code));\par
00137   \}\par
00138   json jsonResponse3 = json::parse(point3_call.text);\par
00139   json features3 = jsonResponse3[{\cf22 "features"}];\par
00140   {\cf19 for} ({\cf17 auto}& feature : features3)\{\par
00141     {\cf17 auto} coords3 = feature[{\cf22 "geometry"}][{\cf22 "coordinates"}];\par
00142     {\cf18 float} lon = coords3[0];\par
00143     {\cf18 float} lat = coords3[1];\par
00144     coordinates1.push_back(\{lon, lat\});\par
00145     {\cf19 break};\par
00146   \}\par
00147 \par
00148   json requestBody;\par
00149   requestBody[{\cf22 "coordinates"}] = coordinates1;\par
00150   {\cf20 //std::cout << requestBody.dump(2);}\par
00151   cpr::Response firstSegment = cpr::Post(cpr::Url\{{\cf22 "https://api.openrouteservice.org/v2/directions/driving-car"}\},\par
00152                         cpr::Header\{\{{\cf22 "Authorization"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}, \{{\cf22 "Content-Type"}, {\cf22 "application/json"}\}\},\par
00153                         cpr::Body\{requestBody.dump()\}\par
00154                         );\par
00155 \par
00156   {\cf19 if}(firstSegment.status_code != 200)\{\par
00157     {\cf19 throw} std::runtime_error({\cf22 "API call for point4 failed with status: "} + std::to_string(firstSegment.status_code));\par
00158   \}\par
00159   json jsonResponse4 = json::parse(firstSegment.text);\par
00160   json features4 = jsonResponse4[{\cf22 "routes"}];\par
00161   {\cf19 for} ({\cf17 auto}& feature : features4)\{\par
00162     {\cf18 float} distanceMeters = feature[{\cf22 "summary"}][{\cf22 "distance"}].get<{\cf18 float}>();\par
00163     distanceMiles = distanceMeters / 1609;\par
00164     {\cf19 break};\par
00165     \}\par
00166   {\cf19 return} distanceMiles;\par
00167 \}\par
00168 \par
00169 {\cf20 //need to search for q1 in all the bus hashtables}\par
00170 {\cf20 //save the names of all the buses in an array}\par
00171 {\cf20 //check if q2 is in any of the buses that were saved in the array}\par
00172 {\cf20 //if it is return that the user should take any of those buses}\par
00173 \par
00174 {\cf18 void} findbustoTake()\{\par
00175   ArrayList<HashTable<std::string>> q1Buses;\par
00176   ArrayList<HashTable<std::string>> commonBuses;\par
00177   {\cf19 for} ({\cf18 int} i = 0; i < bus_stops_tables.getsize(); i++)\{\par
00178     {\cf19 for} ({\cf17 auto}& route : bus_stops_tables[i].getKeys())\{\par
00179       {\cf19 if} (route == q1)\{\par
00180         q1Buses.append(bus_stops_tables[i]);\par
00181       \}\par
00182     \}\par
00183   \}\par
00184 \par
00185   {\cf19 for} ({\cf18 int} j = 0; j < q1Buses.getsize(); j++)\{\par
00186     {\cf19 for} ({\cf17 auto}& route2 : q1Buses[j].getKeys())\{\par
00187       {\cf19 if} (route2 == q2)\{\par
00188         commonBuses.append(q1Buses[j]);\par
00189       \}\par
00190     \}\par
00191   \}\par
00192 \par
00193   std::cout << {\cf22 "To go to "} << q2 << {\cf22 " from "} << q1 << {\cf22 " take any of these buses: "}; \par
00194   \par
00195   {\cf19 for} ({\cf18 int} i = 0; i < commonBuses.getsize(); i++)\{\par
00196     std::cout << commonBuses[i].getName(); \par
00197   \}\par
00198   \par
00199   std::cout << std::endl;\par
00200 \par
00201 \}\par
00202 \par
00203 {\cf18 void} findBusSimilar()\{\par
00204   ArrayList<HashTable<std::string>> q1Buses;\par
00205   ArrayList<HashTable<std::string>> q2Buses;\par
00206   ArrayList<std::string> commonBuses;\par
00207   ArrayList<std::string> commonQ2Buses;\par
00208   std::unordered_set<int> commonQ2BusIndices; \par
00209   \par
00210   {\cf18 float} distance;\par
00211   ArrayList<float> distances;\par
00212   ArrayList<std::string> commonStops;    {\cf20 // <-- Added to store matching stop names}\par
00213 \par
00214   std::unordered_set<std::string> visitedStops;\par
00215 \par
00216   std::string geoQ1 = geo_places[places.index(q1)];\par
00217   std::string geoQ2 = geo_places[places.index(q2)];\par
00218 \par
00219   {\cf20 // Single loop to collect q1 and q2 buses}\par
00220   {\cf19 for} ({\cf18 int} i = 0; i < bus_stops_tables.getsize(); i++)\{\par
00221     {\cf18 bool} addQ1 = {\cf17 false};\par
00222     {\cf18 bool} addQ2 = {\cf17 false};\par
00223     {\cf17 auto} keys = bus_stops_tables[i].getKeys();\par
00224     {\cf19 for} ({\cf17 auto}& route : keys)\{\par
00225       {\cf19 if} (route == q1)\{\par
00226         addQ1 = {\cf17 true};\par
00227       \}\par
00228       {\cf19 if} (route == q2)\{\par
00229         addQ2 = {\cf17 true};\par
00230       \}\par
00231       {\cf19 if} (addQ1 && addQ2)\{\par
00232         {\cf19 break};\par
00233       \}\par
00234     \}\par
00235     {\cf19 if} (addQ1)\{\par
00236       q1Buses.append(bus_stops_tables[i]);\par
00237     \}\par
00238     {\cf19 if} (addQ2)\{\par
00239       q2Buses.append(bus_stops_tables[i]);\par
00240     \}\par
00241   \}\par
00242 \par
00243   {\cf20 // Collect all stops from q2Buses into an unordered_set}\par
00244   std::unordered_set<std::string> q2AllStops;\par
00245   {\cf19 for} ({\cf18 int} l = 0; l < q2Buses.getsize(); l++)\{\par
00246       {\cf19 for} ({\cf17 auto}& gostop : q2Buses[l].getKeys())\{\par
00247           q2AllStops.insert(gostop);\par
00248       \}\par
00249   \}\par
00250 \par
00251   {\cf20 // Then iterate over q1Buses and check membership in q2AllStops}\par
00252   {\cf19 for} ({\cf18 int} k = 0; k < q1Buses.getsize(); k++)\{\par
00253     {\cf17 auto} stops = q1Buses[k].getKeys();\par
00254     {\cf19 for} ({\cf17 auto}& stop : stops)\{\par
00255         {\cf19 if} (visitedStops.find(stop) != visitedStops.end()) \{\par
00256             {\cf19 continue}; \par
00257         \}\par
00258         visitedStops.insert(stop);\par
00259 \par
00260         {\cf20 // If stop exists in q2AllStops, record it along with the corresponding bus}\par
00261         {\cf19 if} (q2AllStops.find(stop) != q2AllStops.end())\{\par
00262             distances.append(apiCalls(geoQ1, geo_places[places.index(stop)], geoQ2));\par
00263             commonBuses.append(q1Buses[k].getName());\par
00264             commonStops.append(stop);    {\cf20 // <-- Record the common stop name}\par
00265 \par
00266           {\cf19 for} ({\cf18 int} j = 0; j < q2Buses.getsize(); j++)\{\par
00267                 {\cf17 auto} q2Keys = q2Buses[j].getKeys();\par
00268                 {\cf20 // Check if the current q2 bus has the common stop.}\par
00269                 {\cf19 if} (std::find(q2Keys.begin(), q2Keys.end(), stop) != q2Keys.end())\{\par
00270                     {\cf20 // Ensure we add the bus only once.}\par
00271                     {\cf19 if} (commonQ2BusIndices.find(j) == commonQ2BusIndices.end())\{\par
00272                         commonQ2Buses.append(q2Buses[j].getName());\par
00273                         commonQ2BusIndices.insert(j);\par
00274                     \}\par
00275                 \}\par
00276             \}\par
00277         \}\par
00278     \}\par
00279   \} \par
00280 \par
00281   std::cout << {\cf22 "To go to "} << q1 << {\cf22 " from "} << q2 << {\cf22 " take any of these buses: "} << commonQ2Buses << {\cf22 " to "};\par
00282 \par
00283   {\cf19 if} (distances.getsize() > 0)\{\par
00284       {\cf18 float} minDistance = distances[0];\par
00285       {\cf18 int} minIndex = 0;\par
00286       {\cf19 for} ({\cf18 int} j = 1; j < distances.getsize(); j++)\{\par
00287           {\cf19 if} (distances[j] < minDistance)\{\par
00288               minDistance = distances[j];\par
00289               minIndex = j;\par
00290           \}\par
00291       \}\par
00292       std::string minBus = commonBuses[minIndex];\par
00293       std::string minStop = commonStops[minIndex];\par
00294       std::cout << minStop << {\cf22 " then take any of these buses: "} << commonBuses << {\cf22 " to "} << q1;\par
00295   \}\par
00296 \par
00297   std::cout << std::endl;\par
00298 \}\par
00299 \par
00300 \par
00301 {\cf18 void} findBusGo()\{\par
00302   std::string point1_name;\par
00303   std::string point2_name;\par
00304   std::string point3_name;\par
00305   std::string takenBusStop;\par
00306   std::cout << {\cf22 "Entered\\n"};\par
00307   \par
00308   {\cf19 for} ({\cf17 const} {\cf17 auto}& name : nameBus.getKeys())\{      \par
00309       {\cf17 auto} buses = nameBus.getValues(name);\par
00310       \par
00311       {\cf19 for} ({\cf17 const} {\cf17 auto}& bus : buses)\{\par
00312             std::cout << {\cf22 "Entered\\n"};\par
00313           {\cf19 for} ({\cf17 const} {\cf17 auto}& stops : bus.getKeys())\{\par
00314               std::cout << {\cf22 "Entered third for: "} << stops << {\cf22 "\\n"};\par
00315               \par
00316               takenBusStop = stops;\par
00317               \par
00318               {\cf19 for} ({\cf17 const} {\cf17 auto}& name1 : busGo_stops.getKeys())\{\par
00319                   std::cout << {\cf22 "Entered fourth for: "} << name1 << {\cf22 "\\n"};\par
00320                   \par
00321                   {\cf17 auto} buses2 = busGo_stops.getValues(name1);\par
00322                   std::cout << {\cf22 "Number of buses2 for "} << name1 << {\cf22 ": "} << buses2 << {\cf22 "\\n"};\par
00323                   \par
00324                   {\cf19 for} ({\cf17 const} {\cf17 auto}& bus2 : buses2)\{\par
00325                       std::cout << {\cf22 "Entered fifth for\\n"};\par
00326                       \par
00327                       {\cf19 for} ({\cf17 const} {\cf17 auto}& j3 : bus2.getKeys())\{\par
00328                           std::cout << {\cf22 "Checking j3: "} << j3 << {\cf22 "\\n"};\par
00329                           \par
00330                           {\cf19 if} (Hash_binary_search(busGo_stops, takenBusStop) == j3)\{\par
00331                               point1_name = geo_places[places.index(q1)];\par
00332                               point2_name = geo_places[places.index(q2)];\par
00333                               point3_name = geo_places[places.index(takenBusStop)];\par
00334                               \par
00335                               ArrayList<std::string> possible_distancesKeys;\par
00336                               possible_distancesKeys.append(j3);\par
00337                               possible_distances.appendHashes(possible_distancesKeys, apiCalls(point1_name, point2_name, point3_name));\par
00338                               possible_busnames.append(name);\par
00339                               shortest_stops.append(j3);\par
00340                               possible_buses.appendHashes(j3, name1);     \par
00341                           \}\par
00342                       \}\par
00343                   \}\par
00344               \}\par
00345           \}\par
00346       \}\par
00347   \}\par
00348 \}\par
00349 \par
00350 {\cf18 void} findShortestBus()\{\par
00351   \par
00352   {\cf18 float} min_distance = possible_distances.getMinValue();\par
00353   std::string min_stop = possible_distances.searchforKey(min_distance);\par
00354   {\cf19 for} ({\cf17 const} {\cf17 auto}& stop : possible_buses.getKeys())\{\par
00355     ArrayList<std::string> min_bus;\par
00356     {\cf19 if} (Hash_binary_search(possible_buses, min_stop) == stop)\{\par
00357       min_bus.append(possible_buses.search(stop));\par
00358       {\cf19 break}; \par
00359     \}  \par
00360   \}\par
00361 \}\par
00362 \par
00363 {\cf18 int} main()\{\par
00364   std::cout << {\cf22 "Where would you like to go? "};\par
00365   std::getline(std::cin, q1);\par
00366   placeFound = validatePlace(places, q1, 0, places.getsize() - 1);\par
00367 \par
00368   {\cf19 while} (placeFound == {\cf17 false})\{\par
00369     {\cf19 if} (placeFound == {\cf17 false})\{\par
00370         std::cout << {\cf22 "Invalid location"} << std::endl;\par
00371         std::cout << {\cf22 "Where would you like to go?: R Street Village Apts, El Redondo Dr, Compass Pointe Apts, Merced College The Bus Terminal, M St. At Bellevue RD, University Transit Center, Promenade Center, "}\par
00372         {\cf22 "Merced Mall Target, Walmart on Loughborough Dr, Amtrak Station, K St. Between 18th & 19th, Merced Transpo (REQ), Rite Aid/Walgreens on G St, "}\par
00373         {\cf22 "El Portal Plaza & G Street, Granville Apartments, G St. & W. Alexander Ave, El Portal & G Street, Mercy Hospital/TriCollege, TriCollege/Mercy (Bus stop on G next to Tri College), "}\par
00374         {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place), Cardella Rd. & M Street (North), Foothill Drive, Cardella Rd. & M Street (South), G Street South Across from Raley's (The Bus Stop),"}\par
00375         {\cf22 "K St. Between 18Th & 19th, Meadows Ave & Olivewood Dr (Foodmaxx), Yosemite Crossings Shopping Center, M Street Village Apartments, Ironstone Dr. & M St, "}\par
00376         {\cf22 "Yosemite & Cordova (Merced Physician Center), Moraga Subdivision, University Surgery Center, Cardella Rd. & 'M' Street, Cardella Rd. & 'M' Street,"}\par
00377         {\cf22 "K St. Between 18th & 19th, UC Merced Downtown Campus Center, Merced Transpo, G Street South"} << std::endl;\par
00378     \}\par
00379     std::getline(std::cin, q1);\par
00380     placeFound = validatePlace(places, q1, 0, places.getsize() - 1);\par
00381 \}\par
00382 {\cf20 /*def validateTime(input_time):}\par
00383 {\cf20     global valid_time}\par
00384 {\cf20     try:}\par
00385 {\cf20         parsed_time = datetime.strptime(input_time, '%H:%M:%S')}\par
00386 {\cf20         if 0 <= parsed_time.hour < 24 and 0 <= parsed_time.minute < 60 and 0 <= parsed_time.second < 60:}\par
00387 {\cf20             valid_time = True}\par
00388 {\cf20         else:}\par
00389 {\cf20             valid_time = False}\par
00390 {\cf20     except ValueError:}\par
00391 {\cf20         valid_time = False}\par
00392 {\cf20 */}\par
00393 \par
00394 std::cout << {\cf22 "Where are you currently located?: "};\par
00395 std::getline(std::cin, q2);\par
00396 placeFound = validatePlace(places, q2, 0, places.getsize() - 1);\par
00397   {\cf19 while} ({\cf17 true})\{\par
00398     {\cf19 if} (placeFound == {\cf17 false})\{\par
00399         std::cout << {\cf22 "Invalid location"} << std::endl;\par
00400         std::cout << {\cf22 "Where would you like to go?: R Street Village Apts, El Redondo Dr, Compass Pointe Apts, Merced College The Bus Terminal, M St. At Bellevue RD, University Transit Center, Promenade Center, "}\par
00401         {\cf22 "Merced Mall Target, Walmart on Loughborough Dr, Amtrak Station, K St. Between 18th & 19th, Merced Transpo (REQ), Rite Aid/Walgreens on G St, "}\par
00402         {\cf22 "El Portal Plaza & G Street, Granville Apartments, G St. & W. Alexander Ave, El Portal & G Street, Mercy Hospital/TriCollege, TriCollege/Mercy (Bus stop on G next to Tri College), "}\par
00403         {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place), Cardella Rd. & M Street (North), Foothill Drive, Cardella Rd. & M Street (South), G Street South Across from Raley's (The Bus Stop),"}\par
00404         {\cf22 "K St. Between 18Th & 19th, Meadows Ave & Olivewood Dr (Foodmaxx), Yosemite Crossings Shopping Center, M Street Village Apartments, Ironstone Dr. & M St, "}\par
00405         {\cf22 "Yosemite & Cordova (Merced Physician Center), Moraga Subdivision, University Surgery Center, Cardella Rd. & 'M' Street, Cardella Rd. & 'M' Street,"}\par
00406         {\cf22 "K St. Between 18th & 19th, UC Merced Downtown Campus Center, Merced Transpo, G Street South"} << std::endl;\par
00407         std::getline(std::cin, q2);\par
00408         placeFound = validatePlace(places, q2, 0, places.getsize() - 1);\par
00409     \}{\cf19 else}\{\par
00410         {\cf19 break};\par
00411   \}\par
00412 \}\par
00413 \par
00414 {\cf19 for} ({\cf18 int} i = 0; i < bus_names.getsize(); i++)\{\par
00415   named_stops.appendHashes(bus_names, bus_stops_tables[i]);\par
00416 \}\par
00417 \par
00418 {\cf20 /*}\par
00419 {\cf20 q3 = input("What timeEl  would you like to arrive by? Enter a time (Hour:Minute:Second format): ")}\par
00420 {\cf20 validateTime(q3)}\par
00421 {\cf20 while True:}\par
00422 {\cf20     if (valid_time == False):}\par
00423 {\cf20         q3 = input("What time would you like to arrive by? Enter a time (Hour:Minute:Second format)")}\par
00424 {\cf20         validateTime(q3)}\par
00425 {\cf20     else:}\par
00426 {\cf20         break}\par
00427 {\cf20 */}\par
00428 \par
00429 findBusSimilar();\par
00430 {\cf20 //findbustoTake();}\par
00431 {\cf20 //busGoStops();}\par
00432 {\cf20 //findBusGo();}\par
00433 {\cf20 //findShortestBus();}\par
00434 {\cf20 //std::cout << busGo_stops.getKeys() << std::endl;}\par
00435 {\cf19 return} 0;\par
00436 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HashTable.h File Reference\par \pard\plain 
{\tc\tcl2 \v HashTable.h}
{\xe \v HashTable.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ArrayList.h"}\par
{\f2 #include "LinkedList.h"}\par
{\f2 #include <string>}\par
{\f2 #include <list>}\par
{\f2 #include <ostream>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <type_traits>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for HashTable.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_hash_table_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_hash_table_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HashTable< T >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T> std::ostream & {\b operator<<} (std::ostream &os, const {\b HashTable}< T > &container)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator<<\:HashTable.h}
{\xe \v HashTable.h\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::ostream & operator<< (std::ostream & os, const {\b HashTable}< T > & container)}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 284} of file {\b HashTable.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HashTable.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef HASH_TABLE}\par
00002 {\cf21 #define HASH_TABLE}\par
00003 \par
00004 {\cf21 #include "ArrayList.h"}\par
00005 {\cf21 #include "LinkedList.h"}\par
00006 {\cf21 #include <string>}\par
00007 {\cf21 #include <list>}\par
00008 {\cf21 #include <ostream>}\par
00009 {\cf21 #include <typeinfo>}\par
00010 {\cf21 #include <algorithm>}\par
00011 {\cf21 #include <type_traits>}\par
00012 \par
00013 {\cf17 template} <{\cf17 class} T>\par
00014 {\cf17 class }HashTable;\par
00015 \par
00016 {\cf17 template} <{\cf17 class} T>\par
00017 std::ostream& operator<<(std::ostream& os, {\cf17 const} HashTable<T>& container);\par
00018 \par
00019 {\cf17 template} <{\cf17 class} T>\par
00020 {\cf17 class }HashTable\{\par
00021 {\cf17 protected}:\par
00022     {\cf18 int} buckets;\par
00023     std::string name;\par
00024     ArrayList<std::string> keys;\par
00025     {\cf20 // Store LinkedList objects directly instead of pointers}\par
00026     ArrayList<LinkedList<std::list<T>>> data;\par
00027     ArrayList<LinkedList<HashTable<T>>> dataTables;\par
00028     ArrayList<LinkedList<T>> dataT;\par
00029 \par
00030 {\cf17 public}:\par
00031     {\cf20 // Default Constructor}\par
00032     HashTable() \par
00033         : buckets(1), keys(), data(), dataTables(), dataT() \{\}\par
00034 \par
00035     {\cf20 // Constructor with bucket size}\par
00036     HashTable(std::string name, {\cf18 int} buckets)\{\par
00037         this->name = name;\par
00038         this->buckets = buckets;\par
00039         {\cf19 for} ({\cf18 int} i = 0; i < buckets; i++)\{\par
00040             dataT.append(LinkedList<T>());\par
00041             data.append(LinkedList<std::list<T>>());\par
00042             dataTables.append(LinkedList<HashTable<T>>());\par
00043             keys.append({\cf22 ""});\par
00044         \}\par
00045     \}\par
00046 \par
00047     {\cf20 // Constructor with bus_keys}\par
00048     HashTable(std::string name, ArrayList<T>& bus_keys)\{\par
00049         this->name = name;\par
00050         this->buckets = bus_keys.getsize();\par
00051         {\cf19 for} ({\cf18 int} i = 0; i < buckets; i++)\{\par
00052             keys.append(bus_keys[i]);\par
00053             data.append(LinkedList<std::list<T>>());\par
00054             dataTables.append(LinkedList<HashTable<T>>());\par
00055             dataT.append(LinkedList<T>());\par
00056         \}\par
00057     \}\par
00058 \par
00059     {\cf20 // Copy Constructor (Default is sufficient)}\par
00060     HashTable({\cf17 const} HashTable<T>& other) = {\cf19 default};\par
00061 \par
00062     {\cf20 // Move Constructor (Default is sufficient)}\par
00063     HashTable(HashTable<T>&& other) {\cf17 noexcept} = {\cf19 default};\par
00064 \par
00065     {\cf20 // Copy Assignment Operator (Default is sufficient)}\par
00066     HashTable<T>& operator=({\cf17 const} HashTable<T>& other) = {\cf19 default};\par
00067 \par
00068     {\cf20 // Move Assignment Operator (Default is sufficient)}\par
00069     HashTable<T>& operator=(HashTable<T>&& other) {\cf17 noexcept} = {\cf19 default};\par
00070 \par
00071     {\cf20 // Destructor (Default is sufficient)}\par
00072     ~HashTable() = {\cf19 default};\par
00073 \par
00074     {\cf20 // Iterator Support}\par
00075     {\cf17 auto} begin() \{ {\cf19 return} keys[0]; \}\par
00076     {\cf17 auto} end() \{ {\cf19 return} keys.end(); \}\par
00077 \par
00078     {\cf20 // Hash Functions}\par
00079     {\cf18 int} HashInts({\cf18 int} val)\{\par
00080         {\cf19 return} val % buckets;\par
00081     \}\par
00082 \par
00083     {\cf18 int} HashStrings({\cf17 const} std::string& val){\cf17  const }\{\par
00084         {\cf19 if}(data.getsize() == 0)\{\par
00085             {\cf19 throw} std::runtime_error({\cf22 "HashTable is empty"});\par
00086         \}\par
00087         {\cf18 int} hashValue = 0;\par
00088         {\cf18 int} prime = 41;\par
00089         {\cf18 int} mod = 1000000009;\par
00090         {\cf18 int} power = 1;\par
00091         {\cf19 for} ({\cf18 char} c : val)\{\par
00092             {\cf18 char} lower = std::tolower(c);\par
00093             {\cf19 if} (lower < {\cf23 'a'} || lower > {\cf23 'z'})\{\par
00094                 {\cf19 continue};\par
00095             \}\par
00096             hashValue = (hashValue + (c - {\cf23 'a'} + 1) * power) % mod;\par
00097             power = (power * prime) % mod;\par
00098         \}\par
00099 \par
00100         {\cf19 return} (hashValue % buckets + buckets) % buckets;\par
00101     \}\par
00102 \par
00103     {\cf20 // Accessors}\par
00104     ArrayList<std::string> getKeys(){\cf17  const}\{\par
00105         {\cf19 return} keys;\par
00106     \}\par
00107 \par
00108     ArrayList<LinkedList<std::list<T>>> getValues()\{\par
00109         {\cf19 return} data;\par
00110     \}\par
00111     \par
00112     LinkedList<HashTable<T>> getValues(std::string busname)\{\par
00113         {\cf18 int} index = HashStrings(busname);\par
00114         {\cf19 return} dataTables[index];\par
00115     \}\par
00116 \par
00117     {\cf20 // Search Functions}\par
00118     std::string search(std::string val)\{\par
00119         {\cf18 int} index = keys.index(val);\par
00120         {\cf19 if} (index >= 0)\{\par
00121              {\cf19 return} keys[index];\par
00122         \}\par
00123         {\cf19 else}\{\par
00124             {\cf19 return} {\cf22 ""};\par
00125         \}\par
00126     \}\par
00127 \par
00128     {\cf18 int} searchforKeyIndex({\cf18 float} val)\{\par
00129         {\cf18 int} index = 0;\par
00130         {\cf19 if}(data.getsize() == 0)\{\par
00131             {\cf19 throw} std::runtime_error({\cf22 "HashTable is empty"});\par
00132         \}\par
00133         {\cf18 bool} first = {\cf17 true};\par
00134         {\cf19 for} ({\cf18 int} i = 0; i < data.getsize(); i++)\{\par
00135             LinkedList<std::list<T>> bucket = data[i];\par
00136             {\cf19 for}({\cf17 auto} it = bucket.begin(); it != bucket.end(); ++it)\{\par
00137                 {\cf19 for}({\cf17 const} T& item : it)\{\par
00138                     {\cf19 if}(first || item == val)\{\par
00139                         index = i;\par
00140                         first = {\cf17 false};\par
00141                     \}\par
00142                 \}\par
00143             \}\par
00144         \}\par
00145         {\cf19 return} index;\par
00146     \}\par
00147 \par
00148     std::string searchforKey({\cf18 float} val)\{\par
00149         {\cf18 int} index = -1;\par
00150         {\cf19 if}(data.getsize() == 0)\{\par
00151             {\cf19 throw} std::runtime_error({\cf22 "HashTable is empty"});\par
00152         \}\par
00153         {\cf20 // ...existing code...}\par
00154         {\cf19 for} ({\cf18 int} i = 0; i < data.getsize(); i++)\{\par
00155             LinkedList<std::list<T>> bucket = data[i];\par
00156             {\cf19 for}({\cf17 auto} it = bucket.begin(); it != bucket.end(); ++it)\{\par
00157                 {\cf19 for}({\cf17 const} T& item : *it)\{\par
00158                     {\cf19 if}(std::stof(item) == val)\{\par
00159                         index = i;\par
00160                         {\cf19 break};\par
00161                     \}\par
00162                 \}\par
00163                 {\cf19 if}(index != -1)\{\par
00164                     {\cf19 break};\par
00165                 \}\par
00166             \}\par
00167             {\cf19 if}(index != -1)\{\par
00168                 {\cf19 break};\par
00169             \}\par
00170         \}\par
00171         {\cf19 if}(index == -1)\{\par
00172             {\cf19 return} {\cf22 ""};\par
00173         \}\par
00174         {\cf19 if}(index >= keys.getsize())\{\par
00175             {\cf19 return} {\cf22 ""};\par
00176         \}\par
00177         {\cf19 return} keys[index];\par
00178     \}\par
00179 \par
00180     {\cf20 // Overloaded Operators}\par
00181     std::string operator[]({\cf18 int} key)\{\par
00182         {\cf18 int} index = HashInts(key);\par
00183         {\cf19 if}(index < 0 || index >= keys.getsize())\{\par
00184             {\cf19 throw} std::out_of_range({\cf22 "Key index out of range"});\par
00185         \}\par
00186         {\cf19 return} keys[index];\par
00187     \}\par
00188 \par
00189     std::string operator[](std::string key)\{\par
00190         {\cf18 int} index = HashStrings(key);\par
00191         {\cf19 if}(index < 0 || index >= keys.getsize())\{\par
00192             {\cf19 throw} std::out_of_range({\cf22 "Key index out of range"});\par
00193         \}\par
00194         {\cf19 return} keys[index];\par
00195     \}\par
00196 \par
00197     {\cf20 // Additional Methods}\par
00198     {\cf18 int} getBuckets(){\cf17  const}\{\par
00199         {\cf19 return} buckets;\par
00200     \}\par
00201 \par
00202     std::string getName(){\cf17  const}\{\par
00203         {\cf19 return} name;\par
00204     \}\par
00205 \par
00206     {\cf18 float} getMinValue()\{\par
00207         {\cf19 if}(data.getsize() == 0)\{\par
00208             {\cf19 throw} std::runtime_error({\cf22 "HashTable is empty"});\par
00209         \}\par
00210         {\cf18 float} min;\par
00211         {\cf18 bool} first = {\cf17 true};\par
00212         {\cf19 for}({\cf18 int} i = 0; i < data.getsize(); i++)\{\par
00213             LinkedList<std::list<T>> bucket = data[i];\par
00214             {\cf19 for}({\cf17 auto} it = bucket.begin(); it != bucket.end(); ++it)\{\par
00215                 {\cf19 for}({\cf17 const} T& item : *it)\{\par
00216                         {\cf19 if}(first || std::stof(item) < min)\{\par
00217                             min = std::stof(item);\par
00218                             first = {\cf17 false};\par
00219                         \}\par
00220                 \}\par
00221             \}\par
00222         \}\par
00223         {\cf19 return} min;\par
00224     \}\par
00225 \par
00226     {\cf20 // Append Methods}\par
00227     {\cf18 void} appendTable({\cf18 int} hashCode, {\cf17 const} std::string& value, HashTable<T>& values)\{\par
00228         keys.append(value);\par
00229         dataTables[hashCode].appendinLL(values);\par
00230     \}\par
00231 \par
00232     {\cf18 void} appendHashes(ArrayList<T>& bus_keys, ArrayList<std::list<T>>& values) \{\par
00233         {\cf19 for} ({\cf18 int} i = 0; i < bus_keys.getsize(); i++) \{\par
00234             {\cf18 int} hash = HashStrings(bus_keys[i]);\par
00235             keys.append(bus_keys[i]);\par
00236             data[hash].appendinLL(values[i]);\par
00237         \}\par
00238     \}\par
00239 \par
00240     {\cf18 void} appendHashes(ArrayList<T>& bus_keys, ArrayList<HashTable<T>>& values) \{\par
00241         {\cf19 for} ({\cf18 int} i = 0; i < bus_keys.getsize(); i++) \{\par
00242             {\cf18 int} hash = HashStrings(bus_keys[i]);\par
00243             keys.append(bus_keys[i]);\par
00244             dataTables[hash].appendinLL(values[i]);\par
00245         \}\par
00246     \}\par
00247 \par
00248     {\cf18 void} appendHashes(ArrayList<T>& bus_keys, HashTable<T>& values) \{\par
00249         {\cf19 for} ({\cf18 int} i = 0; i < bus_keys.getsize(); i++) \{\par
00250             {\cf18 int} hash = HashStrings(bus_keys[i]);\par
00251             keys.append(bus_keys[i]);\par
00252             dataTables[hash].appendinLL(values);\par
00253         \}\par
00254     \}\par
00255 \par
00256     {\cf18 void} appendHashes(ArrayList<std::string>& bus_keys, T distances) \{\par
00257         {\cf19 for} ({\cf18 int} i = 0; i < bus_keys.getsize(); i++) \{\par
00258             keys.append(bus_keys[i]);\par
00259             {\cf18 int} hash = HashStrings(bus_keys[i]);\par
00260             dataT[hash].appendinLL(distances);\par
00261         \}\par
00262     \}\par
00263 \par
00264     {\cf18 void} appendHashes(std::string bus_keys, std::string busnames) \{\par
00265         {\cf18 int} hash = HashStrings(bus_keys);\par
00266         keys.append(bus_keys);\par
00267         dataT[hash].appendinLL(busnames);\par
00268     \}\par
00269 \par
00270     {\cf18 void} appendHashes(ArrayList<std::string>& bus_keys, {\cf18 float} distances) \{\par
00271         {\cf19 for} ({\cf18 int} i = 0; i < bus_keys.getsize(); i++) \{\par
00272             keys.append(bus_keys[i]);\par
00273             {\cf18 int} hash = HashStrings(bus_keys[i]);\par
00274             dataT[hash].appendinLL(distances);\par
00275         \}\par
00276     \}\par
00277 \par
00278     {\cf20 // Friend Declaration for Operator<<}\par
00279     {\cf17 friend} std::ostream& operator<< <>(std::ostream& os, {\cf17 const} HashTable<T>& table);\par
00280 \};\par
00281 \par
00282 {\cf20 // Friend function implementation}\par
00283 {\cf17 template} <{\cf17 class} T>\par
00284 std::ostream& operator<<(std::ostream& os, {\cf17 const} HashTable<T>& table)\{\par
00285 \par
00286     {\cf19 for} ({\cf18 int} i = 0; i < table.keys.getsize(); i++)\{\par
00287         {\cf18 int} hash = table.HashStrings(table.keys[i]);\par
00288         os << table.keys[i] << {\cf22 ": "};\par
00289         {\cf19 if} {\cf17 constexpr}(std::is_same<T, std::list<typename T::value_type>>::value)\{\par
00290             os << table.data[hash];\par
00291         \}\par
00292         {\cf19 else} {\cf19 if} {\cf17 constexpr} (std::is_same<T, HashTable<typename T::value_type>>::value)\{\par
00293             os << table.dataTables[hash];\par
00294         \}\par
00295         {\cf19 else} \{\par
00296             os << table.dataT[hash];\par
00297         \}\par
00298         os << std::endl << std::endl;\par
00299     \}\par
00300     {\cf19 return} os;\par
00301 \}\par
00302 \par
00303 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hastabletest.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v hastabletest.cpp}
{\xe \v hastabletest.cpp}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "ArrayList.h"}\par
{\f2 #include "HashTable.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for hastabletest.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "hastabletest_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:hastabletest.cpp}
{\xe \v hastabletest.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b hastabletest.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "hastabletest_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hastabletest.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include "ArrayList.h"}\par
00003 {\cf21 #include "HashTable.h"}\par
00004 {\cf20 //#include "stops_data.h"}\par
00005 \par
00006 \par
00007 {\cf18 int} main()\{\par
00008      {\cf20 // Example: ensure bobcat_express_stops_keys and bobcat_express_stops_values have data}\par
00009    ArrayList<std::string> bobcat_express_stops_keys = \{{\cf22 "Amtrak Station"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "El Portal & G Street"}, {\cf22 "El Redondo Dr"}, \par
00010     {\cf22 "K St. Between 18th & 19th"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Merced Mall Target"}, {\cf22 "Merced Transpo"}, \par
00011     {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "University Transit Center"}, {\cf22 "Walmart on Loughborough Dr"}\};\par
00012 \par
00013 \par
00014    ArrayList<std::list<std::string>> bobcat_express_stops_values = \{\{{\cf22 "6:29"}, {\cf22 "7:09"}, {\cf22 "7:49"}, {\cf22 "8:44"}, {\cf22 "9:24"}, {\cf22 "10:04"}, {\cf22 "10:44"}, {\cf22 "12:09"}, {\cf22 "1:49"}, {\cf22 "3:17"}, {\cf22 "4:57"}, {\cf22 "6:22"}, {\cf22 "8:02"}\}, \par
00015                                \{{\cf22 "6:32"}, {\cf22 "7:12"}, {\cf22 "7:52"}, {\cf22 "8:47"}, {\cf22 "9:27"}, {\cf22 "10:07"}, {\cf22 "10:47"}, {\cf22 "12:12"}, {\cf22 "1:52"}, {\cf22 "3:20"}, {\cf22 "5:00"}, {\cf22 "6:25"}, {\cf22 "8:05"}\}, \par
00016                                \{{\cf22 "6:34"}, {\cf22 "7:14"}, {\cf22 "7:54"}, {\cf22 "8:49"}, {\cf22 "9:29"}, {\cf22 "10:09"}, {\cf22 "10:49"}, {\cf22 "12:14"}, {\cf22 "1:54"}, {\cf22 "3:22"}, {\cf22 "5:02"}, {\cf22 "6:27"}, {\cf22 "8:07"}\}, \par
00017                                \{{\cf22 "6:39"}, {\cf22 "7:19"}, {\cf22 "7:59"}, {\cf22 "8:54"}, {\cf22 "9:34"}, {\cf22 "10:14"}, {\cf22 "10:54"}, {\cf22 "12:19"}, {\cf22 "1:59"}, {\cf22 "3:27"}, {\cf22 "5:07"}, {\cf22 "6:32"}, {\cf22 "8:12"}\}, \par
00018                                \{{\cf22 "6:44"}, {\cf22 "7:24"}, {\cf22 "8:04"}, {\cf22 "8:59"}, {\cf22 "9:39"}, {\cf22 "10:19"}, {\cf22 "11:00"}, {\cf22 "12:25"}, {\cf22 "2:05"}, {\cf22 "3:33"}, {\cf22 "5:13"}, {\cf22 "6:38"}, {\cf22 "8:18"}\}, \par
00019                                \{{\cf22 "6:55"}, {\cf22 "7:35"}, {\cf22 "8:30"}, {\cf22 "9:10"}, {\cf22 "9:50"}, {\cf22 "10:30"}, {\cf22 "11:11"}, {\cf22 "12:51"}, {\cf22 "2:16"}, {\cf22 "3:59"}, {\cf22 "5:24"}, {\cf22 "7:04"}, {\cf22 "8:29*"}\}, \par
00020                                \{{\cf22 "11:20"}, {\cf22 "1:00"}, {\cf22 "2:25"}, {\cf22 "4:08"}, {\cf22 "5:33"}, {\cf22 "7:13"}\}, \{{\cf22 "11:29"}, {\cf22 "1:09"}, {\cf22 "2:37"}, {\cf22 "4:17"}, {\cf22 "5:42"}, {\cf22 "7:22"}\}, \par
00021                                \{{\cf22 "11:38"}, {\cf22 "1:18"}, {\cf22 "2:46"}, {\cf22 "4:26"}, {\cf22 "5:51"}, {\cf22 "7:31"}\}, \{{\cf22 "11:50"}, {\cf22 "1:30"}, {\cf22 "2:58"}, {\cf22 "4:38"}, {\cf22 "6:03"}, {\cf22 "7:43"}\}, \par
00022                                \{{\cf22 "11:52"}, {\cf22 "1:32"}, {\cf22 "3:00"}, {\cf22 "4:40"}, {\cf22 "6:05"}, {\cf22 "7:45"}\}, \{{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}\}, \par
00023                                \{{\cf22 "12:01"}, {\cf22 "1:41"}, {\cf22 "3:09"}, {\cf22 "4:49"}, {\cf22 "6:14"}, {\cf22 "7:54"}\}, \{{\cf22 "12:03"}, {\cf22 "1:43"}, {\cf22 "3:11"}, {\cf22 "4:51"}, {\cf22 "6:16"}, {\cf22 "7:56"}\}\};\par
00024 \par
00025     HashTable<std::string> table(bobcat_express_stops_keys);\par
00026     table.appendHashes(bobcat_express_stops_keys, bobcat_express_stops_values);\par
00027     std::cout << table << std::endl;\par
00028 \}\par
00029 \par
00030 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LinkedList.h File Reference\par \pard\plain 
{\tc\tcl2 \v LinkedList.h}
{\xe \v LinkedList.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <list>}\par
{\f2 #include <ostream>}\par
{\f2 #include <iostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for LinkedList.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_linked_list_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_linked_list_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Node< T >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LinkedList< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LinkedList< T >::Iterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T> std::ostream & {\b operator<<} (std::ostream &os, const std::list< T > &lst)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T> std::ostream & {\b operator<<} (std::ostream &os, const {\b LinkedList}< T > &container)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator<<\:LinkedList.h}
{\xe \v LinkedList.h\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T> std::ostream & operator<< (std::ostream & os, const {\b LinkedList}< T > & container)}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 133} of file {\b LinkedList.h}.}\par
}
{\xe \v operator<<\:LinkedList.h}
{\xe \v LinkedList.h\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T> std::ostream & operator<< (std::ostream & os, const std::list< T > & lst)}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b LinkedList.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LinkedList.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef LINKED_LIST}\par
00002 {\cf21 #define LINKED_LIST}\par
00003 \par
00004 {\cf21 #include <list>}\par
00005 {\cf21 #include <ostream>}\par
00006 {\cf21 #include <iostream>}\par
00007 \par
00008 {\cf17 template} <{\cf17 typename} T>\par
00009 std::ostream& operator<<(std::ostream& os, {\cf17 const} std::list<T>& lst)\{\par
00010     os << {\cf22 "["};\par
00011     {\cf19 for}({\cf17 auto} it = lst.begin(); it != lst.end(); ++it)\{\par
00012         os << *it;\par
00013         {\cf19 if}(std::next(it) != lst.end())\{\par
00014             os << {\cf22 ", "};\par
00015         \}\par
00016     \}\par
00017     os << {\cf22 "]"};\par
00018     {\cf19 return} os;\par
00019 \}\par
00020 \par
00021 \par
00022 {\cf17 template} <{\cf17 class} T>\par
00023 {\cf17 struct }Node\{\par
00024     T data;\par
00025     Node* next;\par
00026     Node* prev;\par
00027 \par
00028     Node(T data)\{\par
00029         this->data = data;\par
00030         next = {\cf17 nullptr};\par
00031         prev = {\cf17 nullptr};\par
00032     \}\par
00033 \par
00034     Node({\cf18 float} data)\{\par
00035         this->data = data;\par
00036         next = {\cf17 nullptr};\par
00037         prev = {\cf17 nullptr};\par
00038     \}\par
00039 \};\par
00040 \par
00041 {\cf17 template} <{\cf17 class} T>\par
00042 {\cf17 class }LinkedList;\par
00043 \par
00044 {\cf17 template} <{\cf17 class} T>\par
00045 std::ostream& operator<<(std::ostream& os, {\cf17 const} LinkedList<T>& container);\par
00046 \par
00047 {\cf17 template} <{\cf17 class} T>\par
00048 {\cf17 class }LinkedList\{\par
00049     Node<T>* front;\par
00050     Node<T>* back;\par
00051 {\cf17 public}:\par
00052     LinkedList()\{\par
00053         front = {\cf17 nullptr}; \par
00054         back = {\cf17 nullptr};\par
00055     \}\par
00056 \par
00057     LinkedList({\cf17 const} LinkedList<T>& other) \{\par
00058     front = {\cf17 nullptr};\par
00059     back = {\cf17 nullptr};\par
00060     Node<T>* current = other.front;\par
00061     {\cf19 while} (current != {\cf17 nullptr}) \{\par
00062         appendinLL(current->data); {\cf20 // Copy each node's data}\par
00063         current = current->next;\par
00064     \}\par
00065 \}\par
00066 \par
00067       {\cf20 // Iterator class}\par
00068     {\cf17 class }Iterator \{\par
00069         Node<T>* current;\par
00070     {\cf17 public}:\par
00071         Iterator(Node<T>* node) : current(node) \{\}\par
00072         T& operator*() \{ {\cf19 return} current->data; \}\par
00073         Iterator& operator++() \{ \par
00074             {\cf19 if}(current) current = current->next; \par
00075             {\cf19 return} *{\cf17 this}; \par
00076         \}\par
00077         {\cf18 bool} operator!=({\cf17 const} Iterator& other){\cf17  const }\{ {\cf19 return} current != other.current; \}\par
00078     \};\par
00079 \par
00080     Iterator begin(){\cf17  const }\{ {\cf19 return} Iterator(front); \}\par
00081     Iterator end(){\cf17  const }\{ {\cf19 return} Iterator({\cf17 nullptr}); \}\par
00082 \par
00083     {\cf20 //learn Iterator class}\par
00084 \par
00085     {\cf20 //method that adds a node to a linked list}\par
00086     {\cf18 void} appendinLL(T val)\{\par
00087         {\cf19 if} (front == {\cf17 nullptr})\{\par
00088             front = {\cf17 new} Node<T>(val);\par
00089             back = front;\par
00090         \}\par
00091         {\cf19 else}\{\par
00092             Node<T>* temp = front;\par
00093             {\cf19 while} (temp->next != {\cf17 nullptr})\{\par
00094                 temp = temp->next;\par
00095             \}\par
00096             temp->next = {\cf17 new} Node<T>(val);\par
00097             temp->next->prev = temp;\par
00098             back = temp->next;\par
00099         \}\par
00100     \}\par
00101 \par
00102     {\cf18 void} appendinLL({\cf18 float} val)\{\par
00103         {\cf19 if} (front == {\cf17 nullptr})\{\par
00104             front = {\cf17 new} Node<T>(val);\par
00105             back = front;\par
00106         \}\par
00107         {\cf19 else}\{\par
00108             Node<T>* temp = front;\par
00109             {\cf19 while} (temp->next != {\cf17 nullptr})\{\par
00110                 temp = temp->next;\par
00111             \}\par
00112             temp->next = {\cf17 new} Node<T>(val);\par
00113             temp->next->prev = temp;\par
00114             back = temp->next;\par
00115         \}\par
00116     \}\par
00117 \par
00118     ~LinkedList()\{\par
00119         Node<T>* current = front;\par
00120         {\cf19 while} (current != {\cf17 nullptr}) \{\par
00121             Node<T>* next = current->next;\par
00122             {\cf17 delete} current;\par
00123             current = next;\par
00124         \}\par
00125         front = {\cf17 nullptr};\par
00126         back = {\cf17 nullptr};\par
00127     \}\par
00128 \par
00129     {\cf17 friend} std::ostream& operator<< <>(std::ostream& os, {\cf17 const} LinkedList<T>& list);\par
00130 \};\par
00131 \par
00132 {\cf17 template} <{\cf17 class} T>\par
00133 std::ostream& operator<<(std::ostream& os, {\cf17 const} LinkedList<T>& list)\{\par
00134         Node<T>* current = list.front;\par
00135         {\cf19 while}(current != {\cf17 nullptr})\{\par
00136             os << current->data;\par
00137             {\cf19 if}(current->next != {\cf17 nullptr})\{\par
00138                 os << {\cf22 " -> "};\par
00139             \}\par
00140             current = current->next;\par
00141         \}\par
00142         {\cf19 return} os;\par
00143     \}\par
00144     \par
00145 {\cf21 #endif }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.py File Reference\par \pard\plain 
{\tc\tcl2 \v main.py}
{\xe \v main.py}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b main}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b main.data} = json.load(f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b main.text_to_write} = i['Text'] + '\\n'\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.py\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 import} json\par
00002 \par
00003 {\cf20 # Open the input file}\par
00004 {\cf17 with} open({\cf22 'Yosemite-Express.json'}, {\cf22 'r'}) {\cf17 as} f:\par
00005     data = json.load(f)\par
00006 \par
00007 {\cf20 # Open a new file for writing the output}\par
00008 {\cf17 with} open({\cf22 'Yosemite-Express.txt'}, {\cf22 'w'}) {\cf17 as} output_file:\par
00009     {\cf20 # Iterate through the elements and write 'Text' to the output file}\par
00010     {\cf19 for} i {\cf19 in} data[{\cf22 'elements'}]:\par
00011         {\cf19 if} {\cf22 'Text'} {\cf19 in} i:\par
00012             text_to_write = i[{\cf22 'Text'}] + {\cf22 '\\n'}\par
00013             print(text_to_write)\par
00014             output_file.write(text_to_write)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
README.md File Reference\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
route_datatypes.py File Reference\par \pard\plain 
{\tc\tcl2 \v route_datatypes.py}
{\xe \v route_datatypes.py}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b route_datatypes}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.places}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.geo_pyPlaces}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b route_datatypes.ssl_context} = ssl.create_default_context(cafile=certifi.where())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b route_datatypes.geolocator} = Nominatim(user_agent = "route app", {\b ssl_context}={\b ssl_context}, timeout=10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.geo_pyPlacesGeocode} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b route_datatypes.location} = geolocator.geocode(place)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.geo_pyPlacesCoords} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.bobcat_express_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.bobcat_express_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.bobcat_express_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.C1_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.C1_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.C1_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.C2_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.C2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.C2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.E1_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.E1_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.E1_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.E2_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.E2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.E2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.Fastcat_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.Fastcat_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.Fastcat_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.Fastcat2_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.Fastcat2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.Fastcat2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.G_line_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.G_line_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.G_line_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b route_datatypes.yosemite_express_stops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.yosemite_express_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b route_datatypes.yosemite_express_stops_values}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
route_datatypes.py\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 \par
00003 places = [{\cf22 "Amtrak Station"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}, {\cf22 "Compass Pointe Apts"}, \par
00004           {\cf22 "El Portal & G Street"}, {\cf22 "El Redondo Dr"}, {\cf22 "Foothill Drive"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}, \par
00005           {\cf22 "G Street South"}, {\cf22 "Granville Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "M St. At Bellevue RD"}, \par
00006           {\cf22 "M Street Village Apartments"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Merced Mall Target"}, {\cf22 "Merced Transpo"}, {\cf22 "Moraga Subdivision"}, \par
00007           {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "TriCollege/Mercy"}, {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, \par
00008           {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgery Center"}, {\cf22 "University Transit Center"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, \par
00009           {\cf22 "Yosemite Crossings Shopping Center"}]\par
00010 \par
00011 geo_pyPlaces = [{\cf22 "355 West 24th Street, Merced, CA"}, {\cf22 "595, Glendon Court, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "4298, Lasalle Drive, The Meadows At Bellevue Ranch West, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "1220 Daybreak Dr, Merced, CA 95348"}, {\cf22 "19, El Portal Drive, Merced, Merced County, California, 95340, United States"},\par
00012                 {\cf22 "3706 El Redondo Drive"}, {\cf22 "4486 Everson Ct, Merced, CA 95348"}, {\cf22 "80, Emerald Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "59, Sandy Lane, Merced, Merced County, California, 95340, United States"}, {\cf22 "3514 G St, Merced, CA 95340"}, {\cf22 "2962, Willowbrook Drive, Merced, Merced County, California, 95348, United States"}, \par
00013                 {\cf22 "621 M St, Merced, CA 95348"}, {\cf22 "415, West 18th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "586 Barclay Way, Merced, CA 95348"}, {\cf22 "597, Collins Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "1223, Devonwood Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "614, Stanford Court, Merced, Merced County, California, 95348, United States"}, {\cf22 "3304, Santa Rosa Court, Merced, Merced County, California, 95348, United States"},\par
00014                 {\cf22 "710, West 16th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "2397, Explorador Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "755, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "3892, R Street, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "Pizza Factory, G Street, Merced, Merced County, California, 98348, United States"},\par
00015                 {\cf22 "315 Mercy Avenue, Merced, CA, USA"}, {\cf22 "3601 G Street, Merced, CA"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgical & Dianogstic Center"}, {\cf22 "2897 Bellevue Rd, Merced, CA 95340"},\par
00016                 {\cf22 "Walmart 3055 Loughborough Drive"}, {\cf22 "Doctors Carreon Adrian Md, 410, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "Soccer Field (Varsity) G Street"}]\par
00017 {\cf17 from} geopy.geocoders {\cf17 import} Nominatim\par
00018 {\cf17 import} ssl\par
00019 {\cf17 import} certifi\par
00020 ssl_context = ssl.create_default_context(cafile=certifi.where())\par
00021 geolocator = Nominatim(user_agent = {\cf22 "route app"}, ssl_context=ssl_context, timeout=10)\par
00022 geo_pyPlacesGeocode = []\par
00023 {\cf19 for} place {\cf19 in} geo_pyPlaces:\par
00024     location = geolocator.geocode(place)\par
00025     {\cf19 if} location:\par
00026         geo_pyPlacesGeocode.append(location)\par
00027 geo_pyPlacesCoords = []\par
00028 {\cf19 for} item {\cf19 in} geo_pyPlacesGeocode:\par
00029     {\cf19 if} item:\par
00030         geo_pyPlacesCoords.append([item.longitude, item.latitude])\par
00031 bobcat_express_stops = \{\par
00032     {\cf22 "R Street Village Apts"}: [\par
00033         {\cf22 "6:29"}, {\cf22 "7:09"}, {\cf22 "7:49"}, {\cf22 "8:44"}, {\cf22 "9:24"}, {\cf22 "10:04"}, {\cf22 "10:44"}, {\cf22 "12:09"}, {\cf22 "1:49"}, {\cf22 "3:17"}, {\cf22 "4:57"},\par
00034         {\cf22 "6:22"}, {\cf22 "8:02"}\par
00035     ],\par
00036     {\cf22 "El Redondo Dr"}: [\par
00037         {\cf22 "6:32"}, {\cf22 "7:12"}, {\cf22 "7:52"}, {\cf22 "8:47"}, {\cf22 "9:27"}, {\cf22 "10:07"}, {\cf22 "10:47"}, {\cf22 "12:12"}, {\cf22 "1:52"}, {\cf22 "3:20"}, {\cf22 "5:00"},\par
00038         {\cf22 "6:25"}, {\cf22 "8:05"}\par
00039     ],\par
00040     {\cf22 "Compass Pointe Apts"}: [\par
00041         {\cf22 "6:34"}, {\cf22 "7:14"}, {\cf22 "7:54"}, {\cf22 "8:49"}, {\cf22 "9:29"}, {\cf22 "10:09"}, {\cf22 "10:49"}, {\cf22 "12:14"}, {\cf22 "1:54"}, {\cf22 "3:22"}, {\cf22 "5:02"},\par
00042         {\cf22 "6:27"}, {\cf22 "8:07"}\par
00043         \par
00044     ],\par
00045     {\cf22 "Merced College The Bus Terminal"}: [\par
00046         {\cf22 "6:39"}, {\cf22 "7:19"}, {\cf22 "7:59"}, {\cf22 "8:54"}, {\cf22 "9:34"}, {\cf22 "10:14"}, {\cf22 "10:54"}, {\cf22 "12:19"}, {\cf22 "1:59"}, {\cf22 "3:27"}, {\cf22 "5:07"},\par
00047         {\cf22 "6:32"}, {\cf22 "8:12"}\par
00048     ],\par
00049     {\cf22 "M St. At Bellevue RD"}: [\par
00050         {\cf22 "6:44"}, {\cf22 "7:24"}, {\cf22 "8:04"}, {\cf22 "8:59"}, {\cf22 "9:39"}, {\cf22 "10:19"}, {\cf22 "11:00"}, {\cf22 "12:25"}, {\cf22 "2:05"}, {\cf22 "3:33"}, {\cf22 "5:13"},\par
00051         {\cf22 "6:38"}, {\cf22 "8:18"}\par
00052     ],\par
00053     {\cf22 "University Transit Center"}: [\par
00054         {\cf22 "6:55"}, {\cf22 "7:35"}, {\cf22 "8:30"}, {\cf22 "9:10"}, {\cf22 "9:50"}, {\cf22 "10:30"}, {\cf22 "11:11"}, {\cf22 "12:51"}, {\cf22 "2:16"}, {\cf22 "3:59"}, {\cf22 "5:24"},\par
00055         {\cf22 "7:04"}, {\cf22 "8:29*"}\par
00056     ],\par
00057     {\cf22 "Promenade Center"}: [{\cf22 "11:20"}, {\cf22 "1:00"}, {\cf22 "2:25"}, {\cf22 "4:08"}, {\cf22 "5:33"}, {\cf22 "7:13"}],\par
00058     {\cf22 "Merced Mall Target"}: [{\cf22 "11:29"}, {\cf22 "1:09"}, {\cf22 "2:37"}, {\cf22 "4:17"}, {\cf22 "5:42"}, {\cf22 "7:22"}],\par
00059     {\cf22 "Walmart on Loughborough Dr"}: [{\cf22 "11:38"}, {\cf22 "1:18"}, {\cf22 "2:46"}, {\cf22 "4:26"}, {\cf22 "5:51"}, {\cf22 "7:31"}],\par
00060     {\cf22 "Amtrak Station"}: [{\cf22 "11:50"}, {\cf22 "1:30"}, {\cf22 "2:58"}, {\cf22 "4:38"}, {\cf22 "6:03"}, {\cf22 "7:43"}],\par
00061     {\cf22 "K St. Between 18th & 19th"}: [{\cf22 "11:52"}, {\cf22 "1:32"}, {\cf22 "3:00"}, {\cf22 "4:40"}, {\cf22 "6:05"}, {\cf22 "7:45"}],\par
00062     {\cf22 "Merced Transpo"}: [{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}],\par
00063     {\cf22 "Rite Aid/Walgreens"}: [{\cf22 "12:01"}, {\cf22 "1:41"}, {\cf22 "3:09"}, {\cf22 "4:49"}, {\cf22 "6:14"}, {\cf22 "7:54"}],\par
00064     {\cf22 "El Portal & G Street"}: [{\cf22 "12:03"}, {\cf22 "1:43"}, {\cf22 "3:11"}, {\cf22 "4:51"}, {\cf22 "6:16"}, {\cf22 "7:56"}]\par
00065 \}\par
00066 \par
00067 bobcat_express_stops_keys = [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, \par
00068                              {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Promenade Center"}, {\cf22 "Merced Mall Target"}, \par
00069                              {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "Merced Transpo"}, \par
00070                              {\cf22 "Rite Aid/Walgreens"}, {\cf22 "El Portal & G Street"}]\par
00071 \par
00072 bobcat_express_stops_values = [[{\cf22 "6:29"}, {\cf22 "7:09"}, {\cf22 "7:49"}, {\cf22 "8:44"}, {\cf22 "9:24"}, {\cf22 "10:04"}, {\cf22 "10:44"}, {\cf22 "12:09"}, {\cf22 "1:49"}, {\cf22 "3:17"}, {\cf22 "4:57"}, {\cf22 "6:22"}, {\cf22 "8:02"}], \par
00073                                [{\cf22 "6:32"}, {\cf22 "7:12"}, {\cf22 "7:52"}, {\cf22 "8:47"}, {\cf22 "9:27"}, {\cf22 "10:07"}, {\cf22 "10:47"}, {\cf22 "12:12"}, {\cf22 "1:52"}, {\cf22 "3:20"}, {\cf22 "5:00"}, {\cf22 "6:25"}, {\cf22 "8:05"}], \par
00074                                [{\cf22 "6:34"}, {\cf22 "7:14"}, {\cf22 "7:54"}, {\cf22 "8:49"}, {\cf22 "9:29"}, {\cf22 "10:09"}, {\cf22 "10:49"}, {\cf22 "12:14"}, {\cf22 "1:54"}, {\cf22 "3:22"}, {\cf22 "5:02"}, {\cf22 "6:27"}, {\cf22 "8:07"}], \par
00075                                [{\cf22 "6:39"}, {\cf22 "7:19"}, {\cf22 "7:59"}, {\cf22 "8:54"}, {\cf22 "9:34"}, {\cf22 "10:14"}, {\cf22 "10:54"}, {\cf22 "12:19"}, {\cf22 "1:59"}, {\cf22 "3:27"}, {\cf22 "5:07"}, {\cf22 "6:32"}, {\cf22 "8:12"}], \par
00076                                [{\cf22 "6:44"}, {\cf22 "7:24"}, {\cf22 "8:04"}, {\cf22 "8:59"}, {\cf22 "9:39"}, {\cf22 "10:19"}, {\cf22 "11:00"}, {\cf22 "12:25"}, {\cf22 "2:05"}, {\cf22 "3:33"}, {\cf22 "5:13"}, {\cf22 "6:38"}, {\cf22 "8:18"}], \par
00077                                [{\cf22 "6:55"}, {\cf22 "7:35"}, {\cf22 "8:30"}, {\cf22 "9:10"}, {\cf22 "9:50"}, {\cf22 "10:30"}, {\cf22 "11:11"}, {\cf22 "12:51"}, {\cf22 "2:16"}, {\cf22 "3:59"}, {\cf22 "5:24"}, {\cf22 "7:04"}, {\cf22 "8:29*"}], \par
00078                                [{\cf22 "11:20"}, {\cf22 "1:00"}, {\cf22 "2:25"}, {\cf22 "4:08"}, {\cf22 "5:33"}, {\cf22 "7:13"}], [{\cf22 "11:29"}, {\cf22 "1:09"}, {\cf22 "2:37"}, {\cf22 "4:17"}, {\cf22 "5:42"}, {\cf22 "7:22"}], \par
00079                                [{\cf22 "11:38"}, {\cf22 "1:18"}, {\cf22 "2:46"}, {\cf22 "4:26"}, {\cf22 "5:51"}, {\cf22 "7:31"}], [{\cf22 "11:50"}, {\cf22 "1:30"}, {\cf22 "2:58"}, {\cf22 "4:38"}, {\cf22 "6:03"}, {\cf22 "7:43"}], \par
00080                                [{\cf22 "11:52"}, {\cf22 "1:32"}, {\cf22 "3:00"}, {\cf22 "4:40"}, {\cf22 "6:05"}, {\cf22 "7:45"}], [{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}], [\par
00081                                    {\cf22 "12:01"}, {\cf22 "1:41"}, {\cf22 "3:09"}, {\cf22 "4:49"}, {\cf22 "6:14"}, {\cf22 "7:54"}], [{\cf22 "12:03"}, {\cf22 "1:43"}, {\cf22 "3:11"}, {\cf22 "4:51"}, {\cf22 "6:16"}, {\cf22 "7:56"}]]\par
00082 C1_stops = \{\par
00083     {\cf22 "Granville Apartments"}: [{\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "11:34"}, {\cf22 "12:45"}, {\cf22 "2:16"}, {\cf22 "3:27"}, {\cf22 "4:53"}, {\cf22 "6:04"}, {\cf22 "7:15"}, {\cf22 "8:41"}, {\cf22 "9:52"}, {\cf22 "REQ:"}],\par
00084     {\cf22 "G St. & W. Alexander Ave"}: [{\cf22 "6:32"}, {\cf22 "7:43"}, {\cf22 "9:09"}, {\cf22 "10:20"}, {\cf22 "11:46"}, {\cf22 "12:57"}, {\cf22 "2:28"}, {\cf22 "3:39"}, {\cf22 "5:05"}, {\cf22 "6:16"}, {\cf22 "7:27"}, {\cf22 "8:53"}, {\cf22 "10:04"}, {\cf22 "REQ:"}],\par
00085     {\cf22 "Rite Aid/Walgreens"}: [{\cf22 "6:34"}, {\cf22 "7:45"}, {\cf22 "9:11"}, {\cf22 "10:22"}, {\cf22 "11:48"}, {\cf22 "12:59"}, {\cf22 "2:30"}, {\cf22 "3:41"}, {\cf22 "5:07"}, {\cf22 "6:18"}, {\cf22 "7:29"}, {\cf22 "8:55"}, {\cf22 "10:06"}, {\cf22 "REQ:"}],\par
00086     {\cf22 "El Portal & G Street"}: [{\cf22 "6:36"}, {\cf22 "7:47"}, {\cf22 "9:13"}, {\cf22 "10:24"}, {\cf22 "11:50"}, {\cf22 "1:01"}, {\cf22 "2:32"}, {\cf22 "3:43"}, {\cf22 "5:09"}, {\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "REQ:"}, {\cf22 "7:09"}, {\cf22 "8:35"}, {\cf22 "9:46"}, {\cf22 "11:12"}, {\cf22 "12:23"}, {\cf22 "1:49"}, {\cf22 "3:05"}, {\cf22 "4:31"}, {\cf22 "5:42"}, {\cf22 "6:53"}, {\cf22 "8:19"}, {\cf22 "9:30"},],\par
00087     {\cf22 "TriCollege/Mercy"}: [{\cf22 "6:39"}, {\cf22 "7:50"}, {\cf22 "9:16"}, {\cf22 "10:27"}, {\cf22 "11:53"}, {\cf22 "1:04"}, {\cf22 "2:35"}, {\cf22 "3:46"}, {\cf22 "5:12"}, {\cf22 "6:23"}, {\cf22 "7:34"}, {\cf22 "9:00"}, {\cf22 "10:11"}, {\cf22 "REQ:"}],\par
00088     {\cf22 "M St. At Bellevue RD"}: [{\cf22 "6:45"}, {\cf22 "7:56"}, {\cf22 "9:22"}, {\cf22 "10:33"}, {\cf22 "11:59"}, {\cf22 "1:10"}, {\cf22 "2:41"}, {\cf22 "3:52"}, {\cf22 "5:18"}, {\cf22 "6:29"}, {\cf22 "7:40"}, {\cf22 "9:06"}, {\cf22 "10:17"}, {\cf22 "REQ:"}],\par
00089     {\cf22 "University Transit Center"}: [{\cf22 "6:56"}, {\cf22 "8:22"}, {\cf22 "9:33"}, {\cf22 "10:59"}, {\cf22 "12:10"}, {\cf22 "1:36"}, {\cf22 "2:52"}, {\cf22 "4:18"}, {\cf22 "5:29"}, {\cf22 "6:40"}, {\cf22 "8:06"}, {\cf22 "9:17"}, {\cf22 "10:28"}],\par
00090     {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}: [{\cf22 "7:06"}, {\cf22 "8:32"}, {\cf22 "9:43"}, {\cf22 "11:09"}, {\cf22 "12:20"}, {\cf22 "1:46"}, {\cf22 "3:02"}, {\cf22 "4:28"}, {\cf22 "5:39"}, {\cf22 "6:50"}, {\cf22 "8:16"}, {\cf22 "9:27"}, {\cf22 "REQ:"}],\par
00091     {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}: [{\cf22 "7:14"}, {\cf22 "8:40"}, {\cf22 "9:51"}, {\cf22 "11:17"}, {\cf22 "12:28"}, {\cf22 "1:54"}, {\cf22 "3:10"}, {\cf22 "4:36"}, {\cf22 "5:47"}, {\cf22 "6:58"}, {\cf22 "8:24"}, {\cf22 "9:35"}, {\cf22 "REQ:"}]\par
00092     \}\par
00093 \par
00094 C1_stops_keys = [{\cf22 "Granville Apartments"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "El Portal & G Street"}, \par
00095             {\cf22 "TriCollege/Mercy"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
00096             {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}]\par
00097 \par
00098 C1_stops_values = [[{\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "11:34"}, {\cf22 "12:45"}, {\cf22 "2:16"}, {\cf22 "3:27"}, {\cf22 "4:53"}, {\cf22 "6:04"}, {\cf22 "7:15"}, {\cf22 "8:41"}, {\cf22 "9:52"}, {\cf22 "REQ:"}], \par
00099                    [{\cf22 "6:32"}, {\cf22 "7:43"}, {\cf22 "9:09"}, {\cf22 "10:20"}, {\cf22 "11:46"}, {\cf22 "12:57"}, {\cf22 "2:28"}, {\cf22 "3:39"}, {\cf22 "5:05"}, {\cf22 "6:16"}, {\cf22 "7:27"}, {\cf22 "8:53"}, {\cf22 "10:04"}, {\cf22 "REQ:"}], \par
00100                    [{\cf22 "6:34"}, {\cf22 "7:45"}, {\cf22 "9:11"}, {\cf22 "10:22"}, {\cf22 "11:48"}, {\cf22 "12:59"}, {\cf22 "2:30"}, {\cf22 "3:41"}, {\cf22 "5:07"}, {\cf22 "6:18"}, {\cf22 "7:29"}, {\cf22 "8:55"}, {\cf22 "10:06"}, {\cf22 "REQ:"}], \par
00101                    [{\cf22 "6:36"}, {\cf22 "7:47"}, {\cf22 "9:13"}, {\cf22 "10:24"}, {\cf22 "11:50"}, {\cf22 "1:01"}, {\cf22 "2:32"}, {\cf22 "3:43"}, {\cf22 "5:09"}, {\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "REQ:"}, \par
00102                     {\cf22 "7:09"}, {\cf22 "8:35"}, {\cf22 "9:46"}, {\cf22 "11:12"}, {\cf22 "12:23"}, {\cf22 "1:49"}, {\cf22 "3:05"}, {\cf22 "4:31"}, {\cf22 "5:42"}, {\cf22 "6:53"}, {\cf22 "8:19"}, {\cf22 "9:30"}], [{\cf22 "6:39"}, {\cf22 "7:50"}, \par
00103                     {\cf22 "9:16"}, {\cf22 "10:27"}, {\cf22 "11:53"}, {\cf22 "1:04"}, {\cf22 "2:35"}, {\cf22 "3:46"}, {\cf22 "5:12"}, {\cf22 "6:23"}, {\cf22 "7:34"}, {\cf22 "9:00"}, {\cf22 "10:11"}, {\cf22 "REQ:"}], [{\cf22 "6:45"}, {\cf22 "7:56"}, \par
00104                     {\cf22 "9:22"}, {\cf22 "10:33"}, {\cf22 "11:59"}, {\cf22 "1:10"}, {\cf22 "2:41"}, {\cf22 "3:52"}, {\cf22 "5:18"}, {\cf22 "6:29"}, {\cf22 "7:40"}, {\cf22 "9:06"}, {\cf22 "10:17"}, {\cf22 "REQ:"}], \par
00105                     [{\cf22 "6:56"}, {\cf22 "8:22"}, {\cf22 "9:33"}, {\cf22 "10:59"}, {\cf22 "12:10"}, {\cf22 "1:36"}, {\cf22 "2:52"}, {\cf22 "4:18"}, {\cf22 "5:29"}, {\cf22 "6:40"}, {\cf22 "8:06"}, {\cf22 "9:17"}, {\cf22 "10:28"}], \par
00106                     [{\cf22 "7:06"}, {\cf22 "8:32"}, {\cf22 "9:43"}, {\cf22 "11:09"}, {\cf22 "12:20"}, {\cf22 "1:46"}, {\cf22 "3:02"}, {\cf22 "4:28"}, {\cf22 "5:39"}, {\cf22 "6:50"}, {\cf22 "8:16"}, {\cf22 "9:27"}, {\cf22 "REQ:"}], \par
00107                     [{\cf22 "7:14"}, {\cf22 "8:40"}, {\cf22 "9:51"}, {\cf22 "11:17"}, {\cf22 "12:28"}, {\cf22 "1:54"}, {\cf22 "3:10"}, {\cf22 "4:36"}, {\cf22 "5:47"}, {\cf22 "6:58"}, {\cf22 "8:24"}, {\cf22 "9:35"}, {\cf22 "REQ:"}]]\par
00108 \par
00109 C2_stops = \{\par
00110     {\cf22 "R Street Village Apts"}: [{\cf22 "6:20"}, {\cf22 "7:18"}, {\cf22 "8:31"}, {\cf22 "9:29"}, {\cf22 "10:42"}, {\cf22 "11:40"}, {\cf22 "12:53"}, {\cf22 "1:51"}, {\cf22 "2:52"}, {\cf22 "3:50"}, {\cf22 "5:03"}, {\cf22 "6:01"}, {\cf22 "7:14"}, {\cf22 "8:12"}, {\cf22 "9:25"}, {\cf22 "REQ:"}],\par
00111         {\cf22 "El Redondo Dr"}: [\par
00112             {\cf22 "6:23"}, {\cf22 "7:21"}, {\cf22 "8:34"}, {\cf22 "9:32"}, {\cf22 "10:45"}, {\cf22 "11:43"}, {\cf22 "12:56"}, {\cf22 "1:54"}, {\cf22 "2:55"}, {\cf22 "3:53"}, {\cf22 "5:06"}, {\cf22 "6:04"}, {\cf22 "7:17"}, {\cf22 "8:15"}, {\cf22 "9:28"}, {\cf22 "REQ:"}\par
00113         ],\par
00114         {\cf22 "Compass Pointe Apts"}: [\par
00115             {\cf22 "6:25"}, {\cf22 "7:23"}, {\cf22 "8:36"}, {\cf22 "9:34"}, {\cf22 "10:47"}, {\cf22 "11:45"}, {\cf22 "12:58"}, {\cf22 "1:56"}, {\cf22 "2:57"}, {\cf22 "3:55"}, {\cf22 "5:08"}, {\cf22 "6:06"}, {\cf22 "7:19"}, {\cf22 "8:17"}, {\cf22 "9:30"}, {\cf22 "REQ:"}\par
00116         ],\par
00117         {\cf22 "Buena Vista Dr"}: [\par
00118             {\cf22 "6:32"}, {\cf22 "7:30"}, {\cf22 "8:43"}, {\cf22 "9:41"}, {\cf22 "10:54"}, {\cf22 "11:52"}, {\cf22 "1:05"}, {\cf22 "2:03"}, {\cf22 "3:04"}, {\cf22 "4:02"}, {\cf22 "5:15"}, {\cf22 "6:13"}, {\cf22 "7:26"}, {\cf22 "8:24"}, {\cf22 "9:37"}, {\cf22 "REQ:"}\par
00119         ],\par
00120         {\cf22 "Merced Mall Target"}: [\par
00121             {\cf22 "6:39"}, {\cf22 "7:37"}, {\cf22 "8:50"}, {\cf22 "9:48"}, {\cf22 "11:01"}, {\cf22 "11:59"}, {\cf22 "1:12"}, {\cf22 "2:13"}, {\cf22 "3:11"}, {\cf22 "4:09"}, {\cf22 "5:22"}, {\cf22 "6:20"}, {\cf22 "7:33"}, {\cf22 "8:31"}, {\cf22 "9:44"}, {\cf22 "REQ:"}\par
00122         ],\par
00123         {\cf22 "Village Apts. 'M' Street"}: [\par
00124             {\cf22 "6:41"}, {\cf22 "7:39"}, {\cf22 "8:52"}, {\cf22 "9:50"}, {\cf22 "11:03"}, {\cf22 "12:01"}, {\cf22 "1:14"}, {\cf22 "2:15"}, {\cf22 "3:13"}, {\cf22 "4:11"}, {\cf22 "5:24"}, {\cf22 "6:22"}, {\cf22 "7:35"}, {\cf22 "8:33"}, {\cf22 "9:46"}, {\cf22 "REQ:"}\par
00125         ],\par
00126         {\cf22 "Merced College The Bus Terminal"}: [\par
00127             {\cf22 "6:45"}, {\cf22 "7:43"}, {\cf22 "8:56"}, {\cf22 "9:54"}, {\cf22 "11:07"}, {\cf22 "12:05"}, {\cf22 "1:18"}, {\cf22 "2:19"}, {\cf22 "3:17"}, {\cf22 "4:15"}, {\cf22 "5:28"}, {\cf22 "6:26"}, {\cf22 "7:39"}, {\cf22 "8:37"}, {\cf22 "9:50"}, {\cf22 "REQ:"}\par
00128         ],\par
00129         {\cf22 "Cardella Rd. & 'M' Street (North)"}: [\par
00130             {\cf22 "6:48"}, {\cf22 "7:46"}, {\cf22 "8:59"}, {\cf22 "9:57"}, {\cf22 "11:10"}, {\cf22 "12:08"}, {\cf22 "1:21"}, {\cf22 "2:22"}, {\cf22 "3:20"}, {\cf22 "4:18"}, {\cf22 "5:31"}, {\cf22 "6:29"}, {\cf22 "7:42"}, {\cf22 "8:40"}, {\cf22 "9:53"}, {\cf22 "REQ:"}\par
00131         ],\par
00132         {\cf22 "M St. At Bellevue RD"}: [\par
00133             {\cf22 "6:51"}, {\cf22 "7:49"}, {\cf22 "9:02"}, {\cf22 "10:00"}, {\cf22 "11:13"}, {\cf22 "12:11"}, {\cf22 "1:24"}, {\cf22 "2:25"}, {\cf22 "3:23"}, {\cf22 "4:21"}, {\cf22 "5:34"}, {\cf22 "6:32"}, {\cf22 "7:45"}, {\cf22 "8:43"}, {\cf22 "9:56"}, {\cf22 "REQ:"}\par
00134         ],\par
00135         {\cf22 "University Transit Center"}: [\par
00136             {\cf22 "7:02"}, {\cf22 "8:15"}, {\cf22 "9:13"}, {\cf22 "10:26"}, {\cf22 "11:24"}, {\cf22 "12:37"}, {\cf22 "1:35"}, {\cf22 "2:36"}, {\cf22 "3:34"}, {\cf22 "4:47"}, {\cf22 "5:45"}, {\cf22 "6:58"}, {\cf22 "7:56"}, {\cf22 "9:09"}, {\cf22 "10:07"}\par
00137         ],\par
00138         {\cf22 "Foothill Drive"}: [{\cf22 "7:09"}, {\cf22 "8:22"}, {\cf22 "9:20"}, {\cf22 "10:33"}, {\cf22 "11:31"}, {\cf22 "12:44"}, {\cf22 "1:42"}, {\cf22 "2:43"}],\par
00139         {\cf22 "Cardella Rd. & 'M' Street (South)"}: [\par
00140             {\cf22 "7:13"}, {\cf22 "8:26"}, {\cf22 "9:24"}, {\cf22 "10:37"}, {\cf22 "11:35"}, {\cf22 "12:48"}, {\cf22 "1:46"}, {\cf22 "2:47"}, {\cf22 "3:45"}, {\cf22 "4:58"}, {\cf22 "5:56"}, {\cf22 "7:09"}, {\cf22 "8:07"}, {\cf22 "9:20"}, {\cf22 "REQ:"}\par
00141         ]\par
00142 \}\par
00143 \par
00144 C2_stops_keys = [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Buena Vista Dr"}, {\cf22 "Merced Mall Target"}, {\cf22 "Village Apts. 'M' Street"}, \par
00145                 {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Foothill Drive"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}]\par
00146 \par
00147 C2_stops_values = [[{\cf22 "6:20"}, {\cf22 "7:18"}, {\cf22 "8:31"}, {\cf22 "9:29"}, {\cf22 "10:42"}, {\cf22 "11:40"}, {\cf22 "12:53"}, {\cf22 "1:51"}, {\cf22 "2:52"}, {\cf22 "3:50"}, {\cf22 "5:03"}, {\cf22 "6:01"}, {\cf22 "7:14"}, {\cf22 "8:12"}, {\cf22 "9:25"}, {\cf22 "REQ:"}], \par
00148                    [{\cf22 "6:23"}, {\cf22 "7:21"}, {\cf22 "8:34"}, {\cf22 "9:32"}, {\cf22 "10:45"}, {\cf22 "11:43"}, {\cf22 "12:56"}, {\cf22 "1:54"}, {\cf22 "2:55"}, {\cf22 "3:53"}, {\cf22 "5:06"}, {\cf22 "6:04"}, {\cf22 "7:17"}, {\cf22 "8:15"}, {\cf22 "9:28"}, {\cf22 "REQ:"}], \par
00149                    [{\cf22 "6:25"}, {\cf22 "7:23"}, {\cf22 "8:36"}, {\cf22 "9:34"}, {\cf22 "10:47"}, {\cf22 "11:45"}, {\cf22 "12:58"}, {\cf22 "1:56"}, {\cf22 "2:57"}, {\cf22 "3:55"}, {\cf22 "5:08"}, {\cf22 "6:06"}, {\cf22 "7:19"}, {\cf22 "8:17"}, {\cf22 "9:30"}, {\cf22 "REQ:"}], \par
00150                    [{\cf22 "6:32"}, {\cf22 "7:30"}, {\cf22 "8:43"}, {\cf22 "9:41"}, {\cf22 "10:54"}, {\cf22 "11:52"}, {\cf22 "1:05"}, {\cf22 "2:03"}, {\cf22 "3:04"}, {\cf22 "4:02"}, {\cf22 "5:15"}, {\cf22 "6:13"}, {\cf22 "7:26"}, {\cf22 "8:24"}, {\cf22 "9:37"}, {\cf22 "REQ:"}], \par
00151                    [{\cf22 "6:39"}, {\cf22 "7:37"}, {\cf22 "8:50"}, {\cf22 "9:48"}, {\cf22 "11:01"}, {\cf22 "11:59"}, {\cf22 "1:12"}, {\cf22 "2:13"}, {\cf22 "3:11"}, {\cf22 "4:09"}, {\cf22 "5:22"}, {\cf22 "6:20"}, {\cf22 "7:33"}, {\cf22 "8:31"}, {\cf22 "9:44"}, {\cf22 "REQ:"}], \par
00152                    [{\cf22 "6:41"}, {\cf22 "7:39"}, {\cf22 "8:52"}, {\cf22 "9:50"}, {\cf22 "11:03"}, {\cf22 "12:01"}, {\cf22 "1:14"}, {\cf22 "2:15"}, {\cf22 "3:13"}, {\cf22 "4:11"}, {\cf22 "5:24"}, {\cf22 "6:22"}, {\cf22 "7:35"}, {\cf22 "8:33"}, {\cf22 "9:46"}, {\cf22 "REQ:"}], \par
00153                    [{\cf22 "6:45"}, {\cf22 "7:43"}, {\cf22 "8:56"}, {\cf22 "9:54"}, {\cf22 "11:07"}, {\cf22 "12:05"}, {\cf22 "1:18"}, {\cf22 "2:19"}, {\cf22 "3:17"}, {\cf22 "4:15"}, {\cf22 "5:28"}, {\cf22 "6:26"}, {\cf22 "7:39"}, {\cf22 "8:37"}, {\cf22 "9:50"}, {\cf22 "REQ:"}], \par
00154                    [{\cf22 "6:48"}, {\cf22 "7:46"}, {\cf22 "8:59"}, {\cf22 "9:57"}, {\cf22 "11:10"}, {\cf22 "12:08"}, {\cf22 "1:21"}, {\cf22 "2:22"}, {\cf22 "3:20"}, {\cf22 "4:18"}, {\cf22 "5:31"}, {\cf22 "6:29"}, {\cf22 "7:42"}, {\cf22 "8:40"}, {\cf22 "9:53"}, {\cf22 "REQ:"}], \par
00155                    [{\cf22 "6:51"}, {\cf22 "7:49"}, {\cf22 "9:02"}, {\cf22 "10:00"}, {\cf22 "11:13"}, {\cf22 "12:11"}, {\cf22 "1:24"}, {\cf22 "2:25"}, {\cf22 "3:23"}, {\cf22 "4:21"}, {\cf22 "5:34"}, {\cf22 "6:32"}, {\cf22 "7:45"}, {\cf22 "8:43"}, {\cf22 "9:56"}, {\cf22 "REQ:"}], \par
00156                    [{\cf22 "7:02"}, {\cf22 "8:15"}, {\cf22 "9:13"}, {\cf22 "10:26"}, {\cf22 "11:24"}, {\cf22 "12:37"}, {\cf22 "1:35"}, {\cf22 "2:36"}, {\cf22 "3:34"}, {\cf22 "4:47"}, {\cf22 "5:45"}, {\cf22 "6:58"}, {\cf22 "7:56"}, {\cf22 "9:09"}, {\cf22 "10:07"}], \par
00157                    [{\cf22 "7:09"}, {\cf22 "8:22"}, {\cf22 "9:20"}, {\cf22 "10:33"}, {\cf22 "11:31"}, {\cf22 "12:44"}, {\cf22 "1:42"}, {\cf22 "2:43"}], [{\cf22 "7:13"}, {\cf22 "8:26"}, {\cf22 "9:24"}, {\cf22 "10:37"}, {\cf22 "11:35"}, {\cf22 "12:48"}, {\cf22 "1:46"}, {\cf22 "2:47"}, {\cf22 "3:45"}, {\cf22 "4:58"}, {\cf22 "5:56"}, {\cf22 "7:09"}, {\cf22 "8:07"}, {\cf22 "9:20"}, {\cf22 "REQ:"}]]\par
00158 \par
00159 E1_stops = \{\par
00160     {\cf22 "University Transit Center"}: [{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}],\par
00161     {\cf22 "G Street South"}: [{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}],\par
00162     {\cf22 "Amtrak Station"}: [{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}],\par
00163     {\cf22 "K St. Between 18th & 19th"}: [{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}],\par
00164     {\cf22 "Walmart on Loughborough Dr"}: [{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}],\par
00165     {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}: [{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}],\par
00166     {\cf22 "Merced Mall Target"}: [{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}],\par
00167     {\cf22 "Rite Aid/Walgreens"}: [{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}],\par
00168     {\cf22 "Yosemite Crossings Shopping Center"}: [{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"} ],\par
00169     \}\par
00170 \par
00171 \par
00172 E1_stops_keys = [{\cf22 "University Transit Center"}, {\cf22 "G Street South"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced Mall Target"}, \par
00173                  {\cf22 "Rite Aid/Walgreens"}, {\cf22 "Yosemite Crossings Shopping Center"}]\par
00174 \par
00175 E1_stops_values = [[{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}], \par
00176                    [{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}], \par
00177                    [{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}], \par
00178                    [{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}], \par
00179                    [{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}], \par
00180                    [{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}], \par
00181                    [{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}], \par
00182                    [{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}], \par
00183                    [{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}]]\par
00184 \par
00185 E2_stops = \{\par
00186         {\cf22 "University Transit Center"}: [{\cf22 "11:05"}, {\cf22 "12:09"}, {\cf22 "12:58"}, {\cf22 "1:47"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:29"}, {\cf22 "5:18"}, {\cf22 "6:25"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:07"}, {\cf22 "9:56"}],\par
00187         {\cf22 "Promenade Center"}: [{\cf22 "11:14"}, {\cf22 "12:18"}, {\cf22 "1:07"}, {\cf22 "1:56"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "4:38"}, {\cf22 "5:27"}, {\cf22 "6:34"}, {\cf22 "7:23"}, {\cf22 "8:27"}, {\cf22 "9:16"}],\par
00188         {\cf22 "R Street Village Apts"}: [{\cf22 "11:20"}, {\cf22 "12:24"}, {\cf22 "1:13"}, {\cf22 "2:02"}, {\cf22 "2:51"}, {\cf22 "3:55"}, {\cf22 "4:44"}, {\cf22 "5:36"}, {\cf22 "6:40"}, {\cf22 "7:29"}, {\cf22 "8:33"}, {\cf22 "9:22"}],\par
00189         {\cf22 "El Redondo Dr"}: [{\cf22 "11:23"}, {\cf22 "12:27"}, {\cf22 "1:16"}, {\cf22 "2:05"}, {\cf22 "2:54"}, {\cf22 "3:58"}, {\cf22 "4:47"}, {\cf22 "5:39"}, {\cf22 "6:43"}, {\cf22 "7:32"}, {\cf22 "8:36"}, {\cf22 "9:25"}],\par
00190         {\cf22 "Compass Pointe Apts"}: [{\cf22 "11:25"}, {\cf22 "12:29"}, {\cf22 "1:18"}, {\cf22 "2:07"}, {\cf22 "2:56"}, {\cf22 "4:00"}, {\cf22 "4:49"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "7:34"}, {\cf22 "8:38"}, {\cf22 "9:27"}],\par
00191         {\cf22 "Merced Mall Target"}: [{\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:24"}, {\cf22 "2:13"}, {\cf22 "3:02"}, {\cf22 "4:06"}, {\cf22 "4:55"}, {\cf22 "5:47"}, {\cf22 "6:51"}, {\cf22 "7:40"}, {\cf22 "8:44"}, {\cf22 "9:33"}],\par
00192         {\cf22 "M Street Village Apartments"}: [{\cf22 "11:33"}, {\cf22 "12:37"}, {\cf22 "1:26"}, {\cf22 "2:15"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "4:57"}, {\cf22 "5:49"}, {\cf22 "6:53"}, {\cf22 "7:42"}, {\cf22 "8:46"}, {\cf22 "9:35"}],\par
00193         {\cf22 "Ironstone Dr. & M St"}: [{\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:30"}, {\cf22 "2:19"}, {\cf22 "3:08"}, {\cf22 "4:12"}, {\cf22 "5:01"}, {\cf22 "5:53"}, {\cf22 "6:57"}, {\cf22 "7:46"}, {\cf22 "8:50"}, {\cf22 "9:39"}],\par
00194         {\cf22 "Yosemite & Cordova (Merced Physician Center)"}: [{\cf22 "11:43"}, {\cf22 "12:47"}, {\cf22 "1:36"}, {\cf22 "2:25"}, {\cf22 "3:14"}, {\cf22 "4:18"}, {\cf22 "5:07"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "7:52"}, {\cf22 "8:56"}, {\cf22 "9:45"}],\par
00195         {\cf22 "Moraga Subdivision"}: [{\cf22 "11:46"}, {\cf22 "12:50"}, {\cf22 "1:39"}, {\cf22 "2:28"}, {\cf22 "3:17"}, {\cf22 "4:21"}, {\cf22 "5:10"}, {\cf22 "6:02"}, {\cf22 "7:06"}, {\cf22 "7:55"}, {\cf22 "8:59"}, {\cf22 "9:48"}],\par
00196     \}\par
00197 \par
00198 E2_stops_keys = [{\cf22 "University Transit Center"}, {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced Mall Target"}, \par
00199                  {\cf22 "M Street Village Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}]\par
00200 \par
00201 E2_stops_values = [[{\cf22 "11:05"}, {\cf22 "12:09"}, {\cf22 "12:58"}, {\cf22 "1:47"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:29"}, {\cf22 "5:18"}, {\cf22 "6:25"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:07"}, {\cf22 "9:56"}], \par
00202                    [{\cf22 "11:14"}, {\cf22 "12:18"}, {\cf22 "1:07"}, {\cf22 "1:56"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "4:38"}, {\cf22 "5:27"}, {\cf22 "6:34"}, {\cf22 "7:23"}, {\cf22 "8:27"}, {\cf22 "9:16"}], \par
00203                    [{\cf22 "11:20"}, {\cf22 "12:24"}, {\cf22 "1:13"}, {\cf22 "2:02"}, {\cf22 "2:51"}, {\cf22 "3:55"}, {\cf22 "4:44"}, {\cf22 "5:36"}, {\cf22 "6:40"}, {\cf22 "7:29"}, {\cf22 "8:33"}, {\cf22 "9:22"}], \par
00204                    [{\cf22 "11:23"}, {\cf22 "12:27"}, {\cf22 "1:16"}, {\cf22 "2:05"}, {\cf22 "2:54"}, {\cf22 "3:58"}, {\cf22 "4:47"}, {\cf22 "5:39"}, {\cf22 "6:43"}, {\cf22 "7:32"}, {\cf22 "8:36"}, {\cf22 "9:25"}], \par
00205                    [{\cf22 "11:25"}, {\cf22 "12:29"}, {\cf22 "1:18"}, {\cf22 "2:07"}, {\cf22 "2:56"}, {\cf22 "4:00"}, {\cf22 "4:49"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "7:34"}, {\cf22 "8:38"}, {\cf22 "9:27"}], \par
00206                    [{\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:24"}, {\cf22 "2:13"}, {\cf22 "3:02"}, {\cf22 "4:06"}, {\cf22 "4:55"}, {\cf22 "5:47"}, {\cf22 "6:51"}, {\cf22 "7:40"}, {\cf22 "8:44"}, {\cf22 "9:33"}], \par
00207                    [{\cf22 "11:33"}, {\cf22 "12:37"}, {\cf22 "1:26"}, {\cf22 "2:15"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "4:57"}, {\cf22 "5:49"}, {\cf22 "6:53"}, {\cf22 "7:42"}, {\cf22 "8:46"}, {\cf22 "9:35"}], \par
00208                    [{\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:30"}, {\cf22 "2:19"}, {\cf22 "3:08"}, {\cf22 "4:12"}, {\cf22 "5:01"}, {\cf22 "5:53"}, {\cf22 "6:57"}, {\cf22 "7:46"}, {\cf22 "8:50"}, {\cf22 "9:39"}], \par
00209                    [{\cf22 "11:43"}, {\cf22 "12:47"}, {\cf22 "1:36"}, {\cf22 "2:25"}, {\cf22 "3:14"}, {\cf22 "4:18"}, {\cf22 "5:07"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "7:52"}, {\cf22 "8:56"}, {\cf22 "9:45"}], \par
00210                    [{\cf22 "11:46"}, {\cf22 "12:50"}, {\cf22 "1:39"}, {\cf22 "2:28"}, {\cf22 "3:17"}, {\cf22 "4:21"}, {\cf22 "5:10"}, {\cf22 "6:02"}, {\cf22 "7:06"}, {\cf22 "7:55"}, {\cf22 "8:59"}, {\cf22 "9:48"}]]\par
00211 \par
00212 Fastcat_stops = \{\par
00213         {\cf22 "University Surgery Center"}: [ {\cf22 "6:35"}, {\cf22 "7:39"}, {\cf22 "8:58"}, {\cf22 "10:02"}, {\cf22 "11:06"}, {\cf22 "12:25"}, {\cf22 "1:29"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:59"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:11"}, {\cf22 "9:30"}],\par
00214         {\cf22 "Promenade Center"}: [{\cf22 "6:39"}, {\cf22 "7:43"}, {\cf22 "9:02"}, {\cf22 "10:06"}, {\cf22 "11:10"}, {\cf22 "12:29"}, {\cf22 "1:33"}, {\cf22 "2:40"}, {\cf22 "3:44"}, {\cf22 "5:03"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:15"}, {\cf22 "9:34"}],\par
00215         {\cf22 "Yosemite Crossings Shopping Center"}: [{\cf22 "6:42"}, {\cf22 "7:46"}, {\cf22 "9:05"}, {\cf22 "10:09"}, {\cf22 "11:13"}, {\cf22 "12:32"}, {\cf22 "1:36"}, {\cf22 "2:43"}, {\cf22 "3:47"}, {\cf22 "5:06"}, {\cf22 "6:10"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:37"}],\par
00216         {\cf22 "TriCollege/Mercy"}: [{\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"}, {\cf22 "11:15"}, {\cf22 "12:34"}, {\cf22 "1:38"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "5:08"}, {\cf22 "6:12"}, {\cf22 "7:16"}, {\cf22 "8:20"}, {\cf22 "9:39"}, {\cf22 "7:13"}, \par
00217                                        {\cf22 "8:32"}, {\cf22 "9:36"}, {\cf22 "10:40"}, {\cf22 "11:44"}, {\cf22 "1:03"}, {\cf22 "2:07"}, {\cf22 "3:14"}, {\cf22 "4:33"}, {\cf22 "5:37"}, {\cf22 "6:41"}, {\cf22 "7:45"}, {\cf22 "9:04"}, {\cf22 "10:08"},{\cf22 "REQ:"}],\par
00218         {\cf22 "Cardella Rd. & 'M' Street"}: [{\cf22 "6:48"}, {\cf22 "7:52"}, {\cf22 "9:11"}, {\cf22 "10:15"}, {\cf22 "11:19"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "2:49"}, {\cf22 "3:53"}, {\cf22 "5:12"}, {\cf22 "6:16"}, {\cf22 "7:20"}, {\cf22 "8:24"}, {\cf22 "9:43"}],\par
00219         {\cf22 "M St. At Bellevue RD"}: [{\cf22 "6:52"}, {\cf22 "7:56"}, {\cf22 "9:15"}, {\cf22 "10:19"}, {\cf22 "11:23"}, {\cf22 "12:42"}, {\cf22 "1:46"}, {\cf22 "2:53"}, {\cf22 "3:57"}, {\cf22 "5:16"}, {\cf22 "6:20"}, {\cf22 "7:24"}, {\cf22 "8:28"}, {\cf22 "9:47"}],\par
00220         {\cf22 "University Transit Center"}: [{\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:53"}, {\cf22 "1:57"}, {\cf22 "3:04"}, {\cf22 "4:23"}, {\cf22 "5:27"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "9:58"}, {\cf22 "7:30"}, \par
00221                                             {\cf22 "8:49"}, {\cf22 "9:53"}, {\cf22 "10:57"}, {\cf22 "12:16"}, {\cf22 "1:20"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:50"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:02"}, {\cf22 "9:21"}, {\cf22 "10:25"}],\par
00222         {\cf22 "Yosemite & Cordova (Merced Physician Center)"}: [{\cf22 "7:16"}, {\cf22 "8:35"}, {\cf22 "9:39"}, {\cf22 "10:43"}, {\cf22 "11:47"}, {\cf22 "1:06"}, {\cf22 "2:10"}, {\cf22 "3:17"}, {\cf22 "4:36"}, {\cf22 "5:40"}, {\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"},{\cf22 "REQ:"}],\par
00223         {\cf22 "Moraga Subdivision"}: [{\cf22 "7:22"}, {\cf22 "8:41"}, {\cf22 "9:45"}, {\cf22 "10:49"}, {\cf22 "11:53"}, {\cf22 "1:12"}, {\cf22 "2:19"}, {\cf22 "3:23"}, {\cf22 "4:42"}, {\cf22 "5:46"}, {\cf22 "6:50"}, {\cf22 "7:54"}, {\cf22 "9:13"}, {\cf22 "10:17"},{\cf22 "REQ:"}],\par
00224     \}\par
00225 \par
00226 Fastcat_stops_keys = [{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy"}, {\cf22 "Cardella Rd. & 'M' Street"}, {\cf22 "M St. At Bellevue RD"}, \par
00227                       {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}]\par
00228 \par
00229 Fastcat_stops_values = [[{\cf22 "6:35"}, {\cf22 "7:39"}, {\cf22 "8:58"}, {\cf22 "10:02"}, {\cf22 "11:06"}, {\cf22 "12:25"}, {\cf22 "1:29"}, {\cf22 "2:36"}, {\cf22 "3:40"}, {\cf22 "4:59"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:11"}, {\cf22 "9:30"}], \par
00230                         [{\cf22 "6:39"}, {\cf22 "7:43"}, {\cf22 "9:02"}, {\cf22 "10:06"}, {\cf22 "11:10"}, {\cf22 "12:29"}, {\cf22 "1:33"}, {\cf22 "2:40"}, {\cf22 "3:44"}, {\cf22 "5:03"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:15"}, {\cf22 "9:34"}], \par
00231                         [{\cf22 "6:42"}, {\cf22 "7:46"}, {\cf22 "9:05"}, {\cf22 "10:09"}, {\cf22 "11:13"}, {\cf22 "12:32"}, {\cf22 "1:36"}, {\cf22 "2:43"}, {\cf22 "3:47"}, {\cf22 "5:06"}, {\cf22 "6:10"}, {\cf22 "7:14"}, {\cf22 "8:18"}, {\cf22 "9:37"}], \par
00232                         [{\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"}, {\cf22 "11:15"}, {\cf22 "12:34"}, {\cf22 "1:38"}, {\cf22 "2:45"}, {\cf22 "3:49"}, {\cf22 "5:08"}, {\cf22 "6:12"}, {\cf22 "7:16"}, {\cf22 "8:20"}, {\cf22 "9:39"}, {\cf22 "7:13"}, {\cf22 "8:32"}, {\cf22 "9:36"}, {\cf22 "10:40"}, {\cf22 "11:44"}, {\cf22 "1:03"}, {\cf22 "2:07"}, {\cf22 "3:14"}, {\cf22 "4:33"}, {\cf22 "5:37"}, {\cf22 "6:41"}, {\cf22 "7:45"}, {\cf22 "9:04"}, {\cf22 "10:08"}, {\cf22 "REQ:"}], \par
00233                         [{\cf22 "6:48"}, {\cf22 "7:52"}, {\cf22 "9:11"}, {\cf22 "10:15"}, {\cf22 "11:19"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "2:49"}, {\cf22 "3:53"}, {\cf22 "5:12"}, {\cf22 "6:16"}, {\cf22 "7:20"}, {\cf22 "8:24"}, {\cf22 "9:43"}], \par
00234                         [{\cf22 "6:52"}, {\cf22 "7:56"}, {\cf22 "9:15"}, {\cf22 "10:19"}, {\cf22 "11:23"}, {\cf22 "12:42"}, {\cf22 "1:46"}, {\cf22 "2:53"}, {\cf22 "3:57"}, {\cf22 "5:16"}, {\cf22 "6:20"}, {\cf22 "7:24"}, {\cf22 "8:28"}, {\cf22 "9:47"}], \par
00235                         [{\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:53"}, {\cf22 "1:57"}, {\cf22 "3:04"}, {\cf22 "4:23"}, {\cf22 "5:27"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "9:58"}, {\cf22 "7:30"}, {\cf22 "8:49"}, {\cf22 "9:53"}, {\cf22 "10:57"}, {\cf22 "12:16"}, {\cf22 "1:20"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:50"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:02"}, {\cf22 "9:21"}, {\cf22 "10:25"}], \par
00236                         [{\cf22 "7:16"}, {\cf22 "8:35"}, {\cf22 "9:39"}, {\cf22 "10:43"}, {\cf22 "11:47"}, {\cf22 "1:06"}, {\cf22 "2:10"}, {\cf22 "3:17"}, {\cf22 "4:36"}, {\cf22 "5:40"}, {\cf22 "6:44"}, {\cf22 "7:48"}, {\cf22 "9:07"}, {\cf22 "10:11"}, {\cf22 "REQ:"}], \par
00237                         [{\cf22 "7:22"}, {\cf22 "8:41"}, {\cf22 "9:45"}, {\cf22 "10:49"}, {\cf22 "11:53"}, {\cf22 "1:12"}, {\cf22 "2:19"}, {\cf22 "3:23"}, {\cf22 "4:42"}, {\cf22 "5:46"}, {\cf22 "6:50"}, {\cf22 "7:54"}, {\cf22 "9:13"}, {\cf22 "10:17"}, {\cf22 "REQ:"}]]\par
00238 \par
00239 Fastcat2_stops = \{\par
00240         {\cf22 "University Surgery Center"}: [{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, \par
00241                                       {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, \par
00242                                       {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}],\par
00243         {\cf22 "Promenade Center"}: [{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}],\par
00244         {\cf22 "Yosemite Crossings Shopping Center"}: [{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}],\par
00245         {\cf22 "TriCollege/Mercy  "}: [{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, {\cf22 "9:08"}, \par
00246                                        {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}],\par
00247         {\cf22 "Cardella Rd. & 'M' Street"}: [{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}],\par
00248         {\cf22 "M St. At Bellevue RD"}: [{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}],\par
00249         {\cf22 "University Transit Center"}: [{\cf22 "8:58"}, {\cf22 "10:17"}, {\cf22 "11:21"}, {\cf22 "12:25"}, {\cf22 "1:29"}, {\cf22 "2:48"}, {\cf22 "3:52"}, {\cf22 "4:59"}, {\cf22 "6:18"}, {\cf22 "7:22"}, {\cf22 "8:41"}, {\cf22 "9:45"}],\par
00250         {\cf22 "Yosemite & Cordova (Merced Physician Center)"}: [{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}],\par
00251         {\cf22 "Moraga Subdivision"}: [{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}],\par
00252         {\cf22 "University Transit Center"}: [{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"} ],\par
00253     \}\par
00254 \par
00255 Fastcat2_stops_keys = [{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy  "}, {\cf22 "Cardella Rd. & 'M' Street"},\par
00256                        {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}]\par
00257 \par
00258 Fastcat2_stops_values = [[{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, \par
00259                           {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}], \par
00260                           [{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}], \par
00261                           [{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}], \par
00262                           [{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, \par
00263                            {\cf22 "9:08"}, {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}], \par
00264                            [{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}], \par
00265                            [{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}], \par
00266                            [{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"}], \par
00267                            [{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}], \par
00268                            [{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}]]\par
00269 \par
00270 G_line_stops = \{\par
00271         {\cf22 "R Street Village Apts"}: [{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, \par
00272                                    {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}],\par
00273         {\cf22 "El Redondo Dr"}: [{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}],\par
00274         {\cf22 "Compass Pointe Apts"}: [{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}],\par
00275         {\cf22 "Merced College The Bus Terminal"}: [{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}],\par
00276         {\cf22 "M St. At Bellevue RD"}: [{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}],\par
00277         {\cf22 "University Transit Center"}: [{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}],\par
00278         {\cf22 "Amtrak Station"}: [{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}],\par
00279         {\cf22 "K St. Between 18th & 19th"}: [{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}],\par
00280         {\cf22 "UC Merced Downtown Campus Center"}: [{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}],\par
00281         {\cf22 "Merced Transpo"}: [{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}],\par
00282     \}\par
00283 \par
00284 G_line_stops_keys = [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
00285                      {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}]\par
00286 \par
00287 G_line_stops_values = [[{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}], \par
00288                        [{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}], \par
00289                        [{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}], \par
00290                        [{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}], \par
00291                        [{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}], \par
00292                        [{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}], \par
00293                        [{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}], \par
00294                        [{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}], \par
00295                        [{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}], \par
00296                        [{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}]]\par
00297 \par
00298 yosemite_express_stops = \{\par
00299     {\cf22 "Moraga Subdivision"}: [{\cf22 "9:00"}, {\cf22 "9:27"}, {\cf22 "9:54"}, {\cf22 "10:36"}, {\cf22 "11:03"}, {\cf22 "11:30"}, {\cf22 "11:57"}, {\cf22 "12:24"}, {\cf22 "12:51"}, {\cf22 "1:18"},{\cf22 "2:00"}, \par
00300                            {\cf22 "2:27"}, {\cf22 "2:54"}, {\cf22 "3:21"}, {\cf22 "4:03"}, {\cf22 "4:35"}, {\cf22 "5:02"}, {\cf22 "5:29"}, {\cf22 "5:56"}, {\cf22 "6:38"},{\cf22 "7:05"}, {\cf22 "7:32"}, {\cf22 "7:59"}, \par
00301                            {\cf22 "8:26"}, {\cf22 "8:53"}, {\cf22 "9:20"}, {\cf22 "10:02"}], \par
00302     {\cf22 "University Transit Center"} : [{\cf22 "9:07"}, {\cf22 "9:34"}, {\cf22 "10:16"},{\cf22 "10:43"}, {\cf22 "11:10"}, {\cf22 "11:37"}, {\cf22 "12:04"}, {\cf22 "12:31"}, \par
00303                                         {\cf22 "12:58"}, {\cf22 "1:40"},{\cf22 "2:07"}, {\cf22 "2:34"}, {\cf22 "3:01"}, {\cf22 "3:43"}, {\cf22 "4:10"}, {\cf22 "4:42"}, {\cf22 "5:09"}, \par
00304                                         {\cf22 "5:36"}, {\cf22 "6:18"}, {\cf22 "6:45"}, {\cf22 "7:12"}, {\cf22 "7:39"}, {\cf22 "8:06"}, {\cf22 "8:33"}, {\cf22 "9:00"}, {\cf22 "9:42"}, {\cf22 "10:09"}],\par
00305     {\cf22 "Foothill Drive"} : [{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"},{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}], \par
00306     {\cf22 "TriCollege/Mercy"} : [{\cf22 "9:16"},{\cf22 "9:43"}, {\cf22 "10:25"}, {\cf22 "10:52"}, {\cf22 "11:19"}, {\cf22 "11:46"}, {\cf22 "12:13"}, {\cf22 "12:40"}, {\cf22 "1:07"}, {\cf22 "1:49"}, \par
00307                             {\cf22 "2:16"}, {\cf22 "2:43"},{\cf22 "3:10"}, {\cf22 "3:52"}, {\cf22 "4:24"}, {\cf22 "4:51"},{\cf22 "5:18"}, {\cf22 "5:45"}, {\cf22 "6:27"}, {\cf22 "6:54"}, {\cf22 "7:21"}, \par
00308                             {\cf22 "7:48"}, {\cf22 "8:15"}, {\cf22 "8:42"}, {\cf22 "9:09"}, {\cf22 "9:51"}, {\cf22 "REQ:"}], \par
00309     {\cf22 "G Street South"} : [{\cf22 "9:19"}, {\cf22 "9:46"}, {\cf22 "10:28"},{\cf22 "10:55"}, {\cf22 "11:22"}, {\cf22 "11:49"}, {\cf22 "12:16"}, {\cf22 "12:43"}, {\cf22 "1:10"}, {\cf22 "1:52"}, \par
00310                         {\cf22 "2:19"}, {\cf22 "2:46"}, {\cf22 "3:13"}, {\cf22 "3:55"},  {\cf22 "4:27"}, {\cf22 "4:54"}, {\cf22 "5:21"}, {\cf22 "5:48"}, {\cf22 "6:30"},{\cf22 "6:57"}, {\cf22 "7:24"}, \par
00311                         {\cf22 "7:51"}, {\cf22 "8:18"}, {\cf22 "8:45"}, {\cf22 "9:12"}, {\cf22 "9:54"}, {\cf22 "REQ:"}],\par
00312     {\cf22 "University Surgery Center"}:[{\cf22 "9:24"}, {\cf22 "9:51"}, {\cf22 "10:33"}, {\cf22 "11:00"}, {\cf22 "11:27"}, {\cf22 "11:54"}, {\cf22 "12:21"}, {\cf22 "12:48"},{\cf22 "1:15"}, \par
00313                                 {\cf22 "1:57"}, {\cf22 "2:24"}, {\cf22 "2:51"}, {\cf22 "3:18"}, {\cf22 "4:00"}, {\cf22 "4:32"},{\cf22 "4:59"}, {\cf22 "5:26"}, {\cf22 "5:53"}, {\cf22 "6:35"}, \par
00314                                 {\cf22 "7:02"}, {\cf22 "7:29"}, {\cf22 "7:56"}, {\cf22 "8:23"}, {\cf22 "8:50"}, {\cf22 "9:17"}, {\cf22 "9:59"}, {\cf22 "REQ:"}]\par
00315 \}\par
00316 \par
00317 yosemite_express_stops_keys = [{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, \par
00318                                {\cf22 "University Transit Center"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}]\par
00319 \par
00320 yosemite_express_stops_values = [[{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}], \par
00321                                  [{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}], [{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}], \par
00322                                  [{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}], [{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}], \par
00323                                  [{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}], [{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}], \par
00324                                  [{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}], [{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}], \par
00325                                  [{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}]]\par
00326 \par
00327 {\cf20 #used to print keys and values as a list of each dictionary}\par
00328 {\cf20 #print(G_line_stops.values())}\par
00329 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
routedata.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v routedata.cpp}
{\xe \v routedata.cpp}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
routedata.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
search.py File Reference\par \pard\plain 
{\tc\tcl2 \v search.py}
{\xe \v search.py}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b search}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.validatePlaceq1} (target, start, end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.validatePlaceq2} (target, start, end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.validateTime} (input_time)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.dict_binary_search} (name, target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.findBusTaken} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.busGoStops} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.findBusGo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.findshortestBus} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.tz_LA} = pytz.timezone('America/Los_Angeles')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.datetime_LA} = datetime.now({\b tz_LA})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b search.placeFoundq1} = False\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b search.placeFoundq2} = False\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.q1} = input("Where would you like to go?: ")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.q2} = input("Where are you currently located?: ")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b search.named_stops} = \{"Bobcat Express": bobcat_express_stops, "C1": C1_stops, "C2": C2_stops, "E1": E1_stops, "E2": E2_stops, "Fastcat": Fastcat_stops, "Fastcat 2": Fastcat2_stops, "G Line": G_line_stops, "Yosemite Express" : yosemite_express_stops\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b search.bus_names} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b search.possible_buses} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b search.possible_busnames} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b search.possible_distances} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b search.shortest_stops} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b search.busGo_stops} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b search.distances_dict} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dict {\b search.shortestnames_stops} = \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b search.distances_list} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.q3} = input("What time would you like to arrive by? Enter a time (Hour:Minute:Second format): ")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.client} = ORS(api_key='5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.potential_buses} = set()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b search.unique_list} = list({\b potential_buses})\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
search.py\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 import} time\par
00002 {\cf20 #start_time = time.time()}\par
00003 {\cf17 from} datetime {\cf17 import} datetime\par
00004 {\cf17 import} pytz\par
00005 tz_LA = pytz.timezone({\cf22 'America/Los_Angeles'})\par
00006 datetime_LA = datetime.now(tz_LA)\par
00007 \par
00008 {\cf17 from} route_datatypes {\cf17 import}*\par
00009 \par
00010 placeFoundq1 = {\cf17 False}\par
00011 placeFoundq2 = {\cf17 False}\par
00012 {\cf17 def }validatePlaceq1(target, start, end):\par
00013     places.sort()\par
00014     {\cf17 global} placeFoundq1\par
00015     {\cf19 if} (start > end):\par
00016         placeFoundq1 = {\cf17 False}\par
00017         {\cf19 return} placeFoundq1\par
00018     middle = (start + end) // 2\par
00019     {\cf19 if} (places[middle] == target):\par
00020         placeFoundq1 = {\cf17 True}\par
00021         {\cf19 return} placeFoundq1\par
00022     {\cf19 elif} (places[middle] > target):\par
00023         {\cf19 return} validatePlaceq1(target, start, middle - 1)\par
00024     {\cf19 else}:\par
00025         {\cf19 return} validatePlaceq1(target, middle + 1, end)\par
00026     \par
00027 {\cf17 def }validatePlaceq2(target, start, end):\par
00028     places.sort()\par
00029     {\cf17 global} placeFoundq2\par
00030     {\cf19 if} (start > end):\par
00031         placeFoundq2 = {\cf17 False}\par
00032         {\cf19 return} placeFoundq2\par
00033     middle = (start + end) // 2\par
00034     {\cf19 if} (places[middle] == target):\par
00035         placeFoundq2 = {\cf17 True}\par
00036         {\cf19 return} placeFoundq2\par
00037     {\cf19 elif} (places[middle] > target):\par
00038         {\cf19 return} validatePlaceq2(target, start, middle - 1)\par
00039     {\cf19 else}:\par
00040         {\cf19 return} validatePlaceq2(target, middle + 1, end)\par
00041 \par
00042 {\cf17 def }validateTime(input_time):\par
00043     {\cf17 global} valid_time\par
00044     {\cf19 try}:\par
00045         parsed_time = datetime.strptime(input_time, {\cf22 '%H:%M:%S'})\par
00046         {\cf19 if} 0 <= parsed_time.hour < 24 {\cf19 and} 0 <= parsed_time.minute < 60 {\cf19 and} 0 <= parsed_time.second < 60:\par
00047             valid_time = {\cf17 True}\par
00048         {\cf19 else}:\par
00049             valid_time = {\cf17 False}\par
00050     {\cf19 except} ValueError:\par
00051         valid_time = {\cf17 False}\par
00052 \par
00053     \par
00054 \par
00055 q1 = input({\cf22 "Where would you like to go?: "})\par
00056 validatePlaceq1(q1, 0, len(places) - 1)\par
00057 \par
00058 {\cf19 while} {\cf17 True}:\par
00059     {\cf19 if} (placeFoundq1 == {\cf17 False}):\par
00060         print({\cf22 "Invalid location"})\par
00061         q1 = input({\cf22 '''Where would you like to go?: }\par
00062 {\cf22         R Street Village Apts, El Redondo Dr, Compass Pointe Apts, Merced College The Bus Terminal, M St. At Bellevue RD, University Transit Center, Promenade Center, }\par
00063 {\cf22         Merced Mall Target, Walmart on Loughborough Dr, Amtrak Station, K St. Between 18th & 19th, Merced Transpo (REQ), Rite Aid/Walgreens on G St, }\par
00064 {\cf22         El Portal Plaza & G Street, Granville Apartments, G St. & W. Alexander Ave, El Portal & G Street, Mercy Hospital/TriCollege, TriCollege/Mercy (Bus stop on G next to Tri College), }\par
00065 {\cf22         G St. & W. Alexander Ave. (Bus Stop Paul's Place), Cardella Rd. & 'M' Street (North), Foothill Drive, Cardella Rd. & 'M' Street (South), G Street South Across from Raley's (The Bus Stop),}\par
00066 {\cf22         K St. Between 18Th & 19th, Meadows Ave & Olivewood Dr (Foodmaxx), Yosemite Crossings Shopping Center, M Street Village Apartments, Ironstone Dr. & M St, }\par
00067 {\cf22         Yosemite & Cordova (Merced Physician Center), Moraga Subdivision, University Surgery Center, Cardella Rd. & 'M' Street, Cardella Rd. & 'M' Street,}\par
00068 {\cf22         K St. Between 18th & 19th, UC Merced Downtown Campus Center, Merced Transpo, G Street South\\n'''})\par
00069         validatePlaceq1(q1, 0, len(places) - 1)\par
00070     {\cf19 else}:\par
00071         {\cf19 break}\par
00072 \par
00073 q2 = input({\cf22 "Where are you currently located?: "})\par
00074     \par
00075 validatePlaceq2(q2, 0, len(places) - 1)\par
00076 {\cf19 while} {\cf17 True}:\par
00077     if(placeFoundq2 == {\cf17 False}):\par
00078         print({\cf22 "Invalid location"})\par
00079         q2 = input({\cf22 '''Where are you currently located?: }\par
00080 {\cf22         R Street Village Apts, El Redondo Dr, Compass Pointe Apts, Merced College The Bus Terminal, M St. At Bellevue RD, University Transit Center, Promenade Center, }\par
00081 {\cf22         Merced Mall Target, Walmart on Loughborough Dr, Amtrak Station, K St. Between 18th & 19th, Merced Transpo (REQ), Rite Aid/Walgreens on G St, }\par
00082 {\cf22         El Portal Plaza & G Street, Granville Apartments, G St. & W. Alexander Ave, El Portal & G Street, Mercy Hospital/TriCollege, TriCollege/Mercy (Bus stop on G next to Tri College), }\par
00083 {\cf22         G St. & W. Alexander Ave. (Bus Stop Paul's Place), Cardella Rd. & 'M' Street (North), Foothill Drive, Cardella Rd. & 'M' Street (South), G Street South Across from Raley's (The Bus Stop),}\par
00084 {\cf22         K St. Between 18Th & 19th, Meadows Ave & Olivewood Dr (Foodmaxx), Yosemite Crossings Shopping Center, M Street Village Apartments, Ironstone Dr. & M St, }\par
00085 {\cf22         Yosemite & Cordova (Merced Physician Center), Moraga Subdivision, University Surgery Center, Cardella Rd. & 'M' Street, Cardella Rd. & 'M' Street,}\par
00086 {\cf22         K St. Between 18th & 19th, UC Merced Downtown Campus Center, Merced Transpo, G Street South\\n'''})\par
00087         validatePlaceq2(q2, 0, len(places) - 1)\par
00088     {\cf19 else}:\par
00089         {\cf19 break}\par
00090 \par
00091 \par
00092     \par
00093 {\cf20 #q3 = input("What time do you want to arrive by?")}\par
00094 {\cf20 #print("Pacific time:", datetime_LA.strftime("%I:%M:%p"))}\par
00095 named_stops = \{{\cf22 "Bobcat Express"}: bobcat_express_stops, {\cf22 "C1"}: C1_stops, {\cf22 "C2"}: C2_stops, {\cf22 "E1"}: E1_stops, {\cf22 "E2"}: E2_stops, {\cf22 "Fastcat"}: Fastcat_stops, {\cf22 "Fastcat 2"}: Fastcat2_stops, {\cf22 "G Line"}: G_line_stops, {\cf22 "Yosemite Express"} : yosemite_express_stops\}\par
00096 bus_names = \{\}\par
00097 possible_buses = \{\}\par
00098 possible_busnames = []\par
00099 possible_distances = \{\}\par
00100 shortest_stops = []\par
00101 busGo_stops = \{\}\par
00102 distances_dict = \{\}\par
00103 shortestnames_stops = \{\}\par
00104 distances_list = []\par
00105 \par
00106 q3 = input({\cf22 "What time would you like to arrive by? Enter a time (Hour:Minute:Second format): "})\par
00107 validateTime(q3)\par
00108 {\cf19 while} {\cf17 True}:\par
00109     {\cf19 if} (valid_time == {\cf17 False}):\par
00110         q3 = input({\cf22 "What time would you like to arrive by? Enter a time (Hour:Minute:Second format)"})\par
00111         validateTime(q3)\par
00112     {\cf19 else}:\par
00113         {\cf19 break}\par
00114 {\cf17 def }dict_binary_search(name, target):\par
00115     sorted_names = sorted(list(name.keys()))\par
00116     low = 0 \par
00117     high = len(sorted_names) - 1 \par
00118     {\cf19 while} (low <= high): \par
00119         middle = (low + high) // 2 \par
00120         value = sorted_names[middle] \par
00121         {\cf19 if} (value < target): \par
00122             low = middle + 1 \par
00123         elif(value > target): \par
00124             high = middle - 1 \par
00125         {\cf19 else}: \par
00126             {\cf19 return} sorted_names[middle]\par
00127 \par
00128         \par
00129 {\cf17 def }findBusTaken():\par
00130     {\cf19 for} name, stop {\cf19 in} named_stops.items():\par
00131         {\cf19 if} (dict_binary_search(stop, q2) == q2):\par
00132             bus_names[name] = stop\par
00133 \par
00134 {\cf17 def }busGoStops():\par
00135     {\cf19 for} name, stop {\cf19 in} named_stops.items():\par
00136         {\cf19 if} (dict_binary_search(stop, q1) == q1):\par
00137             busGo_stops[name] = stop\par
00138             \par
00139 {\cf17 from} routingpy {\cf17 import} ORS\par
00140 {\cf17 from} pprint {\cf17 import} pprint\par
00141 client = ORS(api_key={\cf22 '5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3'})\par
00142 {\cf17 def }findBusGo():\par
00143     {\cf17 global} possible_buses\par
00144     {\cf17 global} distanceBusGo\par
00145     {\cf17 global} distancepointq2_q3\par
00146     {\cf17 global} distancepointq3_q1\par
00147     {\cf17 global} totalDistance\par
00148     {\cf17 global} pointq1\par
00149     {\cf17 global} pointr1\par
00150     {\cf17 global} pointq1_coordinates\par
00151     {\cf17 global} pointq2\par
00152     {\cf17 global} pointr2\par
00153     {\cf17 global} pointq2_coordinates\par
00154     {\cf17 global} pointq3\par
00155     {\cf17 global} pointq3_coordinates\par
00156     {\cf20 #when the stop you want to go to is not found in the stops of the bus you took, code checks if the other stops on the bus you took are found in other busses, if stop found in other buses, adds name of the buss to possible buses list}\par
00157     {\cf17 global} takenBusStops\par
00158     {\cf19 for} name, stop2 {\cf19 in} bus_names.items():\par
00159         {\cf19 for} j2 {\cf19 in} stop2:\par
00160             takenBusStops = j2\par
00161             {\cf19 for} name1, stop3 {\cf19 in} busGo_stops.items():\par
00162                 {\cf19 for} j3 {\cf19 in} stop3:\par
00163                     {\cf19 if} (dict_binary_search(stop3, takenBusStops) == j3):\par
00164                         pointq1_coordinates = (geo_pyPlacesCoords[places.index(q1)])  {\cf20 #where wanna go}\par
00165                         pointq2_coordinates = (geo_pyPlacesCoords[places.index(q2)])  {\cf20 # where currently located}\par
00166                         pointq3_coordinates = (geo_pyPlacesCoords[places.index(takenBusStops)]) {\cf20 #coordinates of similar bus stop}\par
00167                         {\cf20 #coords = [pointq1_coordinates, pointq2_coordinates, pointq3_coordinates]}\par
00168                         route = client.directions(locations= (pointq2_coordinates, pointq3_coordinates, pointq1_coordinates), profile={\cf22 "driving-car"})\par
00169                         possible_distances[route.distance] = j3\par
00170                         possible_busnames.append(name)\par
00171                         shortest_stops.append(j3)\par
00172                         possible_buses[j3] = name1                                     \par
00173 {\cf17 def }findshortestBus():\par
00174     {\cf17 global} pointq4\par
00175     {\cf17 global} pointq5\par
00176     min_distance = min(possible_distances.keys())\par
00177     {\cf17 global} bus_stop\par
00178     {\cf17 global} b_name\par
00179     {\cf17 global} index \par
00180     {\cf17 global} min_stop\par
00181     \par
00182     min_stop = possible_distances[min_distance]\par
00183     {\cf19 for} stop, route {\cf19 in} possible_buses.items():\par
00184         {\cf17 global} min_bus\par
00185         {\cf19 if} (dict_binary_search(possible_buses, min_stop) == stop): {\cf20 #check if bianry vs linear faster here}\par
00186             min_bus = route\par
00187             {\cf19 break}   \par
00188     \par
00189 \par
00190 \par
00191 findBusTaken()\par
00192 busGoStops()\par
00193 findBusGo()\par
00194 findshortestBus()\par
00195 {\cf20 #print(possible_distances)}\par
00196 {\cf20 #print(possible_busnames)}\par
00197 print(possible_buses)\par
00198 potential_buses = set()\par
00199 {\cf19 if} (min_stop == q2 {\cf19 or} min_stop == q1):\par
00200     print(f{\cf22 'Take \{min_bus\} to \{q1\}'})\par
00201 {\cf19 else}:\par
00202     {\cf19 for} name, stop {\cf19 in} bus_names.items():\par
00203         {\cf19 if} (dict_binary_search(stop, q2) == q2 {\cf19 and} dict_binary_search(stop, min_stop) == min_stop):\par
00204             potential_buses.add(name)\par
00205     unique_list = list(potential_buses)\par
00206     print(f{\cf22 'Take \{", ".join(potential_buses)\} to \{min_stop\} then take \{min_bus\} to \{q1\}'})\par
00207 \par
00208 {\cf20 #print("Process finished --- %s seconds ---" % (time.time() - start_time))}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stops_data.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v stops_data.cpp}
{\xe \v stops_data.cpp}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stops_data.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for stops_data.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "stops__data_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:stops_data.cpp}
{\xe \v stops_data.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b stops_data.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stops_data.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "stops_data.h"}\par
00002 \par
00003 {\cf18 int} main()\{\par
00004     std::cout << bobcat_express_stops_keys.getsize() << std::endl;\par
00005     std::cout << bobcat_express_stops_values.getsize() << std::endl;\par
00006 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stops_data.h File Reference\par \pard\plain 
{\tc\tcl2 \v stops_data.h}
{\xe \v stops_data.h}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "ArrayList.h"}\par
{\f2 #include "HashTable.h"}\par
{\f2 #include "LinkedList.h"}\par
{\f2 #include <ostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for stops_data.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "stops__data_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "stops__data_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b bobcat_table} ("Bobcat Express", {\b bobcat_express_stops_keys})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b C1_table} ("C1", {\b C1_stops_keys})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b C2_table} ("C2", {\b C2_stops_keys})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b E1_table} ("E1", {\b E1_stops_keys})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b E2_table} ("E2", {\b E2_stops_keys})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b Fastcat_table} ("Fastcat", {\b Fastcat_stops_keys})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b Fastcat2_table} ("Fastcat 2", Fastcat_stops_keys)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b G_line_table} ("G Line", {\b G_line_stops_keys})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HashTable}< std::string > {\b yosemite_express_table} ("Yosemite Express", {\b yosemite_express_stops_keys})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b places}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b geo_places}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b bus_names} = \{"Bobcat Express", "C1", "C2", "E1", "E2", "Fastcat", "Fastcat 2", "G Line", "Yosemite Express"\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b bobcat_express_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b bobcat_express_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b C1_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b C1_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b C2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b C2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b E1_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b E1_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b E2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b E2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b Fastcat_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b Fastcat_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b Fastcat2_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b Fastcat2_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b G_line_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b G_line_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::string > {\b yosemite_express_stops_keys}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< std::list< std::string > > {\b yosemite_express_stops_values}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArrayList}< {\b HashTable}< std::string > > {\b bus_stops_tables} = \{{\b bobcat_table}, {\b C1_table}, {\b C2_table}, {\b E1_table}, {\b E2_table}, {\b Fastcat_table}, {\b Fastcat2_table}, {\b G_line_table}, {\b yosemite_express_table}\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v bobcat_table\:stops_data.h}
{\xe \v stops_data.h\:bobcat_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > bobcat_table ("Bobcat Express" , {\b bobcat_express_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C1_table\:stops_data.h}
{\xe \v stops_data.h\:C1_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > C1_table ("C1" , {\b C1_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C2_table\:stops_data.h}
{\xe \v stops_data.h\:C2_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > C2_table ("C2" , {\b C2_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E1_table\:stops_data.h}
{\xe \v stops_data.h\:E1_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > E1_table ("E1" , {\b E1_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E2_table\:stops_data.h}
{\xe \v stops_data.h\:E2_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > E2_table ("E2" , {\b E2_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Fastcat2_table\:stops_data.h}
{\xe \v stops_data.h\:Fastcat2_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > Fastcat2_table ("Fastcat 2" , {\b Fastcat_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Fastcat_table\:stops_data.h}
{\xe \v stops_data.h\:Fastcat_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > Fastcat_table ("Fastcat" , {\b Fastcat_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v G_line_table\:stops_data.h}
{\xe \v stops_data.h\:G_line_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > G_line_table ("G Line" , {\b G_line_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yosemite_express_table\:stops_data.h}
{\xe \v stops_data.h\:yosemite_express_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HashTable}< std::string > yosemite_express_table ("Yosemite Express" , {\b yosemite_express_stops_keys} )}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v bobcat_express_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:bobcat_express_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> bobcat_express_stops_keys}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "Amtrak Station"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "El Portal & G Street"}, {\cf22 "El Redondo Dr"}, \par
{\cf22 "K St. Between 18th & 19th"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Merced Mall Target"}, {\cf22 "Merced Transpo"}, \par
{\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "University Transit Center"}, {\cf22 "Walmart on Loughborough Dr"}\}\par
}
{
Definition at line {\b 44} of file {\b stops_data.h}.}\par
}
{\xe \v bobcat_express_stops_values\:stops_data.h}
{\xe \v stops_data.h\:bobcat_express_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > bobcat_express_stops_values}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "6:29"}, {\cf22 "7:09"}, {\cf22 "7:49"}, {\cf22 "8:44"}, {\cf22 "9:24"}, {\cf22 "10:04"}, {\cf22 "10:44"}, {\cf22 "12:09"}, {\cf22 "1:49"}, {\cf22 "3:17"}, {\cf22 "4:57"}, {\cf22 "6:22"}, {\cf22 "8:02"}\}, \par
                               \{{\cf22 "6:32"}, {\cf22 "7:12"}, {\cf22 "7:52"}, {\cf22 "8:47"}, {\cf22 "9:27"}, {\cf22 "10:07"}, {\cf22 "10:47"}, {\cf22 "12:12"}, {\cf22 "1:52"}, {\cf22 "3:20"}, {\cf22 "5:00"}, {\cf22 "6:25"}, {\cf22 "8:05"}\}, \par
                               \{{\cf22 "6:34"}, {\cf22 "7:14"}, {\cf22 "7:54"}, {\cf22 "8:49"}, {\cf22 "9:29"}, {\cf22 "10:09"}, {\cf22 "10:49"}, {\cf22 "12:14"}, {\cf22 "1:54"}, {\cf22 "3:22"}, {\cf22 "5:02"}, {\cf22 "6:27"}, {\cf22 "8:07"}\}, \par
                               \{{\cf22 "6:39"}, {\cf22 "7:19"}, {\cf22 "7:59"}, {\cf22 "8:54"}, {\cf22 "9:34"}, {\cf22 "10:14"}, {\cf22 "10:54"}, {\cf22 "12:19"}, {\cf22 "1:59"}, {\cf22 "3:27"}, {\cf22 "5:07"}, {\cf22 "6:32"}, {\cf22 "8:12"}\}, \par
                               \{{\cf22 "6:44"}, {\cf22 "7:24"}, {\cf22 "8:04"}, {\cf22 "8:59"}, {\cf22 "9:39"}, {\cf22 "10:19"}, {\cf22 "11:00"}, {\cf22 "12:25"}, {\cf22 "2:05"}, {\cf22 "3:33"}, {\cf22 "5:13"}, {\cf22 "6:38"}, {\cf22 "8:18"}\}, \par
                               \{{\cf22 "6:55"}, {\cf22 "7:35"}, {\cf22 "8:30"}, {\cf22 "9:10"}, {\cf22 "9:50"}, {\cf22 "10:30"}, {\cf22 "11:11"}, {\cf22 "12:51"}, {\cf22 "2:16"}, {\cf22 "3:59"}, {\cf22 "5:24"}, {\cf22 "7:04"}, {\cf22 "8:29*"}\}, \par
                               \{{\cf22 "11:20"}, {\cf22 "1:00"}, {\cf22 "2:25"}, {\cf22 "4:08"}, {\cf22 "5:33"}, {\cf22 "7:13"}\}, \{{\cf22 "11:29"}, {\cf22 "1:09"}, {\cf22 "2:37"}, {\cf22 "4:17"}, {\cf22 "5:42"}, {\cf22 "7:22"}\}, \par
                               \{{\cf22 "11:38"}, {\cf22 "1:18"}, {\cf22 "2:46"}, {\cf22 "4:26"}, {\cf22 "5:51"}, {\cf22 "7:31"}\}, \{{\cf22 "11:50"}, {\cf22 "1:30"}, {\cf22 "2:58"}, {\cf22 "4:38"}, {\cf22 "6:03"}, {\cf22 "7:43"}\}, \par
                               \{{\cf22 "11:52"}, {\cf22 "1:32"}, {\cf22 "3:00"}, {\cf22 "4:40"}, {\cf22 "6:05"}, {\cf22 "7:45"}\}, \{{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}\}, \par
                               \{{\cf22 "12:01"}, {\cf22 "1:41"}, {\cf22 "3:09"}, {\cf22 "4:49"}, {\cf22 "6:14"}, {\cf22 "7:54"}\}, \{{\cf22 "12:03"}, {\cf22 "1:43"}, {\cf22 "3:11"}, {\cf22 "4:51"}, {\cf22 "6:16"}, {\cf22 "7:56"}\}\}\par
}
{
Definition at line {\b 48} of file {\b stops_data.h}.}\par
}
{\xe \v bus_names\:stops_data.h}
{\xe \v stops_data.h\:bus_names}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> bus_names = \{"Bobcat Express", "C1", "C2", "E1", "E2", "Fastcat", "Fastcat 2", "G Line", "Yosemite Express"\}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b stops_data.h}.}\par
}
{\xe \v bus_stops_tables\:stops_data.h}
{\xe \v stops_data.h\:bus_stops_tables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<{\b HashTable}<std::string> > bus_stops_tables = \{{\b bobcat_table}, {\b C1_table}, {\b C2_table}, {\b E1_table}, {\b E2_table}, {\b Fastcat_table}, {\b Fastcat2_table}, {\b G_line_table}, {\b yosemite_express_table}\}}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 197} of file {\b stops_data.h}.}\par
}
{\xe \v C1_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:C1_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> C1_stops_keys}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "Granville Apartments"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "El Portal & G Street"}, \par
            {\cf22 "TriCollege/Mercy"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
            {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}\}\par
}
{
Definition at line {\b 61} of file {\b stops_data.h}.}\par
}
{\xe \v C1_stops_values\:stops_data.h}
{\xe \v stops_data.h\:C1_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > C1_stops_values}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "11:34"}, {\cf22 "12:45"}, {\cf22 "2:16"}, {\cf22 "3:27"}, {\cf22 "4:53"}, {\cf22 "6:04"}, {\cf22 "7:15"}, {\cf22 "8:41"}, {\cf22 "9:52"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:32"}, {\cf22 "7:43"}, {\cf22 "9:09"}, {\cf22 "10:20"}, {\cf22 "11:46"}, {\cf22 "12:57"}, {\cf22 "2:28"}, {\cf22 "3:39"}, {\cf22 "5:05"}, {\cf22 "6:16"}, {\cf22 "7:27"}, {\cf22 "8:53"}, {\cf22 "10:04"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:34"}, {\cf22 "7:45"}, {\cf22 "9:11"}, {\cf22 "10:22"}, {\cf22 "11:48"}, {\cf22 "12:59"}, {\cf22 "2:30"}, {\cf22 "3:41"}, {\cf22 "5:07"}, {\cf22 "6:18"}, {\cf22 "7:29"}, {\cf22 "8:55"}, {\cf22 "10:06"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:36"}, {\cf22 "7:47"}, {\cf22 "9:13"}, {\cf22 "10:24"}, {\cf22 "11:50"}, {\cf22 "1:01"}, {\cf22 "2:32"}, {\cf22 "3:43"}, {\cf22 "5:09"}, {\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "REQ:"}, \par
                    {\cf22 "7:09"}, {\cf22 "8:35"}, {\cf22 "9:46"}, {\cf22 "11:12"}, {\cf22 "12:23"}, {\cf22 "1:49"}, {\cf22 "3:05"}, {\cf22 "4:31"}, {\cf22 "5:42"}, {\cf22 "6:53"}, {\cf22 "8:19"}, {\cf22 "9:30"}\}, \{{\cf22 "6:39"}, {\cf22 "7:50"}, \par
                    {\cf22 "9:16"}, {\cf22 "10:27"}, {\cf22 "11:53"}, {\cf22 "1:04"}, {\cf22 "2:35"}, {\cf22 "3:46"}, {\cf22 "5:12"}, {\cf22 "6:23"}, {\cf22 "7:34"}, {\cf22 "9:00"}, {\cf22 "10:11"}, {\cf22 "REQ:"}\}, \{{\cf22 "6:45"}, {\cf22 "7:56"}, \par
                    {\cf22 "9:22"}, {\cf22 "10:33"}, {\cf22 "11:59"}, {\cf22 "1:10"}, {\cf22 "2:41"}, {\cf22 "3:52"}, {\cf22 "5:18"}, {\cf22 "6:29"}, {\cf22 "7:40"}, {\cf22 "9:06"}, {\cf22 "10:17"}, {\cf22 "REQ:"}\}, \par
                    \{{\cf22 "6:56"}, {\cf22 "8:22"}, {\cf22 "9:33"}, {\cf22 "10:59"}, {\cf22 "12:10"}, {\cf22 "1:36"}, {\cf22 "2:52"}, {\cf22 "4:18"}, {\cf22 "5:29"}, {\cf22 "6:40"}, {\cf22 "8:06"}, {\cf22 "9:17"}, {\cf22 "10:28"}\}, \par
                    \{{\cf22 "7:06"}, {\cf22 "8:32"}, {\cf22 "9:43"}, {\cf22 "11:09"}, {\cf22 "12:20"}, {\cf22 "1:46"}, {\cf22 "3:02"}, {\cf22 "4:28"}, {\cf22 "5:39"}, {\cf22 "6:50"}, {\cf22 "8:16"}, {\cf22 "9:27"}, {\cf22 "REQ:"}\}, \par
                    \{{\cf22 "7:14"}, {\cf22 "8:40"}, {\cf22 "9:51"}, {\cf22 "11:17"}, {\cf22 "12:28"}, {\cf22 "1:54"}, {\cf22 "3:10"}, {\cf22 "4:36"}, {\cf22 "5:47"}, {\cf22 "6:58"}, {\cf22 "8:24"}, {\cf22 "9:35"}, {\cf22 "REQ:"}\}\}\par
}
{
Definition at line {\b 65} of file {\b stops_data.h}.}\par
}
{\xe \v C2_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:C2_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> C2_stops_keys}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Buena Vista Dr"}, {\cf22 "Merced Mall Target"}, {\cf22 "Village Apts. 'M' Street"}, \par
                {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Foothill Drive"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}\}\par
}
{
Definition at line {\b 78} of file {\b stops_data.h}.}\par
}
{\xe \v C2_stops_values\:stops_data.h}
{\xe \v stops_data.h\:C2_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > C2_stops_values}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "6:20"}, {\cf22 "7:18"}, {\cf22 "8:31"}, {\cf22 "9:29"}, {\cf22 "10:42"}, {\cf22 "11:40"}, {\cf22 "12:53"}, {\cf22 "1:51"}, {\cf22 "2:52"}, {\cf22 "3:50"}, {\cf22 "5:03"}, {\cf22 "6:01"}, {\cf22 "7:14"}, {\cf22 "8:12"}, {\cf22 "9:25"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:23"}, {\cf22 "7:21"}, {\cf22 "8:34"}, {\cf22 "9:32"}, {\cf22 "10:45"}, {\cf22 "11:43"}, {\cf22 "12:56"}, {\cf22 "1:54"}, {\cf22 "2:55"}, {\cf22 "3:53"}, {\cf22 "5:06"}, {\cf22 "6:04"}, {\cf22 "7:17"}, {\cf22 "8:15"}, {\cf22 "9:28"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:25"}, {\cf22 "7:23"}, {\cf22 "8:36"}, {\cf22 "9:34"}, {\cf22 "10:47"}, {\cf22 "11:45"}, {\cf22 "12:58"}, {\cf22 "1:56"}, {\cf22 "2:57"}, {\cf22 "3:55"}, {\cf22 "5:08"}, {\cf22 "6:06"}, {\cf22 "7:19"}, {\cf22 "8:17"}, {\cf22 "9:30"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:32"}, {\cf22 "7:30"}, {\cf22 "8:43"}, {\cf22 "9:41"}, {\cf22 "10:54"}, {\cf22 "11:52"}, {\cf22 "1:05"}, {\cf22 "2:03"}, {\cf22 "3:04"}, {\cf22 "4:02"}, {\cf22 "5:15"}, {\cf22 "6:13"}, {\cf22 "7:26"}, {\cf22 "8:24"}, {\cf22 "9:37"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:39"}, {\cf22 "7:37"}, {\cf22 "8:50"}, {\cf22 "9:48"}, {\cf22 "11:01"}, {\cf22 "11:59"}, {\cf22 "1:12"}, {\cf22 "2:13"}, {\cf22 "3:11"}, {\cf22 "4:09"}, {\cf22 "5:22"}, {\cf22 "6:20"}, {\cf22 "7:33"}, {\cf22 "8:31"}, {\cf22 "9:44"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:41"}, {\cf22 "7:39"}, {\cf22 "8:52"}, {\cf22 "9:50"}, {\cf22 "11:03"}, {\cf22 "12:01"}, {\cf22 "1:14"}, {\cf22 "2:15"}, {\cf22 "3:13"}, {\cf22 "4:11"}, {\cf22 "5:24"}, {\cf22 "6:22"}, {\cf22 "7:35"}, {\cf22 "8:33"}, {\cf22 "9:46"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:45"}, {\cf22 "7:43"}, {\cf22 "8:56"}, {\cf22 "9:54"}, {\cf22 "11:07"}, {\cf22 "12:05"}, {\cf22 "1:18"}, {\cf22 "2:19"}, {\cf22 "3:17"}, {\cf22 "4:15"}, {\cf22 "5:28"}, {\cf22 "6:26"}, {\cf22 "7:39"}, {\cf22 "8:37"}, {\cf22 "9:50"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:48"}, {\cf22 "7:46"}, {\cf22 "8:59"}, {\cf22 "9:57"}, {\cf22 "11:10"}, {\cf22 "12:08"}, {\cf22 "1:21"}, {\cf22 "2:22"}, {\cf22 "3:20"}, {\cf22 "4:18"}, {\cf22 "5:31"}, {\cf22 "6:29"}, {\cf22 "7:42"}, {\cf22 "8:40"}, {\cf22 "9:53"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "6:51"}, {\cf22 "7:49"}, {\cf22 "9:02"}, {\cf22 "10:00"}, {\cf22 "11:13"}, {\cf22 "12:11"}, {\cf22 "1:24"}, {\cf22 "2:25"}, {\cf22 "3:23"}, {\cf22 "4:21"}, {\cf22 "5:34"}, {\cf22 "6:32"}, {\cf22 "7:45"}, {\cf22 "8:43"}, {\cf22 "9:56"}, {\cf22 "REQ:"}\}, \par
                   \{{\cf22 "7:02"}, {\cf22 "8:15"}, {\cf22 "9:13"}, {\cf22 "10:26"}, {\cf22 "11:24"}, {\cf22 "12:37"}, {\cf22 "1:35"}, {\cf22 "2:36"}, {\cf22 "3:34"}, {\cf22 "4:47"}, {\cf22 "5:45"}, {\cf22 "6:58"}, {\cf22 "7:56"}, {\cf22 "9:09"}, {\cf22 "10:07"}\}, \par
                   \{{\cf22 "7:09"}, {\cf22 "8:22"}, {\cf22 "9:20"}, {\cf22 "10:33"}, {\cf22 "11:31"}, {\cf22 "12:44"}, {\cf22 "1:42"}, {\cf22 "2:43"}\}, \{{\cf22 "7:13"}, {\cf22 "8:26"}, {\cf22 "9:24"}, {\cf22 "10:37"}, {\cf22 "11:35"}, {\cf22 "12:48"}, {\cf22 "1:46"}, {\cf22 "2:47"}, {\cf22 "3:45"}, {\cf22 "4:58"}, {\cf22 "5:56"}, {\cf22 "7:09"}, {\cf22 "8:07"}, {\cf22 "9:20"}, {\cf22 "REQ:"}\}\}\par
}
{
Definition at line {\b 81} of file {\b stops_data.h}.}\par
}
{\xe \v E1_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:E1_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> E1_stops_keys}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "University Transit Center"}, {\cf22 "G Street South"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced Mall Target"}, \par
                 {\cf22 "Rite Aid/Walgreens"}, {\cf22 "Yosemite Crossings Shopping Center"}\}\par
}
{
Definition at line {\b 95} of file {\b stops_data.h}.}\par
}
{\xe \v E1_stops_values\:stops_data.h}
{\xe \v stops_data.h\:E1_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > E1_stops_values}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}\}, \par
                   \{{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}\}, \par
                   \{{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}\}, \par
                   \{{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}\}, \par
                   \{{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}\}, \par
                   \{{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}\}, \par
                   \{{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}\}, \par
                   \{{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}\}, \par
                   \{{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}\}\}\par
}
{
Definition at line {\b 98} of file {\b stops_data.h}.}\par
}
{\xe \v E2_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:E2_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> E2_stops_keys}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "University Transit Center"}, {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced Mall Target"}, \par
                 {\cf22 "M Street Village Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}\}\par
}
{
Definition at line {\b 110} of file {\b stops_data.h}.}\par
}
{\xe \v E2_stops_values\:stops_data.h}
{\xe \v stops_data.h\:E2_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > E2_stops_values}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}\}, \par
                   \{{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}\}, \par
                   \{{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}\}, \par
                   \{{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}\}, \par
                   \{{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}\}, \par
                   \{{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}\}, \par
                   \{{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}\}, \par
                   \{{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}\}, \par
                   \{{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}\}\}\par
}
{
Definition at line {\b 113} of file {\b stops_data.h}.}\par
}
{\xe \v Fastcat2_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:Fastcat2_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> Fastcat2_stops_keys}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy  "}, {\cf22 "Cardella Rd. & 'M' Street"},\par
                       {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}\}\par
}
{
Definition at line {\b 145} of file {\b stops_data.h}.}\par
}
{\xe \v Fastcat2_stops_values\:stops_data.h}
{\xe \v stops_data.h\:Fastcat2_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > Fastcat2_stops_values}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, \par
                          {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}\}, \par
                          \{{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}\}, \par
                          \{{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}\}, \par
                          \{{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, \par
                           {\cf22 "9:08"}, {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}\}, \par
                           \{{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}\}, \par
                           \{{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}\}, \par
                           \{{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"}\}, \par
                           \{{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}\}, \par
                           \{{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}\}\}\par
}
{
Definition at line {\b 149} of file {\b stops_data.h}.}\par
}
{\xe \v Fastcat_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:Fastcat_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> Fastcat_stops_keys}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy  "}, {\cf22 "Cardella Rd. & 'M' Street"},\par
                       {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}\}\par
}
{
Definition at line {\b 126} of file {\b stops_data.h}.}\par
}
{\xe \v Fastcat_stops_values\:stops_data.h}
{\xe \v stops_data.h\:Fastcat_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > Fastcat_stops_values}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, \par
                          {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}\}, \par
                          \{{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}\}, \par
                          \{{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}\}, \par
                          \{{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, \par
                           {\cf22 "9:08"}, {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}\}, \par
                           \{{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}\}, \par
                           \{{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}\}, \par
                           \{{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"}\}, \par
                           \{{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}\}, \par
                           \{{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}\}\}\par
}
{
Definition at line {\b 130} of file {\b stops_data.h}.}\par
}
{\xe \v G_line_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:G_line_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> G_line_stops_keys}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
                     {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}\}\par
}
{
Definition at line {\b 164} of file {\b stops_data.h}.}\par
}
{\xe \v G_line_stops_values\:stops_data.h}
{\xe \v stops_data.h\:G_line_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > G_line_stops_values}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}\}, \par
                       \{{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}\}, \par
                       \{{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}\}, \par
                       \{{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}\}, \par
                       \{{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}\}, \par
                       \{{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}\}, \par
                       \{{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}\}, \par
                       \{{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}\}, \par
                       \{{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}\}, \par
                       \{{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}\}\}\par
}
{
Definition at line {\b 168} of file {\b stops_data.h}.}\par
}
{\xe \v geo_places\:stops_data.h}
{\xe \v stops_data.h\:geo_places}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> geo_places}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "355 West 24th Street, Merced, CA"}, {\cf22 "1835, Buena Vista Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "595, Glendon Court, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "4298, Lasalle Drive, The Meadows At Bellevue Ranch West, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "1220 Daybreak Dr, Merced, CA 95348"}, {\cf22 "19, El Portal Drive, Merced, Merced County, California, 95340, United States"},\par
                {\cf22 "3706 El Redondo Drive"}, {\cf22 "4486 Everson Ct, Merced, CA 95348"}, {\cf22 "80, Emerald Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "59, Sandy Lane, Merced, Merced County, California, 95340, United States"}, {\cf22 "3514 G St, Merced, CA 95340"}, {\cf22 "2962, Willowbrook Drive, Merced, Merced County, California, 95348, United States"}, \par
                {\cf22 "621 M St, Merced, CA 95348"}, {\cf22 "415, West 18th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "586 Barclay Way, Merced, CA 95348"}, {\cf22 "597, Collins Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "1223, Devonwood Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "614, Stanford Court, Merced, Merced County, California, 95348, United States"}, {\cf22 "3304, Santa Rosa Court, Merced, Merced County, California, 95348, United States"},\par
                {\cf22 "710, West 16th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "2397, Explorador Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "755, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "3892, R Street, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "Pizza Factory, G Street, Merced, Merced County, California, 98348, United States"},\par
                {\cf22 "315 Mercy Avenue, Merced, CA, USA"}, {\cf22 "3601 G Street, Merced, CA"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgical & Dianogstic Center"}, {\cf22 "2897 Bellevue Rd, Merced, CA 95340"},\par
                {\cf22 "3300, M Street, Merced, Merced County, California, 95348, United States"}, {\cf22 "Walmart 3055 Loughborough Drive"}, {\cf22 "Doctors Carreon Adrian Md, 410, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "Soccer Field (Varsity) G Street"}\}\par
}
{
Definition at line {\b 35} of file {\b stops_data.h}.}\par
}
{\xe \v places\:stops_data.h}
{\xe \v stops_data.h\:places}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> places}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "Amtrak Station"}, {\cf22 "Buena Vista Dr"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}, {\cf22 "Compass Pointe Apts"}, \par
          {\cf22 "El Portal & G Street"}, {\cf22 "El Redondo Dr"}, {\cf22 "Foothill Drive"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}, \par
          {\cf22 "G Street South"}, {\cf22 "Granville Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "M St. At Bellevue RD"}, \par
          {\cf22 "M Street Village Apartments"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Merced Mall Target"}, {\cf22 "Merced Transpo"}, {\cf22 "Moraga Subdivision"}, \par
          {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "TriCollege/Mercy"}, {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, \par
          {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgery Center"}, {\cf22 "University Transit Center"}, {\cf22 "Village Apts. 'M' Street"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, \par
          {\cf22 "Yosemite Crossings Shopping Center"}\}\par
}
{
Definition at line {\b 28} of file {\b stops_data.h}.}\par
}
{\xe \v yosemite_express_stops_keys\:stops_data.h}
{\xe \v stops_data.h\:yosemite_express_stops_keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::string> yosemite_express_stops_keys}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, \par
                               {\cf22 "University Transit Center"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}\}\par
}
{
Definition at line {\b 183} of file {\b stops_data.h}.}\par
}
{\xe \v yosemite_express_stops_values\:stops_data.h}
{\xe \v stops_data.h\:yosemite_express_stops_values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ArrayList}<std::list<std::string> > yosemite_express_stops_values}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\{{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}\}, \par
                                 \{{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}\}, \{{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}\}, \par
                                 \{{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}\}, \{{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}\}, \par
                                 \{{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}\}, \{{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}\}, \par
                                 \{{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}\}, \{{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}\}, \par
                                 \{{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}\}\}\par
}
{
Definition at line {\b 187} of file {\b stops_data.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stops_data.h\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef STOPS_DATA}\par
00002 {\cf21 #define STOPS_DATA}\par
00003 \par
00004 {\cf21 #include <iostream>}\par
00005 {\cf21 #include "ArrayList.h"}\par
00006 {\cf21 #include "HashTable.h"}\par
00007 {\cf21 #include "LinkedList.h"}\par
00008 \par
00009 {\cf21 #include <ostream>}\par
00010 \par
00011 \par
00012     {\cf20 /*template <class T>}\par
00013 {\cf20     // Helper function to append hashes}\par
00014 {\cf20     void appendHashes(HashTable<T>& table, ArrayList<T> keys, ArrayList<std::list<T>> values) \{}\par
00015 {\cf20         for (int i = 0; i < table.getBuckets(); i++) \{}\par
00016 {\cf20             table.appendHash(keys[i], values[i]);}\par
00017 {\cf20         \}}\par
00018 {\cf20     \}}\par
00019 {\cf20     //helper function to append hashes for Hashtable}\par
00020 {\cf20     template <class T>}\par
00021 {\cf20     void appendHashes(HashTable<T>& table, ArrayList<T> keys, ArrayList<HashTable<T>> values) \{}\par
00022 {\cf20         for (int i = 0; i < table.getBuckets(); i++) \{}\par
00023 {\cf20             table.appendHash(keys[i], values[i]);}\par
00024 {\cf20         \}}\par
00025 {\cf20     \}}\par
00026 {\cf20     */}\par
00027 \par
00028 ArrayList<std::string> places = \{{\cf22 "Amtrak Station"}, {\cf22 "Buena Vista Dr"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}, {\cf22 "Compass Pointe Apts"}, \par
00029           {\cf22 "El Portal & G Street"}, {\cf22 "El Redondo Dr"}, {\cf22 "Foothill Drive"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}, \par
00030           {\cf22 "G Street South"}, {\cf22 "Granville Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "M St. At Bellevue RD"}, \par
00031           {\cf22 "M Street Village Apartments"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Merced Mall Target"}, {\cf22 "Merced Transpo"}, {\cf22 "Moraga Subdivision"}, \par
00032           {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "TriCollege/Mercy"}, {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, \par
00033           {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgery Center"}, {\cf22 "University Transit Center"}, {\cf22 "Village Apts. 'M' Street"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, \par
00034           {\cf22 "Yosemite Crossings Shopping Center"}\};  \par
00035 ArrayList<std::string> geo_places = \{{\cf22 "355 West 24th Street, Merced, CA"}, {\cf22 "1835, Buena Vista Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "595, Glendon Court, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "4298, Lasalle Drive, The Meadows At Bellevue Ranch West, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "1220 Daybreak Dr, Merced, CA 95348"}, {\cf22 "19, El Portal Drive, Merced, Merced County, California, 95340, United States"},\par
00036                 {\cf22 "3706 El Redondo Drive"}, {\cf22 "4486 Everson Ct, Merced, CA 95348"}, {\cf22 "80, Emerald Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "59, Sandy Lane, Merced, Merced County, California, 95340, United States"}, {\cf22 "3514 G St, Merced, CA 95340"}, {\cf22 "2962, Willowbrook Drive, Merced, Merced County, California, 95348, United States"}, \par
00037                 {\cf22 "621 M St, Merced, CA 95348"}, {\cf22 "415, West 18th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "586 Barclay Way, Merced, CA 95348"}, {\cf22 "597, Collins Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "1223, Devonwood Drive, Merced, Merced County, California, 95348, United States"}, {\cf22 "614, Stanford Court, Merced, Merced County, California, 95348, United States"}, {\cf22 "3304, Santa Rosa Court, Merced, Merced County, California, 95348, United States"},\par
00038                 {\cf22 "710, West 16th Street, Merced, Merced County, California, 95340, United States"}, {\cf22 "2397, Explorador Drive, Merced, Merced County, California, 95340, United States"}, {\cf22 "755, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "3892, R Street, Bellevue Ranch, Bellview Ranch, Merced, Merced County, California, 95348, United States"}, {\cf22 "Pizza Factory, G Street, Merced, Merced County, California, 98348, United States"},\par
00039                 {\cf22 "315 Mercy Avenue, Merced, CA, USA"}, {\cf22 "3601 G Street, Merced, CA"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "University Surgical & Dianogstic Center"}, {\cf22 "2897 Bellevue Rd, Merced, CA 95340"},\par
00040                 {\cf22 "3300, M Street, Merced, Merced County, California, 95348, United States"}, {\cf22 "Walmart 3055 Loughborough Drive"}, {\cf22 "Doctors Carreon Adrian Md, 410, East Yosemite Avenue, Merced, Merced County, California, 95340, United States"}, {\cf22 "Soccer Field (Varsity) G Street"}\};\par
00041 \par
00042 ArrayList<std::string> bus_names = \{{\cf22 "Bobcat Express"}, {\cf22 "C1"}, {\cf22 "C2"}, {\cf22 "E1"}, {\cf22 "E2"}, {\cf22 "Fastcat"}, {\cf22 "Fastcat 2"}, {\cf22 "G Line"}, {\cf22 "Yosemite Express"}\};\par
00043 \par
00044 ArrayList<std::string> bobcat_express_stops_keys = \{{\cf22 "Amtrak Station"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "El Portal & G Street"}, {\cf22 "El Redondo Dr"}, \par
00045 {\cf22 "K St. Between 18th & 19th"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Merced Mall Target"}, {\cf22 "Merced Transpo"}, \par
00046 {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "University Transit Center"}, {\cf22 "Walmart on Loughborough Dr"}\};\par
00047 \par
00048 ArrayList<std::list<std::string>> bobcat_express_stops_values = \{\{{\cf22 "6:29"}, {\cf22 "7:09"}, {\cf22 "7:49"}, {\cf22 "8:44"}, {\cf22 "9:24"}, {\cf22 "10:04"}, {\cf22 "10:44"}, {\cf22 "12:09"}, {\cf22 "1:49"}, {\cf22 "3:17"}, {\cf22 "4:57"}, {\cf22 "6:22"}, {\cf22 "8:02"}\}, \par
00049                                \{{\cf22 "6:32"}, {\cf22 "7:12"}, {\cf22 "7:52"}, {\cf22 "8:47"}, {\cf22 "9:27"}, {\cf22 "10:07"}, {\cf22 "10:47"}, {\cf22 "12:12"}, {\cf22 "1:52"}, {\cf22 "3:20"}, {\cf22 "5:00"}, {\cf22 "6:25"}, {\cf22 "8:05"}\}, \par
00050                                \{{\cf22 "6:34"}, {\cf22 "7:14"}, {\cf22 "7:54"}, {\cf22 "8:49"}, {\cf22 "9:29"}, {\cf22 "10:09"}, {\cf22 "10:49"}, {\cf22 "12:14"}, {\cf22 "1:54"}, {\cf22 "3:22"}, {\cf22 "5:02"}, {\cf22 "6:27"}, {\cf22 "8:07"}\}, \par
00051                                \{{\cf22 "6:39"}, {\cf22 "7:19"}, {\cf22 "7:59"}, {\cf22 "8:54"}, {\cf22 "9:34"}, {\cf22 "10:14"}, {\cf22 "10:54"}, {\cf22 "12:19"}, {\cf22 "1:59"}, {\cf22 "3:27"}, {\cf22 "5:07"}, {\cf22 "6:32"}, {\cf22 "8:12"}\}, \par
00052                                \{{\cf22 "6:44"}, {\cf22 "7:24"}, {\cf22 "8:04"}, {\cf22 "8:59"}, {\cf22 "9:39"}, {\cf22 "10:19"}, {\cf22 "11:00"}, {\cf22 "12:25"}, {\cf22 "2:05"}, {\cf22 "3:33"}, {\cf22 "5:13"}, {\cf22 "6:38"}, {\cf22 "8:18"}\}, \par
00053                                \{{\cf22 "6:55"}, {\cf22 "7:35"}, {\cf22 "8:30"}, {\cf22 "9:10"}, {\cf22 "9:50"}, {\cf22 "10:30"}, {\cf22 "11:11"}, {\cf22 "12:51"}, {\cf22 "2:16"}, {\cf22 "3:59"}, {\cf22 "5:24"}, {\cf22 "7:04"}, {\cf22 "8:29*"}\}, \par
00054                                \{{\cf22 "11:20"}, {\cf22 "1:00"}, {\cf22 "2:25"}, {\cf22 "4:08"}, {\cf22 "5:33"}, {\cf22 "7:13"}\}, \{{\cf22 "11:29"}, {\cf22 "1:09"}, {\cf22 "2:37"}, {\cf22 "4:17"}, {\cf22 "5:42"}, {\cf22 "7:22"}\}, \par
00055                                \{{\cf22 "11:38"}, {\cf22 "1:18"}, {\cf22 "2:46"}, {\cf22 "4:26"}, {\cf22 "5:51"}, {\cf22 "7:31"}\}, \{{\cf22 "11:50"}, {\cf22 "1:30"}, {\cf22 "2:58"}, {\cf22 "4:38"}, {\cf22 "6:03"}, {\cf22 "7:43"}\}, \par
00056                                \{{\cf22 "11:52"}, {\cf22 "1:32"}, {\cf22 "3:00"}, {\cf22 "4:40"}, {\cf22 "6:05"}, {\cf22 "7:45"}\}, \{{\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}, {\cf22 "REQ:"}\}, \par
00057                                \{{\cf22 "12:01"}, {\cf22 "1:41"}, {\cf22 "3:09"}, {\cf22 "4:49"}, {\cf22 "6:14"}, {\cf22 "7:54"}\}, \{{\cf22 "12:03"}, {\cf22 "1:43"}, {\cf22 "3:11"}, {\cf22 "4:51"}, {\cf22 "6:16"}, {\cf22 "7:56"}\}\};\par
00058 \par
00059 HashTable<std::string> bobcat_table({\cf22 "Bobcat Express"}, bobcat_express_stops_keys);\par
00060 \par
00061 ArrayList<std::string> C1_stops_keys = \{{\cf22 "Granville Apartments"}, {\cf22 "G St. & W. Alexander Ave"}, {\cf22 "Rite Aid/Walgreens"}, {\cf22 "El Portal & G Street"}, \par
00062             {\cf22 "TriCollege/Mercy"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
00063             {\cf22 "TriCollege/Mercy (Bus stop on G next to Tri College)"}, {\cf22 "G St. & W. Alexander Ave. (Bus Stop Paul's Place)"}\};\par
00064 \par
00065 ArrayList<std::list<std::string>> C1_stops_values = \{\{{\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "11:34"}, {\cf22 "12:45"}, {\cf22 "2:16"}, {\cf22 "3:27"}, {\cf22 "4:53"}, {\cf22 "6:04"}, {\cf22 "7:15"}, {\cf22 "8:41"}, {\cf22 "9:52"}, {\cf22 "REQ:"}\}, \par
00066                    \{{\cf22 "6:32"}, {\cf22 "7:43"}, {\cf22 "9:09"}, {\cf22 "10:20"}, {\cf22 "11:46"}, {\cf22 "12:57"}, {\cf22 "2:28"}, {\cf22 "3:39"}, {\cf22 "5:05"}, {\cf22 "6:16"}, {\cf22 "7:27"}, {\cf22 "8:53"}, {\cf22 "10:04"}, {\cf22 "REQ:"}\}, \par
00067                    \{{\cf22 "6:34"}, {\cf22 "7:45"}, {\cf22 "9:11"}, {\cf22 "10:22"}, {\cf22 "11:48"}, {\cf22 "12:59"}, {\cf22 "2:30"}, {\cf22 "3:41"}, {\cf22 "5:07"}, {\cf22 "6:18"}, {\cf22 "7:29"}, {\cf22 "8:55"}, {\cf22 "10:06"}, {\cf22 "REQ:"}\}, \par
00068                    \{{\cf22 "6:36"}, {\cf22 "7:47"}, {\cf22 "9:13"}, {\cf22 "10:24"}, {\cf22 "11:50"}, {\cf22 "1:01"}, {\cf22 "2:32"}, {\cf22 "3:43"}, {\cf22 "5:09"}, {\cf22 "6:20"}, {\cf22 "7:31"}, {\cf22 "8:57"}, {\cf22 "10:08"}, {\cf22 "REQ:"}, \par
00069                     {\cf22 "7:09"}, {\cf22 "8:35"}, {\cf22 "9:46"}, {\cf22 "11:12"}, {\cf22 "12:23"}, {\cf22 "1:49"}, {\cf22 "3:05"}, {\cf22 "4:31"}, {\cf22 "5:42"}, {\cf22 "6:53"}, {\cf22 "8:19"}, {\cf22 "9:30"}\}, \{{\cf22 "6:39"}, {\cf22 "7:50"}, \par
00070                     {\cf22 "9:16"}, {\cf22 "10:27"}, {\cf22 "11:53"}, {\cf22 "1:04"}, {\cf22 "2:35"}, {\cf22 "3:46"}, {\cf22 "5:12"}, {\cf22 "6:23"}, {\cf22 "7:34"}, {\cf22 "9:00"}, {\cf22 "10:11"}, {\cf22 "REQ:"}\}, \{{\cf22 "6:45"}, {\cf22 "7:56"}, \par
00071                     {\cf22 "9:22"}, {\cf22 "10:33"}, {\cf22 "11:59"}, {\cf22 "1:10"}, {\cf22 "2:41"}, {\cf22 "3:52"}, {\cf22 "5:18"}, {\cf22 "6:29"}, {\cf22 "7:40"}, {\cf22 "9:06"}, {\cf22 "10:17"}, {\cf22 "REQ:"}\}, \par
00072                     \{{\cf22 "6:56"}, {\cf22 "8:22"}, {\cf22 "9:33"}, {\cf22 "10:59"}, {\cf22 "12:10"}, {\cf22 "1:36"}, {\cf22 "2:52"}, {\cf22 "4:18"}, {\cf22 "5:29"}, {\cf22 "6:40"}, {\cf22 "8:06"}, {\cf22 "9:17"}, {\cf22 "10:28"}\}, \par
00073                     \{{\cf22 "7:06"}, {\cf22 "8:32"}, {\cf22 "9:43"}, {\cf22 "11:09"}, {\cf22 "12:20"}, {\cf22 "1:46"}, {\cf22 "3:02"}, {\cf22 "4:28"}, {\cf22 "5:39"}, {\cf22 "6:50"}, {\cf22 "8:16"}, {\cf22 "9:27"}, {\cf22 "REQ:"}\}, \par
00074                     \{{\cf22 "7:14"}, {\cf22 "8:40"}, {\cf22 "9:51"}, {\cf22 "11:17"}, {\cf22 "12:28"}, {\cf22 "1:54"}, {\cf22 "3:10"}, {\cf22 "4:36"}, {\cf22 "5:47"}, {\cf22 "6:58"}, {\cf22 "8:24"}, {\cf22 "9:35"}, {\cf22 "REQ:"}\}\};\par
00075 \par
00076 HashTable<std::string> C1_table({\cf22 "C1"}, C1_stops_keys);\par
00077 \par
00078 ArrayList<std::string> C2_stops_keys = \{{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Buena Vista Dr"}, {\cf22 "Merced Mall Target"}, {\cf22 "Village Apts. 'M' Street"}, \par
00079                 {\cf22 "Merced College The Bus Terminal"}, {\cf22 "Cardella Rd. & 'M' Street (North)"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Foothill Drive"}, {\cf22 "Cardella Rd. & 'M' Street (South)"}\};\par
00080 \par
00081 ArrayList<std::list<std::string>> C2_stops_values = \{\{{\cf22 "6:20"}, {\cf22 "7:18"}, {\cf22 "8:31"}, {\cf22 "9:29"}, {\cf22 "10:42"}, {\cf22 "11:40"}, {\cf22 "12:53"}, {\cf22 "1:51"}, {\cf22 "2:52"}, {\cf22 "3:50"}, {\cf22 "5:03"}, {\cf22 "6:01"}, {\cf22 "7:14"}, {\cf22 "8:12"}, {\cf22 "9:25"}, {\cf22 "REQ:"}\}, \par
00082                    \{{\cf22 "6:23"}, {\cf22 "7:21"}, {\cf22 "8:34"}, {\cf22 "9:32"}, {\cf22 "10:45"}, {\cf22 "11:43"}, {\cf22 "12:56"}, {\cf22 "1:54"}, {\cf22 "2:55"}, {\cf22 "3:53"}, {\cf22 "5:06"}, {\cf22 "6:04"}, {\cf22 "7:17"}, {\cf22 "8:15"}, {\cf22 "9:28"}, {\cf22 "REQ:"}\}, \par
00083                    \{{\cf22 "6:25"}, {\cf22 "7:23"}, {\cf22 "8:36"}, {\cf22 "9:34"}, {\cf22 "10:47"}, {\cf22 "11:45"}, {\cf22 "12:58"}, {\cf22 "1:56"}, {\cf22 "2:57"}, {\cf22 "3:55"}, {\cf22 "5:08"}, {\cf22 "6:06"}, {\cf22 "7:19"}, {\cf22 "8:17"}, {\cf22 "9:30"}, {\cf22 "REQ:"}\}, \par
00084                    \{{\cf22 "6:32"}, {\cf22 "7:30"}, {\cf22 "8:43"}, {\cf22 "9:41"}, {\cf22 "10:54"}, {\cf22 "11:52"}, {\cf22 "1:05"}, {\cf22 "2:03"}, {\cf22 "3:04"}, {\cf22 "4:02"}, {\cf22 "5:15"}, {\cf22 "6:13"}, {\cf22 "7:26"}, {\cf22 "8:24"}, {\cf22 "9:37"}, {\cf22 "REQ:"}\}, \par
00085                    \{{\cf22 "6:39"}, {\cf22 "7:37"}, {\cf22 "8:50"}, {\cf22 "9:48"}, {\cf22 "11:01"}, {\cf22 "11:59"}, {\cf22 "1:12"}, {\cf22 "2:13"}, {\cf22 "3:11"}, {\cf22 "4:09"}, {\cf22 "5:22"}, {\cf22 "6:20"}, {\cf22 "7:33"}, {\cf22 "8:31"}, {\cf22 "9:44"}, {\cf22 "REQ:"}\}, \par
00086                    \{{\cf22 "6:41"}, {\cf22 "7:39"}, {\cf22 "8:52"}, {\cf22 "9:50"}, {\cf22 "11:03"}, {\cf22 "12:01"}, {\cf22 "1:14"}, {\cf22 "2:15"}, {\cf22 "3:13"}, {\cf22 "4:11"}, {\cf22 "5:24"}, {\cf22 "6:22"}, {\cf22 "7:35"}, {\cf22 "8:33"}, {\cf22 "9:46"}, {\cf22 "REQ:"}\}, \par
00087                    \{{\cf22 "6:45"}, {\cf22 "7:43"}, {\cf22 "8:56"}, {\cf22 "9:54"}, {\cf22 "11:07"}, {\cf22 "12:05"}, {\cf22 "1:18"}, {\cf22 "2:19"}, {\cf22 "3:17"}, {\cf22 "4:15"}, {\cf22 "5:28"}, {\cf22 "6:26"}, {\cf22 "7:39"}, {\cf22 "8:37"}, {\cf22 "9:50"}, {\cf22 "REQ:"}\}, \par
00088                    \{{\cf22 "6:48"}, {\cf22 "7:46"}, {\cf22 "8:59"}, {\cf22 "9:57"}, {\cf22 "11:10"}, {\cf22 "12:08"}, {\cf22 "1:21"}, {\cf22 "2:22"}, {\cf22 "3:20"}, {\cf22 "4:18"}, {\cf22 "5:31"}, {\cf22 "6:29"}, {\cf22 "7:42"}, {\cf22 "8:40"}, {\cf22 "9:53"}, {\cf22 "REQ:"}\}, \par
00089                    \{{\cf22 "6:51"}, {\cf22 "7:49"}, {\cf22 "9:02"}, {\cf22 "10:00"}, {\cf22 "11:13"}, {\cf22 "12:11"}, {\cf22 "1:24"}, {\cf22 "2:25"}, {\cf22 "3:23"}, {\cf22 "4:21"}, {\cf22 "5:34"}, {\cf22 "6:32"}, {\cf22 "7:45"}, {\cf22 "8:43"}, {\cf22 "9:56"}, {\cf22 "REQ:"}\}, \par
00090                    \{{\cf22 "7:02"}, {\cf22 "8:15"}, {\cf22 "9:13"}, {\cf22 "10:26"}, {\cf22 "11:24"}, {\cf22 "12:37"}, {\cf22 "1:35"}, {\cf22 "2:36"}, {\cf22 "3:34"}, {\cf22 "4:47"}, {\cf22 "5:45"}, {\cf22 "6:58"}, {\cf22 "7:56"}, {\cf22 "9:09"}, {\cf22 "10:07"}\}, \par
00091                    \{{\cf22 "7:09"}, {\cf22 "8:22"}, {\cf22 "9:20"}, {\cf22 "10:33"}, {\cf22 "11:31"}, {\cf22 "12:44"}, {\cf22 "1:42"}, {\cf22 "2:43"}\}, \{{\cf22 "7:13"}, {\cf22 "8:26"}, {\cf22 "9:24"}, {\cf22 "10:37"}, {\cf22 "11:35"}, {\cf22 "12:48"}, {\cf22 "1:46"}, {\cf22 "2:47"}, {\cf22 "3:45"}, {\cf22 "4:58"}, {\cf22 "5:56"}, {\cf22 "7:09"}, {\cf22 "8:07"}, {\cf22 "9:20"}, {\cf22 "REQ:"}\}\};\par
00092 \par
00093 HashTable<std::string> C2_table({\cf22 "C2"}, C2_stops_keys);\par
00094 \par
00095 ArrayList<std::string> E1_stops_keys = \{{\cf22 "University Transit Center"}, {\cf22 "G Street South"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "Walmart on Loughborough Dr"}, {\cf22 "Meadows Ave & Olivewood Dr (Foodmaxx)"}, {\cf22 "Merced Mall Target"}, \par
00096                  {\cf22 "Rite Aid/Walgreens"}, {\cf22 "Yosemite Crossings Shopping Center"}\};\par
00097 \par
00098 ArrayList<std::list<std::string>> E1_stops_values = \{\{{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}\}, \par
00099                    \{{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}\}, \par
00100                    \{{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}\}, \par
00101                    \{{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}\}, \par
00102                    \{{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}\}, \par
00103                    \{{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}\}, \par
00104                    \{{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}\}, \par
00105                    \{{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}\}, \par
00106                    \{{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}\}\};\par
00107 \par
00108 HashTable<std::string> E1_table({\cf22 "E1"}, E1_stops_keys);\par
00109 \par
00110 ArrayList<std::string> E2_stops_keys = \{{\cf22 "University Transit Center"}, {\cf22 "Promenade Center"}, {\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced Mall Target"}, \par
00111                  {\cf22 "M Street Village Apartments"}, {\cf22 "Ironstone Dr. & M St"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}\};\par
00112 \par
00113 ArrayList<std::list<std::string>> E2_stops_values = \{\{{\cf22 "8:30"}, {\cf22 "9:42"}, {\cf22 "10:39"}, {\cf22 "11:51"}, {\cf22 "12:48"}, {\cf22 "2:00"}, {\cf22 "2:57"}, {\cf22 "3:54"}, {\cf22 "4:54"}, {\cf22 "6:06"}, {\cf22 "7:03"}, {\cf22 "8:00"}, {\cf22 "9:12"}, {\cf22 "10:09"}, {\cf22 "11:06"}\}, \par
00114                    \{{\cf22 "8:39"}, {\cf22 "9:51"}, {\cf22 "10:48"}, {\cf22 "12:00"}, {\cf22 "12:57"}, {\cf22 "2:09"}, {\cf22 "3:06"}, {\cf22 "4:03"}, {\cf22 "5:03"}, {\cf22 "6:15"}, {\cf22 "7:12"}, {\cf22 "8:09"}, {\cf22 "9:21"}, {\cf22 "10:18"}\}, \par
00115                    \{{\cf22 "8:46"}, {\cf22 "9:58"}, {\cf22 "10:55"}, {\cf22 "12:07"}, {\cf22 "1:04"}, {\cf22 "2:16"}, {\cf22 "3:13"}, {\cf22 "4:10"}, {\cf22 "5:10"}, {\cf22 "6:22"}, {\cf22 "7:19"}, {\cf22 "8:16"}, {\cf22 "9:28"}, {\cf22 "10:25"}\}, \par
00116                    \{{\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}, {\cf22 "12:09"}, {\cf22 "1:06"}, {\cf22 "2:18"}, {\cf22 "3:15"}, {\cf22 "4:15"}, {\cf22 "5:12"}, {\cf22 "6:24"}, {\cf22 "7:21"}, {\cf22 "8:18"}, {\cf22 "9:30"}, {\cf22 "10:27"}\}, \par
00117                    \{{\cf22 "9:01"}, {\cf22 "10:13"}, {\cf22 "11:10"}, {\cf22 "12:22"}, {\cf22 "1:19"}, {\cf22 "2:31"}, {\cf22 "3:28"}, {\cf22 "4:28"}, {\cf22 "5:25"}, {\cf22 "6:37"}, {\cf22 "7:34"}, {\cf22 "8:31"}, {\cf22 "9:43"}, {\cf22 "10:40"}\}, \par
00118                    \{{\cf22 "9:03"}, {\cf22 "10:15"}, {\cf22 "11:12"}, {\cf22 "12:24"}, {\cf22 "1:21"}, {\cf22 "2:33"}, {\cf22 "3:30"}, {\cf22 "4:30"}, {\cf22 "5:27"}, {\cf22 "6:39"}, {\cf22 "7:36"}, {\cf22 "8:33"}, {\cf22 "9:45"}, {\cf22 "10:42"}\}, \par
00119                    \{{\cf22 "9:07"}, {\cf22 "10:19"}, {\cf22 "11:16"}, {\cf22 "12:28"}, {\cf22 "1:25"}, {\cf22 "2:37"}, {\cf22 "3:34"}, {\cf22 "4:34"}, {\cf22 "5:31"}, {\cf22 "6:43"}, {\cf22 "7:40"}, {\cf22 "8:37"}, {\cf22 "9:49"}, {\cf22 "10:46"}\}, \par
00120                    \{{\cf22 "9:14"}, {\cf22 "10:26"}, {\cf22 "11:23"}, {\cf22 "12:35"}, {\cf22 "1:32"}, {\cf22 "2:44"}, {\cf22 "3:41"}, {\cf22 "4:41"}, {\cf22 "5:38"}, {\cf22 "6:50"}, {\cf22 "7:47"}, {\cf22 "8:44"}, {\cf22 "9:56"}, {\cf22 "10:53"}\}, \par
00121                    \{{\cf22 "9:18"}, {\cf22 "10:30"}, {\cf22 "11:27"}, {\cf22 "12:39"}, {\cf22 "1:36"}, {\cf22 "2:48"}, {\cf22 "3:45"}, {\cf22 "4:45"}, {\cf22 "5:42"}, {\cf22 "6:54"}, {\cf22 "7:51"}, {\cf22 "8:48"}, {\cf22 "10:00"}, {\cf22 "10:57"}\}\};\par
00122 \par
00123 \par
00124 HashTable<std::string> E2_table({\cf22 "E2"}, E2_stops_keys);\par
00125 \par
00126 ArrayList<std::string> Fastcat_stops_keys = \{{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy  "}, {\cf22 "Cardella Rd. & 'M' Street"},\par
00127                        {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}\};\par
00128 \par
00129 \par
00130 ArrayList<std::list<std::string>> Fastcat_stops_values = \{\{{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, \par
00131                           {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}\}, \par
00132                           \{{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}\}, \par
00133                           \{{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}\}, \par
00134                           \{{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, \par
00135                            {\cf22 "9:08"}, {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}\}, \par
00136                            \{{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}\}, \par
00137                            \{{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}\}, \par
00138                            \{{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"}\}, \par
00139                            \{{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}\}, \par
00140                            \{{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}\}\};\par
00141 \par
00142 \par
00143 HashTable<std::string> Fastcat_table({\cf22 "Fastcat"}, Fastcat_stops_keys);\par
00144 \par
00145 ArrayList<std::string> Fastcat2_stops_keys = \{{\cf22 "University Surgery Center"}, {\cf22 "Promenade Center"}, {\cf22 "Yosemite Crossings Shopping Center"}, {\cf22 "TriCollege/Mercy  "}, {\cf22 "Cardella Rd. & 'M' Street"},\par
00146                        {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, {\cf22 "Yosemite & Cordova (Merced Physician Center)"}, {\cf22 "Moraga Subdivision"}\};\par
00147 \par
00148 \par
00149 ArrayList<std::list<std::string>> Fastcat2_stops_values = \{\{{\cf22 "8:30"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, {\cf22 "1:01"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:34"}, {\cf22 "10:53"}, {\cf22 "11:57"}, \par
00150                           {\cf22 "12:61"}, {\cf22 "2:20"}, {\cf22 "3:24"}, {\cf22 "4:31"}, {\cf22 "5:50"}, {\cf22 "6:54"}, {\cf22 "8:13"}, {\cf22 "9:17"}, {\cf22 "9:14"}, {\cf22 "10:33"}, {\cf22 "11:37"}, {\cf22 "12:41"}, {\cf22 "1:45"}, {\cf22 "3:04"}, {\cf22 "4:08"}, {\cf22 "5:15"}, {\cf22 "6:34"}, {\cf22 "7:38"}, {\cf22 "8:57"}, {\cf22 "REQ"}\}, \par
00151                           \{{\cf22 "8:34"}, {\cf22 "9:38"}, {\cf22 "10:57"}, {\cf22 "12:01"}, {\cf22 "1:05"}, {\cf22 "2:24"}, {\cf22 "3:28"}, {\cf22 "4:35"}, {\cf22 "5:54"}, {\cf22 "6:58"}, {\cf22 "8:17"}, {\cf22 "9:21"}\}, \par
00152                           \{{\cf22 "8:37"}, {\cf22 "9:41"}, {\cf22 "11:00"}, {\cf22 "12:04"}, {\cf22 "1:08"}, {\cf22 "2:27"}, {\cf22 "3:31"}, {\cf22 "4:38"}, {\cf22 "5:57"}, {\cf22 "7:01"}, {\cf22 "8:20"}, {\cf22 "9:24"}\}, \par
00153                           \{{\cf22 "8:39"}, {\cf22 "9:43"}, {\cf22 "11:02"}, {\cf22 "12:06"}, {\cf22 "1:10"}, {\cf22 "2:29"}, {\cf22 "3:33"}, {\cf22 "4:40"}, {\cf22 "5:59"}, {\cf22 "7:03"}, {\cf22 "8:22"}, {\cf22 "9:26"}, \par
00154                            {\cf22 "9:08"}, {\cf22 "10:27"}, {\cf22 "11:31"}, {\cf22 "12:35"}, {\cf22 "1:39"}, {\cf22 "2:58"}, {\cf22 "4:02"}, {\cf22 "5:09"}, {\cf22 "6:28"}, {\cf22 "7:32"}, {\cf22 "8:51"}, {\cf22 "REQ"}\}, \par
00155                            \{{\cf22 "8:43"}, {\cf22 "9:47"}, {\cf22 "11:06"}, {\cf22 "12:10"}, {\cf22 "1:14"}, {\cf22 "2:33"}, {\cf22 "3:37"}, {\cf22 "4:44"}, {\cf22 "6:03"}, {\cf22 "7:07"}, {\cf22 "8:26"}, {\cf22 "9:30"}\}, \par
00156                            \{{\cf22 "8:47"}, {\cf22 "9:51"}, {\cf22 "11:10"}, {\cf22 "12:14"}, {\cf22 "1:18"}, {\cf22 "2:37"}, {\cf22 "3:41"}, {\cf22 "4:48"}, {\cf22 "6:07"}, {\cf22 "7:11"}, {\cf22 "8:30"}, {\cf22 "9:34"}\}, \par
00157                            \{{\cf22 "9:25"}, {\cf22 "10:44"}, {\cf22 "11:48"}, {\cf22 "12:52"}, {\cf22 "2:11"}, {\cf22 "3:15"}, {\cf22 "4:22"}, {\cf22 "5:41"}, {\cf22 "6:45"}, {\cf22 "8:04"}, {\cf22 "9:08"}\}, \par
00158                            \{{\cf22 "9:11"}, {\cf22 "10:30"}, {\cf22 "11:34"}, {\cf22 "12:38"}, {\cf22 "1:42"}, {\cf22 "3:01"}, {\cf22 "4:05"}, {\cf22 "5:12"}, {\cf22 "6:31"}, {\cf22 "7:35"}, {\cf22 "8:54"}, {\cf22 "REQ"}\}, \par
00159                            \{{\cf22 "9:17"}, {\cf22 "10:36"}, {\cf22 "11:40"}, {\cf22 "12:44"}, {\cf22 "1:48"}, {\cf22 "3:07"}, {\cf22 "4:11"}, {\cf22 "5:18"}, {\cf22 "6:37"}, {\cf22 "7:41"}, {\cf22 "9:00"}, {\cf22 "REQ"}\}\};\par
00160 \par
00161 \par
00162 HashTable<std::string> Fastcat2_table({\cf22 "Fastcat 2"}, Fastcat_stops_keys);\par
00163 \par
00164 ArrayList<std::string> G_line_stops_keys = \{{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, {\cf22 "University Transit Center"}, \par
00165                      {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}\};\par
00166 \par
00167 \par
00168 ArrayList<std::list<std::string>> G_line_stops_values = \{\{{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}\}, \par
00169                        \{{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}\}, \par
00170                        \{{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}\}, \par
00171                        \{{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}\}, \par
00172                        \{{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}\}, \par
00173                        \{{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}\}, \par
00174                        \{{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}\}, \par
00175                        \{{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}\}, \par
00176                        \{{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}\}, \par
00177                        \{{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}\}\};\par
00178 \par
00179 \par
00180 HashTable<std::string> G_line_table({\cf22 "G Line"}, G_line_stops_keys);\par
00181 \par
00182 \par
00183 ArrayList<std::string> yosemite_express_stops_keys = \{{\cf22 "R Street Village Apts"}, {\cf22 "El Redondo Dr"}, {\cf22 "Compass Pointe Apts"}, {\cf22 "Merced College The Bus Terminal"}, {\cf22 "M St. At Bellevue RD"}, \par
00184                                {\cf22 "University Transit Center"}, {\cf22 "Amtrak Station"}, {\cf22 "K St. Between 18th & 19th"}, {\cf22 "UC Merced Downtown Campus Center"}, {\cf22 "Merced Transpo"}\};\par
00185 \par
00186 \par
00187 ArrayList<std::list<std::string>> yosemite_express_stops_values = \{\{{\cf22 "6:30"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "7:38"}, {\cf22 "9:01"}, {\cf22 "10:09"}, {\cf22 "11:17"}, {\cf22 "12:25"}, {\cf22 "1:48"}, {\cf22 "3:01"}, {\cf22 "4:09"}, {\cf22 "5:32"}, {\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "REQ:"}\}, \par
00188                                  \{{\cf22 "6:33"}, {\cf22 "7:41"}, {\cf22 "9:04"}, {\cf22 "10:12"}, {\cf22 "11:20"}, {\cf22 "12:28"}, {\cf22 "1:51"}, {\cf22 "3:04"}, {\cf22 "4:12"}, {\cf22 "5:35"}, {\cf22 "6:43"}, {\cf22 "7:51"}, {\cf22 "9:14"}, {\cf22 "REQ:"}\}, \{{\cf22 "6:35"}, {\cf22 "7:43"}, {\cf22 "9:06"}, {\cf22 "10:14"}, {\cf22 "11:22"}, {\cf22 "12:30"}, {\cf22 "1:53"}, {\cf22 "3:06"}, {\cf22 "4:14"}, {\cf22 "5:37"}, {\cf22 "6:45"}, {\cf22 "7:53"}, {\cf22 "9:16"}, {\cf22 "REQ:"}\}, \par
00189                                  \{{\cf22 "6:40"}, {\cf22 "7:48"}, {\cf22 "9:11"}, {\cf22 "10:19"}, {\cf22 "11:27"}, {\cf22 "12:35"}, {\cf22 "1:58"}, {\cf22 "3:11"}, {\cf22 "4:19"}, {\cf22 "5:42"}, {\cf22 "6:50"}, {\cf22 "7:58"}, {\cf22 "9:21"}, {\cf22 "REQ:"}\}, \{{\cf22 "6:46"}, {\cf22 "7:54"}, {\cf22 "9:17"}, {\cf22 "10:25"}, {\cf22 "11:33"}, {\cf22 "12:41"}, {\cf22 "2:04"}, {\cf22 "3:17"}, {\cf22 "4:25"}, {\cf22 "5:48"}, {\cf22 "6:56"}, {\cf22 "8:04"}, {\cf22 "9:27"}, {\cf22 "REQ:"}\}, \par
00190                                  \{{\cf22 "6:57"}, {\cf22 "8:20"}, {\cf22 "9:28"}, {\cf22 "10:36"}, {\cf22 "11:44"}, {\cf22 "1:07"}, {\cf22 "2:15"}, {\cf22 "3:28"}, {\cf22 "4:51"}, {\cf22 "5:59"}, {\cf22 "7:07"}, {\cf22 "8:30"}, {\cf22 "9:38"}, {\cf22 "REQ:"}\}, \{{\cf22 "7:18"}, {\cf22 "8:41"}, {\cf22 "9:49"}, {\cf22 "10:57"}, {\cf22 "12:05"}, {\cf22 "1:28"}, {\cf22 "2:36"}, {\cf22 "3:49"}, {\cf22 "5:12"}, {\cf22 "6:20"}, {\cf22 "7:28"}, {\cf22 "8:51"}, {\cf22 "9:59"}\}, \par
00191                                  \{{\cf22 "7:20"}, {\cf22 "8:43"}, {\cf22 "9:51"}, {\cf22 "10:59"}, {\cf22 "12:07"}, {\cf22 "1:30"}, {\cf22 "2:43"}, {\cf22 "3:51"}, {\cf22 "5:14"}, {\cf22 "6:22"}, {\cf22 "7:30"}, {\cf22 "8:53"}, {\cf22 "10:01"}\}, \{{\cf22 "7:22"}, {\cf22 "8:45"}, {\cf22 "9:53"}, {\cf22 "11:01"}, {\cf22 "12:09"}, {\cf22 "1:32"}, {\cf22 "2:45"}, {\cf22 "3:53"}, {\cf22 "5:16"}, {\cf22 "6:24"}, {\cf22 "7:32"}, {\cf22 "8:55"}, {\cf22 "10:03"}\}, \par
00192                                  \{{\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}, {\cf22 "REQ"}\}\};\par
00193 \par
00194 \par
00195 HashTable<std::string> yosemite_express_table({\cf22 "Yosemite Express"}, yosemite_express_stops_keys);\par
00196 \par
00197 ArrayList<HashTable<std::string>> bus_stops_tables = \{bobcat_table, C1_table, C2_table, E1_table, E2_table, Fastcat_table, Fastcat2_table, G_line_table, yosemite_express_table\}; \par
00198 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tester.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v tester.cpp}
{\xe \v tester.cpp}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "ArrayList.h"}\par
{\f2 #include "stops_data.h"}\par
{\f2 #include <cpr/cpr.h>}\par
{\f2 #include <nlohmann/json.hpp>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for tester.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tester_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b apiCalls} (std::string point1, std::string point2, std::string point3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v apiCalls\:tester.cpp}
{\xe \v tester.cpp\:apiCalls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float apiCalls (std::string point1, std::string point2, std::string point3)}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b tester.cpp}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tester_8cpp_aef79fcf6e4eb190dcc020f8169e20ba4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:tester.cpp}
{\xe \v tester.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b tester.cpp}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tester_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tester.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include "ArrayList.h"}\par
00003 {\cf21 #include "stops_data.h"}\par
00004 {\cf21 #include <cpr/cpr.h>}\par
00005 {\cf21 #include <nlohmann/json.hpp>}\par
00006 \par
00007 {\cf17 using }json = nlohmann::json;\par
00008 \par
00009 {\cf18 float} apiCalls(std::string point1, std::string point2, std::string point3)\{\par
00010 std::vector<std::vector<float>> coordinates1;\par
00011 {\cf18 float} distanceMiles;\par
00012   cpr::Response point1_call = cpr::Get(cpr::Url\{{\cf22 "https://api.openrouteservice.org/geocode/search"}\},\par
00013                           cpr::Parameters\{\{{\cf22 "text"}, point1\}\},\par
00014                           cpr::Header\{\{{\cf22 "Authorization"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}\}\par
00015                           );\par
00016 \par
00017     json jsonResponse = json::parse(point1_call.text);\par
00018     json features = jsonResponse[{\cf22 "features"}];\par
00019     {\cf19 for} ({\cf17 auto}& feature : features)\{\par
00020         {\cf17 auto} coords = feature[{\cf22 "geometry"}][{\cf22 "coordinates"}];\par
00021         {\cf18 float} lon = coords[0];\par
00022         {\cf18 float} lat = coords[1];\par
00023         coordinates1.push_back(\{lon, lat\});\par
00024         {\cf19 break};\par
00025     \}\par
00026 \par
00027     cpr::Response point2_call = cpr::Get(cpr::Url\{{\cf22 "https://api.openrouteservice.org/geocode/search"}\},\par
00028                           cpr::Parameters\{\{{\cf22 "text"}, point2\}\},\par
00029                           cpr::Header\{\{{\cf22 "Authorization"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}\}\par
00030                           );\par
00031 \par
00032     json jsonResponse2 = json::parse(point2_call.text);\par
00033     json features2 = jsonResponse2[{\cf22 "features"}];\par
00034     {\cf19 for} ({\cf17 auto}& feature : features2)\{\par
00035         {\cf17 auto} coords2 = feature[{\cf22 "geometry"}][{\cf22 "coordinates"}];\par
00036         {\cf18 float} lon = coords2[0];\par
00037         {\cf18 float} lat = coords2[1];\par
00038         coordinates1.push_back(\{lon, lat\});\par
00039         {\cf19 break};\par
00040     \}\par
00041 \par
00042     cpr::Response point3_call = cpr::Get(cpr::Url\{{\cf22 "https://api.openrouteservice.org/geocode/search"}\},\par
00043                           cpr::Parameters\{\{{\cf22 "text"}, point3\}\},\par
00044                           cpr::Header\{\{{\cf22 "Authorization"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}\}\par
00045                           );\par
00046 \par
00047     json jsonResponse3 = json::parse(point3_call.text);\par
00048     json features3 = jsonResponse3[{\cf22 "features"}];\par
00049     {\cf19 for} ({\cf17 auto}& feature : features3)\{\par
00050         {\cf17 auto} coords3 = feature[{\cf22 "geometry"}][{\cf22 "coordinates"}];\par
00051         {\cf18 float} lon = coords3[0];\par
00052         {\cf18 float} lat = coords3[1];\par
00053         coordinates1.push_back(\{lon, lat\});\par
00054         {\cf19 break};\par
00055     \}\par
00056 \par
00057     json requestBody;\par
00058     requestBody[{\cf22 "coordinates"}] = coordinates1;\par
00059     {\cf20 //std::cout << requestBody.dump(2);}\par
00060     cpr::Response firstSegment = cpr::Post(cpr::Url\{{\cf22 "https://api.openrouteservice.org/v2/directions/driving-car"}\},\par
00061                           cpr::Header\{\{{\cf22 "Authorization"}, {\cf22 "5b3ce3597851110001cf6248e4dacfb3ab0a4b1d83a0511ffdd542f3"}\}, \{{\cf22 "Content-Type"}, {\cf22 "application/json"}\}\},\par
00062                           cpr::Body\{requestBody.dump()\}\par
00063                           );\par
00064           json jsonResponse4 = json::parse(firstSegment.text);\par
00065           json features4 = jsonResponse4[{\cf22 "routes"}];\par
00066           {\cf19 for} ({\cf17 auto}& feature : features4)\{\par
00067               {\cf18 float} distanceMeters = feature[{\cf22 "summary"}][{\cf22 "distance"}].get<{\cf18 float}>();\par
00068               distanceMiles = distanceMeters / 1609;\par
00069               {\cf19 break};\par
00070           \}\par
00071   {\cf19 return} distanceMiles;\par
00072 \}\par
00073 \par
00074 {\cf18 int}  main()\{\par
00075 \par
00076 std::string point1 = {\cf22 "3304, Santa Rosa Court, Merced, Merced County, California, 95348, United States"};\par
00077 std::string point2 = {\cf22 "355 West 24th Street, Merced, CA"};\par
00078 std::string point3 = {\cf22 "3706 El Redondo Drive"};\par
00079 \par
00080 std::cout << apiCalls(point1, point2, point3) << std::endl;\par
00081 std::cout << places.index({\cf22 "Amtrak Station"});\par
00082 \par
00083 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tester.py File Reference\par \pard\plain 
{\tc\tcl2 \v tester.py}
{\xe \v tester.py}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b tester}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tester.simple_calculator} (expression)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tester.py\par \pard\plain 
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 def }simple_calculator(expression):\par
00002    list_expression = list(expression)\par
00003    print(list_expression)\par
00004    int_list_expression = []\par
00005    i = 0\par
00006    {\cf19 while} i < len(list_expression):\par
00007       combined_digit = {\cf22 ""}\par
00008       {\cf19 while} list_expression[i].isdigit() {\cf19 and} i < len(list_expression):\par
00009          combined_digit += list_expression[i]\par
00010          i+= 1\par
00011       int_list_expression.append(int(combined_digit))\par
00012       {\cf19 if} list_expression[i] == {\cf22 '+'} {\cf19 or} list_expression[i] == {\cf22 '-'}:\par
00013          int_list_expression.append(list_expression[i])\par
00014          i+= 1\par
00015       final = int_list_expression[0]\par
00016    {\cf19 for} i {\cf19 in} range(len(int_list_expression) - 1):\par
00017        {\cf19 if} int_list_expression[i] == {\cf22 '+'}:\par
00018            final += int_list_expression[i + 1]\par
00019        {\cf19 elif} int_list_expression[i] == {\cf22 '-'}:\par
00020               final -= int_list_expression[i + 1]\par
00021    {\cf19 return} final\par
00022          \par
00023 print(simple_calculator({\cf22 "655+5+7"}))\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
testing.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v testing.cpp}
{\xe \v testing.cpp}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for testing.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:testing.cpp}
{\xe \v testing.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b testing.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
testing.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 \par
00003 {\cf18 int} main() \{\par
00004     std::cout << {\cf22 "Hello world"};\par
00005 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
